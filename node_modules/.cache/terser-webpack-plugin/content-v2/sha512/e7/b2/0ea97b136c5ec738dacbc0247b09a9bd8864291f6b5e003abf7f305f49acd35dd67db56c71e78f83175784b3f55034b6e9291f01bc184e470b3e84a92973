{"code":"(this[\"webpackJsonpxstate-react-typescript-template\"]=this[\"webpackJsonpxstate-react-typescript-template\"]||[]).push([[0],{20:function(e,t,n){},35:function(e,t,n){\"use strict\";n.r(t);var a=n(24),o=n(10),i=(n(20),n(7),n(21)),r=n(41),s=n(4),c=n(40),m=n(39);function p(e){return Object(s.k)((t=>({type:\"SPEAK\",value:e})))}function l(){return Object(s.k)(\"LISTEN\")}const d={John:{person:\"John Appleseed\"},Jack:{person:\"Jack Orangeseed\"},David:{person:\"David Grapeseed\"},Robert:{person:\"Robert Watermelonseed\"},Jennifer:{person:\"Jennifer Bananaseed\"},Jessica:{person:\"Jessica Pineappleseed\"},john:{person:\"john appleseed\"},jack:{person:\"jack orangeseed\"},david:{person:\"david grapeseed\"},robert:{person:\"robert watermelonseed\"},jennifer:{person:\"jennifer bananaseed\"},jessica:{person:\"jessica pineappleseed\"},Zhe:{person:\"Zhe Han\"},Siyi:{person:\"Siyi Gu\"},\"Jae Eun\":{person:\"Jae Eun Hong\"},Oreen:{person:\"Oreen Yousuf\"},Angeliki:{person:\"Angeliki Zagoura\"},Flor:{person:\"Flor Ortiz\"},Emma:{person:\"Emma Waller\\xf6\"},zhe:{person:\"zhe han\"},siyi:{person:\"siyi gu\"},\"jae eun\":{person:\"jae eun hong\"},oreen:{person:\"oreen yousuf\"},angeliki:{person:\"angeliki zagoura\"},flor:{person:\"flor ortiz\"},emma:{person:\"emma waller\\xf6\"},Monday:{day:\"Monday\"},\"on Monday\":{day:\"Monday\"},Tuesday:{day:\"Tuesday\"},\"on Tuesday\":{day:\"Tuesday\"},Wednesday:{day:\"Wednesday\"},\"on Wednesday\":{day:\"Wednesday\"},Thursday:{day:\"Thursday\"},\"on Thursday\":{day:\"Thursday\"},Friday:{day:\"Friday\"},\"on Friday\":{day:\"Friday\"},Saturday:{day:\"Saturday\"},\"on Saturday\":{day:\"Saturday\"},Sunday:{day:\"Sunday\"},\"on Sunday\":{day:\"Sunday\"},\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"},one:{time:\"01:00\"},two:{time:\"02:00\"},three:{time:\"03:00\"},four:{time:\"04:00\"},five:{time:\"05:00\"},six:{time:\"06:00\"},seven:{time:\"07:00\"},eight:{time:\"08:00\"},nine:{time:\"09:00\"},ten:{time:\"10:00\"},eleven:{time:\"11:00\"},twelve:{time:\"12:00\"},thirteen:{time:\"13:00\"},fourteen:{time:\"14:00\"},fifteen:{time:\"15:00\"},sixteen:{time:\"16:00\"},seventeen:{time:\"17:00\"},eighteen:{time:\"18:00\"},nineteen:{time:\"19:00\"},twenty:{time:\"20:00\"},\"twenty one\":{time:\"21:00\"},\"twenty two\":{time:\"22:00\"},\"twenty three\":{time:\"23:00\"},\"twenty four\":{time:\"00:00\"},\"at 1\":{time:\"01:00\"},\"at 2\":{time:\"02:00\"},\"at 3\":{time:\"03:00\"},\"at 4\":{time:\"04:00\"},\"at 5\":{time:\"05:00\"},\"at 6\":{time:\"06:00\"},\"at 7\":{time:\"07:00\"},\"at 8\":{time:\"08:00\"},\"at 9\":{time:\"09:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 13\":{time:\"13:00\"},\"at 14\":{time:\"14:00\"},\"at 15\":{time:\"15:00\"},\"at 16\":{time:\"16:00\"},\"at 17\":{time:\"17:00\"},\"at 18\":{time:\"18:00\"},\"at 19\":{time:\"19:00\"},\"at 20\":{time:\"20:00\"},\"at 21\":{time:\"21:00\"},\"at 22\":{time:\"22:00\"},\"at 23\":{time:\"23:00\"},\"at 24\":{time:\"00:00\"},1:{time:\"01:00\"},2:{time:\"02:00\"},3:{time:\"03:00\"},4:{time:\"04:00\"},5:{time:\"05:00\"},6:{time:\"06:00\"},7:{time:\"07:00\"},8:{time:\"08:00\"},9:{time:\"09:00\"},10:{time:\"10:00\"},11:{time:\"11:00\"},12:{time:\"12:00\"},13:{time:\"13:00\"},14:{time:\"14:00\"},15:{time:\"15:00\"},16:{time:\"16:00\"},17:{time:\"17:00\"},18:{time:\"18:00\"},19:{time:\"19:00\"},20:{time:\"20:00\"},21:{time:\"21:00\"},22:{time:\"22:00\"},23:{time:\"23:00\"},24:{time:\"00:00\"}},y={yes:!0,Yes:!0,\"yes of course\":!0,\"Yes of course\":!0,sure:!0,Sure:!0,absolutely:!0,Absolutely:!0,perfect:!0,Perfect:!0,no:!1,No:!1,\"no way\":!1,\"No way\":!1};const u={initial:\"init\",states:{init:{on:{CLICK:\"welcome\"}},welcome:Object(o.a)({on:{RECOGNISED:{target:\"query\",actions:Object(s.b)((e=>({option:e.recResult})))}}},(E=\"What would you like to do?\",{initial:\"prompt\",states:{prompt:{entry:p(E),on:{ENDSPEECH:\"ask\"}},ask:{entry:Object(s.k)(\"LISTEN\")}}})),query:{invoke:{id:\"rasa\",src:(e,t)=>h(e.option),onDone:{target:\"menu\",actions:[Object(s.b)(((e,t)=>({option:t.data.intent.name}))),(e,t)=>console.log(t.data)]},onError:{target:\"welcome\",actions:(e,t)=>console.log(t.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:\"todo\",cond:e=>\"todo\"===e.option},{target:\"timer\",cond:e=>\"timer\"===e.option},{target:\"appointment\",cond:e=>\"appointment\"===e.option}]},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"OK. I see.\"})))},nomatch:{entry:p(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"Let's create a to do item\"})))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"Let's create a timer\"})))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"Let's create an appointment\"})))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:e=>\"person\"in(d[e.recResult]||{}),actions:Object(s.b)((e=>({person:d[e.recResult].person}))),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:p(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:l()},nomatch:{entry:p(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:e=>\"day\"in(d[e.recResult]||{}),actions:Object(s.b)((e=>({day:d[e.recResult].day}))),target:\"wholeday\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"OK. \".concat(e.person,\". On which day is your meeting?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:l()},nomatch:{entry:p(\"Sorry I don't know which day are you talking about\"),on:{ENDSPEECH:\"prompt\"}}}},wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:e=>!0===y[e.recResult],target:\"timefixed\"},{cond:e=>!1===y[e.recResult],target:\"settime\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"Good. Appointment is on \".concat(e.day,\". Will it take the whole day?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:l()},nomatch:{entry:p(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},timefixed:{initial:\"prompt\",on:{RECOGNISED:[{cond:e=>!0===y[e.recResult],target:\"Finished\"},{cond:e=>!1===y[e.recResult],target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"Good. Do you want to me create an appointment with \".concat(e.person,\" on \").concat(e.day,\"for the whole day?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:l()},nomatch:{entry:p(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},settime:{initial:\"prompt\",on:{RECOGNISED:[{cond:e=>\"time\"in(d[e.recResult]||{}),actions:Object(s.b)((e=>({time:d[e.recResult].time}))),target:\"withtime\"},{target:\".nomatch\"}]},states:{prompt:{entry:p(\"What time is your meeting\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:l()},nomatch:{entry:p(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},withtime:{initial:\"prompt\",on:{RECOGNISED:[{cond:e=>!0===y[e.recResult],target:\"Finished\"},{cond:e=>!1===y[e.recResult],target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(s.k)((e=>({type:\"SPEAK\",value:\"Good. Do you want to me create an appointment with \".concat(e.person,\" on \").concat(e.day,\" at \").concat(e.time,\"?\")}))),on:{ENDSPEECH:\"ask\"}},ask:{entry:l()},nomatch:{entry:p(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},Finished:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:p(\"Your appointment has been created!\")}}}}};var E;const h=e=>fetch(new Request(\"https://cors-anywhere.herokuapp.com/https://intents-oyousuf.herokuapp.com/model/parse\",{method:\"POST\",headers:{Origin:\"http://localhost:3000/react-xstate-colourchanger\"},body:'{\"text\": \"'.concat(e,'\"}')})).then((e=>e.json()));var g=n(19),S=n(12);Object(m.a)({url:\"https://statecharts.io/inspect\",iframe:!1});const b=Object(r.a)({id:\"root\",type:\"parallel\",states:{dm:Object(o.a)({},u),asrtts:{initial:\"idle\",states:{idle:{on:{LISTEN:\"recognising\",SPEAK:{target:\"speaking\",actions:Object(s.b)(((e,t)=>({ttsAgenda:t.value})))}}},recognising:{entry:\"recStart\",exit:\"recStop\",on:{ASRRESULT:{actions:[\"recLogResult\",Object(s.b)(((e,t)=>({recResult:t.value})))],target:\".match\"},RECOGNISED:\"idle\"},states:{match:{entry:Object(s.k)(\"RECOGNISED\")}}},speaking:{entry:\"ttsStart\",on:{ENDSPEECH:\"idle\"}}}}}},{actions:{recLogResult:e=>{console.log(\"<< ASR: \"+e.recResult)},test:()=>{console.log(\"test\")},logIntent:e=>{console.log(\"<< NLU intent: \"+e.nluData.intent.name)}}}),O=e=>{switch(!0){case e.state.matches({asrtts:\"recognising\"}):return Object(S.jsx)(\"button\",Object(o.a)(Object(o.a)({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},e),{},{children:\"Listening...\"}));case e.state.matches({asrtts:\"speaking\"}):return Object(S.jsx)(\"button\",Object(o.a)(Object(o.a)({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},e),{},{children:\"Speaking...\"}));default:return Object(S.jsx)(\"button\",Object(o.a)(Object(o.a)({type:\"button\",className:\"glow-on-hover\"},e),{},{children:\"Click to start\"}))}};function j(){const e=Object(g.useSpeechSynthesis)({onEnd:()=>{l(\"ENDSPEECH\")}}),t=e.speak,n=e.cancel,o=(e.speaking,Object(g.useSpeechRecognition)({onResult:e=>{l({type:\"ASRRESULT\",value:e})}})),i=o.listen,r=(o.listening,o.stop),s=Object(c.b)(b,{devTools:!0,actions:{recStart:Object(c.a)((()=>{console.log(\"Ready to receive a color command.\"),i({interimResults:!1,continuous:!0})})),recStop:Object(c.a)((()=>{console.log(\"Recognition stopped.\"),r()})),changeColour:Object(c.a)((e=>{console.log(\"Repainting...\"),document.body.style.background=e.recResult})),ttsStart:Object(c.a)(((e,n)=>{console.log(\"Speaking...\"),t({text:e.ttsAgenda})})),ttsCancel:Object(c.a)(((e,t)=>{console.log(\"TTS STOP...\"),n()}))}}),m=Object(a.a)(s,3),p=m[0],l=m[1];m[2];return Object(S.jsx)(\"div\",{className:\"App\",children:Object(S.jsx)(O,{state:p,onClick:()=>l(\"CLICK\")})})}const k=document.getElementById(\"root\");i.render(Object(S.jsx)(j,{}),k)}},[[35,1,2]]]);","name":"static/js/main.ccabf94a.chunk.js","map":{"version":3,"sources":["static/js/main.ccabf94a.chunk.js"],"names":["this","push","20","module","exports","__webpack_require__","35","__webpack_exports__","r","slicedToArray","objectSpread2","react_dom","Machine","actions","useMachine","browser","say","text","Object","_context","type","value","dmAppointment_listen","grammar","John","person","Jack","David","Robert","Jennifer","Jessica","john","jack","david","robert","jennifer","jessica","Zhe","Siyi","Jae Eun","Oreen","Angeliki","Flor","Emma","zhe","siyi","jae eun","oreen","angeliki","flor","emma","Monday","day","on Monday","Tuesday","on Tuesday","Wednesday","on Wednesday","Thursday","on Thursday","Friday","on Friday","Saturday","on Saturday","Sunday","on Sunday","at one","time","at two","at three","at four","at five","at six","at seven","at eight","at nine","at ten","at eleven","at twelve","at thirteen","at fourteen","at fifteen","at sixteen","at seventeen","at eighteen","at nineteen","at twenty","at twenty one","at twenty two","at twenty three","at twenty four","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty","twenty one","twenty two","twenty three","twenty four","at 1","at 2","at 3","at 4","at 5","at 6","at 7","at 8","at 9","at 10","at 11","at 12","at 13","at 14","at 15","at 16","at 17","at 18","at 19","at 20","at 21","at 22","at 23","at 24","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","21","22","23","24","grammar2","yes","Yes","yes of course","Yes of course","sure","Sure","absolutely","Absolutely","perfect","Perfect","no","No","no way","No way","dmMachine","initial","states","init","on","CLICK","welcome","RECOGNISED","target","context","option","recResult","prompt","entry","ENDSPEECH","ask","query","invoke","id","src","event","nluRequest","onDone","data","intent","name","console","log","onError","menu","cond","nomatch","todo","timer","appointment","who","concat","wholeday","timefixed","settime","withtime","Finished","fetch","Request","proxyurl","method","headers","Origin","body","then","json","dist","jsx_runtime","url","iframe","machine","dm","asrtts","idle","LISTEN","SPEAK","ttsAgenda","recognising","exit","ASRRESULT","match","speaking","recLogResult","test","logIntent","nluData","ReactiveButton","props","state","matches","className","style","animation","children","App","_useSpeechSynthesis","onEnd","send","speak","cancel","_useSpeechRecognition","onResult","result","listen","stop","listening","_useMachine","devTools","recStart","interimResults","continuous","recStop","changeColour","document","background","ttsStart","effect","ttsCancel","_useMachine2","current","onClick","rootElement","getElementById"],"mappings":"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"},"input":"(this[\"webpackJsonpxstate-react-typescript-template\"] = this[\"webpackJsonpxstate-react-typescript-template\"] || []).push([[0],{\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(24);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js + 1 modules\nvar objectSpread2 = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./src/styles.scss\nvar styles = __webpack_require__(20);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(21);\n\n// EXTERNAL MODULE: ./node_modules/xstate/es/Machine.js + 2 modules\nvar Machine = __webpack_require__(41);\n\n// EXTERNAL MODULE: ./node_modules/xstate/es/actions.js\nvar actions = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/@xstate/react/es/useMachine.js + 3 modules\nvar useMachine = __webpack_require__(40);\n\n// EXTERNAL MODULE: ./node_modules/@xstate/inspect/es/browser.js + 3 modules\nvar browser = __webpack_require__(39);\n\n// CONCATENATED MODULE: ./src/dmAppointment.ts\nfunction say(text){return Object(actions[\"k\" /* send */])(_context=>({type:\"SPEAK\",value:text}));}function dmAppointment_listen(){return Object(actions[\"k\" /* send */])(\"LISTEN\");}const grammar={// Here are some common names in English that I found are easier for the robot to understand.\n\"John\":{person:\"John Appleseed\"},\"Jack\":{person:\"Jack Orangeseed\"},\"David\":{person:\"David Grapeseed\"},\"Robert\":{person:\"Robert Watermelonseed\"},\"Jennifer\":{person:\"Jennifer Bananaseed\"},\"Jessica\":{person:\"Jessica Pineappleseed\"},\"john\":{person:\"john appleseed\"},\"jack\":{person:\"jack orangeseed\"},\"david\":{person:\"david grapeseed\"},\"robert\":{person:\"robert watermelonseed\"},\"jennifer\":{person:\"jennifer bananaseed\"},\"jessica\":{person:\"jessica pineappleseed\"},// Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n\"Zhe\":{person:\"Zhe Han\"},\"Siyi\":{person:\"Siyi Gu\"},\"Jae Eun\":{person:\"Jae Eun Hong\"},\"Oreen\":{person:\"Oreen Yousuf\"},\"Angeliki\":{person:\"Angeliki Zagoura\"},\"Flor\":{person:\"Flor Ortiz\"},\"Emma\":{person:\"Emma Wallerö\"},\"zhe\":{person:\"zhe han\"},\"siyi\":{person:\"siyi gu\"},\"jae eun\":{person:\"jae eun hong\"},\"oreen\":{person:\"oreen yousuf\"},\"angeliki\":{person:\"angeliki zagoura\"},\"flor\":{person:\"flor ortiz\"},\"emma\":{person:\"emma wallerö\"},//Days of the week with alternating potential utterances ('on')\n\"Monday\":{day:\"Monday\"},\"on Monday\":{day:\"Monday\"},\"Tuesday\":{day:\"Tuesday\"},\"on Tuesday\":{day:\"Tuesday\"},\"Wednesday\":{day:\"Wednesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"Thursday\":{day:\"Thursday\"},\"on Thursday\":{day:\"Thursday\"},\"Friday\":{day:\"Friday\"},\"on Friday\":{day:\"Friday\"},\"Saturday\":{day:\"Saturday\"},\"on Saturday\":{day:\"Saturday\"},\"Sunday\":{day:\"Sunday\"},\"on Sunday\":{day:\"Sunday\"},//times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"},\"one\":{time:\"01:00\"},\"two\":{time:\"02:00\"},\"three\":{time:\"03:00\"},\"four\":{time:\"04:00\"},\"five\":{time:\"05:00\"},\"six\":{time:\"06:00\"},\"seven\":{time:\"07:00\"},\"eight\":{time:\"08:00\"},\"nine\":{time:\"09:00\"},\"ten\":{time:\"10:00\"},\"eleven\":{time:\"11:00\"},\"twelve\":{time:\"12:00\"},\"thirteen\":{time:\"13:00\"},\"fourteen\":{time:\"14:00\"},\"fifteen\":{time:\"15:00\"},\"sixteen\":{time:\"16:00\"},\"seventeen\":{time:\"17:00\"},\"eighteen\":{time:\"18:00\"},\"nineteen\":{time:\"19:00\"},\"twenty\":{time:\"20:00\"},\"twenty one\":{time:\"21:00\"},\"twenty two\":{time:\"22:00\"},\"twenty three\":{time:\"23:00\"},\"twenty four\":{time:\"00:00\"},\"at 1\":{time:\"01:00\"},\"at 2\":{time:\"02:00\"},\"at 3\":{time:\"03:00\"},\"at 4\":{time:\"04:00\"},\"at 5\":{time:\"05:00\"},\"at 6\":{time:\"06:00\"},\"at 7\":{time:\"07:00\"},\"at 8\":{time:\"08:00\"},\"at 9\":{time:\"09:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 13\":{time:\"13:00\"},\"at 14\":{time:\"14:00\"},\"at 15\":{time:\"15:00\"},\"at 16\":{time:\"16:00\"},\"at 17\":{time:\"17:00\"},\"at 18\":{time:\"18:00\"},\"at 19\":{time:\"19:00\"},\"at 20\":{time:\"20:00\"},\"at 21\":{time:\"21:00\"},\"at 22\":{time:\"22:00\"},\"at 23\":{time:\"23:00\"},\"at 24\":{time:\"00:00\"},\"1\":{time:\"01:00\"},\"2\":{time:\"02:00\"},\"3\":{time:\"03:00\"},\"4\":{time:\"04:00\"},\"5\":{time:\"05:00\"},\"6\":{time:\"06:00\"},\"7\":{time:\"07:00\"},\"8\":{time:\"08:00\"},\"9\":{time:\"09:00\"},\"10\":{time:\"10:00\"},\"11\":{time:\"11:00\"},\"12\":{time:\"12:00\"},\"13\":{time:\"13:00\"},\"14\":{time:\"14:00\"},\"15\":{time:\"15:00\"},\"16\":{time:\"16:00\"},\"17\":{time:\"17:00\"},\"18\":{time:\"18:00\"},\"19\":{time:\"19:00\"},\"20\":{time:\"20:00\"},\"21\":{time:\"21:00\"},\"22\":{time:\"22:00\"},\"23\":{time:\"23:00\"},\"24\":{time:\"00:00\"}};//second grammar for trues and falses\nconst grammar2={\"yes\":true,\"Yes\":true,\"yes of course\":true,\"Yes of course\":true,\"sure\":true,\"Sure\":true,\"absolutely\":true,\"Absolutely\":true,\"perfect\":true,\"Perfect\":true,\"no\":false,\"No\":false,\"no way\":false,\"No way\":false};/*function promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            ask: {\n                entry: send(\"LISTEN\")\n            },\n        }})\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n   \n    initial: \"init\",\n    states: {\n        init: {\n            on: {\n                CLICK: \"welcome\"\n            }            \n        },        \n\n        welcome: {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")\n        },\n\n\n        query: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I understand.`\n                    })),\n        }, \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n\t\t\t\t\tcond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"wholeday\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`,\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        wholeday: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"time\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirm_meeting_whole_day\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n\t},\n        time: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_time\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.day}. What time is your meeting?`,\n                    \n                    })),\n            on: { ENDSPEECH: \"ask\" }\n                },\n        ask: {\n            entry: listen()\n                },\n        nomatch: {\n            entry: say(\"Sorry I do not know that\"),\n        on: { ENDSPEECH: \"prompt\" }\n                }\n                }\n        },\n        confirm_meeting_whole_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"init\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                }\n\n\t},\n    confirm_time: {\n        initial: \"prompt\",\n        on:  {\n            RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                target: \"who\"\n            },\n    {cond: (context) => (grammar2[context.recResult] === true),\n    target: \"confirmed\"\n    },\n            { target: \".nomatch\" }]\n        },\n        states: {\n            prompt: {\n               entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                })),\n        on: { ENDSPEECH: \"ask\" }\n            },\n    ask: {\n         entry: listen()\n        },\n    nomatch: {\n        entry: say(\"Sorry I do not understand\"),\n    on: { ENDSPEECH: \"prompt\" }\n           }\n            },\n        },\n    confirmed: {\n        initial: \"prompt\",\n        on: { ENDSPEECH: \"init\" },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Your appointment has been created!`\n                }))\n            },\n    }\n    }\n    }})\n*/function promptAsk(prompt){return{initial:'prompt',states:{prompt:{entry:say(prompt),on:{ENDSPEECH:'ask'}},ask:{entry:Object(actions[\"k\" /* send */])('LISTEN')}}};}const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:Object(objectSpread2[\"a\" /* default */])({on:{RECOGNISED:{target:\"query\",actions:Object(actions[\"b\" /* assign */])(context=>{return{option:context.recResult};})}}},promptAsk(\"What would you like to do?\")),query:{invoke:{id:'rasa',src:(context,event)=>nluRequest(context.option),onDone:{target:'menu',actions:[Object(actions[\"b\" /* assign */])((context,event)=>{return{option:event.data.intent.name};}),(context,event)=>console.log(event.data)]},onError:{target:'welcome',actions:(context,event)=>console.log(event.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:'todo',cond:context=>context.option==='todo'},{target:'timer',cond:context=>context.option==='timer'},{target:'appointment',cond:context=>context.option==='appointment'}]},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"OK. I see.\"}))},nomatch:{entry:say(\"Sorry, I don't understand\"),on:{ENDSPEECH:\"prompt\"}}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Let's create a to do item\"}))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Let's create a timer\"}))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Let's create an appointment\"}))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:Object(actions[\"b\" /* assign */])(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:dmAppointment_listen()},nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:Object(actions[\"b\" /* assign */])(context=>{return{day:grammar[context.recResult].day};}),target:\"wholeday\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:dmAppointment_listen()},nomatch:{entry:say(\"Sorry I don't know which day are you talking about\"),on:{ENDSPEECH:\"prompt\"}}}},wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"timefixed\"},{cond:context=>grammar2[context.recResult]===false,target:\"settime\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Good. Appointment is on \".concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:dmAppointment_listen()},nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},timefixed:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\"},{cond:context=>grammar2[context.recResult]===false,target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Good. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\"for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:dmAppointment_listen()},nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},settime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:Object(actions[\"b\" /* assign */])(context=>{return{time:grammar[context.recResult].time};}),target:\"withtime\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"What time is your meeting\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:dmAppointment_listen()},nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},withtime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\"},{cond:context=>grammar2[context.recResult]===false,target:\"who\"},{target:\".nomatch\"}]},states:{prompt:{entry:Object(actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Good. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:dmAppointment_listen()},nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},Finished:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Your appointment has been created!\")}}}}};//the api for rasa to use\nconst proxyurl=\"https://cors-anywhere.herokuapp.com/\";// have to set up temporary permission/access for the robot to not give error: \"Unexpected token S in JSON at position 0\"\nconst rasaurl=\"https://intents-oyousuf.herokuapp.com/model/parse\";const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:\"POST\",headers:{\"Origin\":\"http://localhost:3000/react-xstate-colourchanger\"},body:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());\n// EXTERNAL MODULE: ./node_modules/react-speech-kit/dist/index.js\nvar dist = __webpack_require__(19);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./src/index.tsx\nObject(browser[\"a\" /* inspect */])({url:\"https://statecharts.io/inspect\",iframe:false});const machine=Object(Machine[\"a\" /* Machine */])({id:'root',type:'parallel',states:{dm:Object(objectSpread2[\"a\" /* default */])({},dmMachine),asrtts:{initial:'idle',states:{idle:{on:{LISTEN:'recognising',SPEAK:{target:'speaking',actions:Object(actions[\"b\" /* assign */])((_context,event)=>{return{ttsAgenda:event.value};})}}},recognising:{entry:'recStart',exit:'recStop',on:{ASRRESULT:{actions:['recLogResult',Object(actions[\"b\" /* assign */])((_context,event)=>{return{recResult:event.value};})],target:'.match'},RECOGNISED:'idle'},states:{match:{entry:Object(actions[\"k\" /* send */])('RECOGNISED')}}},speaking:{entry:'ttsStart',on:{ENDSPEECH:'idle'}}}}}},{actions:{recLogResult:context=>{/* context.recResult = event.recResult; */console.log('<< ASR: '+context.recResult);},test:()=>{console.log('test');},logIntent:context=>{/* context.nluData = event.data */console.log('<< NLU intent: '+context.nluData.intent.name);}}});const ReactiveButton=props=>{switch(true){case props.state.matches({asrtts:'recognising'}):return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},props),{},{children:\"Listening...\"}));case props.state.matches({asrtts:'speaking'}):return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},props),{},{children:\"Speaking...\"}));default:return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\"},props),{},{children:\"Click to start\"}));}};function App(){const _useSpeechSynthesis=Object(dist[\"useSpeechSynthesis\"])({onEnd:()=>{send('ENDSPEECH');}}),speak=_useSpeechSynthesis.speak,cancel=_useSpeechSynthesis.cancel,speaking=_useSpeechSynthesis.speaking;const _useSpeechRecognition=Object(dist[\"useSpeechRecognition\"])({onResult:result=>{send({type:\"ASRRESULT\",value:result});}}),listen=_useSpeechRecognition.listen,listening=_useSpeechRecognition.listening,stop=_useSpeechRecognition.stop;const _useMachine=Object(useMachine[\"b\" /* useMachine */])(machine,{devTools:true,actions:{recStart:Object(useMachine[\"a\" /* asEffect */])(()=>{console.log('Ready to receive a color command.');listen({interimResults:false,continuous:true});}),recStop:Object(useMachine[\"a\" /* asEffect */])(()=>{console.log('Recognition stopped.');stop();}),changeColour:Object(useMachine[\"a\" /* asEffect */])(context=>{console.log('Repainting...');document.body.style.background=context.recResult;}),ttsStart:Object(useMachine[\"a\" /* asEffect */])((context,effect)=>{console.log('Speaking...');speak({text:context.ttsAgenda});}),ttsCancel:Object(useMachine[\"a\" /* asEffect */])((context,effect)=>{console.log('TTS STOP...');cancel();})/* speak: asEffect((context) => {\n\t     * console.log('Speaking...');\n             *     speak({text: context.ttsAgenda })\n             * } */}}),_useMachine2=Object(slicedToArray[\"a\" /* default */])(_useMachine,3),current=_useMachine2[0],send=_useMachine2[1],service=_useMachine2[2];return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"App\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(ReactiveButton,{state:current,onClick:()=>send('CLICK')})});};/* RASA API\n *  */const src_proxyurl=\"https://cors-anywhere.herokuapp.com/\";const src_rasaurl='https://intents-oyousuf.herokuapp.com/model/parse';const src_nluRequest=text=>fetch(new Request(src_proxyurl+src_rasaurl,{method:'POST',headers:{'Origin':'http://maraev.me'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());const rootElement=document.getElementById(\"root\");react_dom[\"render\"](/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App,{}),rootElement);\n\n/***/ })\n\n},[[35,1,2]]]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\mini-css-extract-plugin\\dist\\loader.js??ref--5-oneOf-6-0!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\css-loader\\dist\\cjs.js??ref--5-oneOf-6-1!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\postcss-loader\\src\\index.js??postcss!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\resolve-url-loader\\index.js??ref--5-oneOf-6-3!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\sass-loader\\dist\\cjs.js??ref--5-oneOf-6-4!C:\\Users\\User\\react-xstate-colourchanger\\src\\styles.scss","C:/Users/User/react-xstate-colourchanger/src/dmAppointment.ts","C:/Users/User/react-xstate-colourchanger/src/index.tsx"],"names":["say","text","send","_context","type","value","listen","grammar","person","day","time","grammar2","promptAsk","prompt","initial","states","entry","on","ENDSPEECH","ask","dmMachine","init","CLICK","welcome","RECOGNISED","target","actions","assign","context","option","recResult","query","invoke","id","src","event","nluRequest","onDone","data","intent","name","console","log","onError","menu","cond","nomatch","todo","timer","appointment","who","wholeday","timefixed","settime","withtime","Finished","proxyurl","rasaurl","fetch","Request","method","headers","body","then","json","inspect","url","iframe","machine","Machine","dm","asrtts","idle","LISTEN","SPEAK","ttsAgenda","recognising","exit","ASRRESULT","match","speaking","recLogResult","test","logIntent","nluData","ReactiveButton","props","state","matches","animation","App","useSpeechSynthesis","onEnd","speak","cancel","useSpeechRecognition","onResult","result","listening","stop","useMachine","devTools","recStart","asEffect","interimResults","continuous","recStop","changeColour","document","style","background","ttsStart","effect","ttsCancel","current","service","rootElement","getElementById","ReactDOM"],"mappings":"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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","import { MachineConfig, Machine, send, Action, assign } from \"xstate\";\nimport \"./styles.scss\";\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send(\"LISTEN\")\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } \n} = {\n    // Here are some common names in English that I found are easier for the robot to understand.\n    \"John\": { person: \"John Appleseed\" },\n    \"Jack\": { person: \"Jack Orangeseed\" },\n    \"David\": { person: \"David Grapeseed\" },\n    \"Robert\": { person: \"Robert Watermelonseed\" },\n    \"Jennifer\": { person: \"Jennifer Bananaseed\" },\n    \"Jessica\": { person: \"Jessica Pineappleseed\" },\n\n    \"john\": { person: \"john appleseed\" },\n    \"jack\": { person: \"jack orangeseed\" },\n    \"david\": { person: \"david grapeseed\" },\n    \"robert\": { person: \"robert watermelonseed\" },\n    \"jennifer\": { person: \"jennifer bananaseed\" },\n    \"jessica\": { person: \"jessica pineappleseed\" },\n\n    // Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n    \"Zhe\": { person: \"Zhe Han\" },\n    \"Siyi\": { person: \"Siyi Gu\" },\n    \"Jae Eun\": { person: \"Jae Eun Hong\" },\n    \"Oreen\": { person: \"Oreen Yousuf\" },\n    \"Angeliki\": { person: \"Angeliki Zagoura\" },\n    \"Flor\": { person: \"Flor Ortiz\" },\n    \"Emma\": { person: \"Emma Wallerö\"},\n\n    \"zhe\": { person: \"zhe han\" },\n    \"siyi\": { person: \"siyi gu\" },\n    \"jae eun\": { person: \"jae eun hong\" },\n    \"oreen\": { person: \"oreen yousuf\" },\n    \"angeliki\": { person: \"angeliki zagoura\" },\n    \"flor\": { person: \"flor ortiz\" },\n    \"emma\": { person: \"emma wallerö\" },\n\n    //Days of the week with alternating potential utterances ('on')\n    \"Monday\": { day: \"Monday\" },\n    \"on Monday\": { day: \"Monday\" },\n    \"Tuesday\": { day: \"Tuesday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"Wednesday\": { day: \"Wednesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"Thursday\": { day: \"Thursday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"Friday\": { day: \"Friday\" },\n    \"on Friday\": { day: \"Friday\" },\n    \"Saturday\": { day: \"Saturday\" },\n    \"on Saturday\": { day: \"Saturday\" },\n    \"Sunday\": { day: \"Sunday\" },\n    \"on Sunday\": { day: \"Sunday\" },\n\n    //times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n    \"at one\": { time: \"01:00\" },\n    \"at two\": { time: \"02:00\" },\n    \"at three\": { time: \"03:00\" },\n    \"at four\": { time: \"04:00\" },\n    \"at five\": { time: \"05:00\" },\n    \"at six\": { time: \"06:00\" },\n    \"at seven\": { time: \"07:00\" },\n    \"at eight\": { time: \"08:00\" },\n    \"at nine\": { time: \"09:00\" },\n    \"at ten\": { time: \"10:00\" },\n    \"at eleven\": { time: \"11:00\" },\n    \"at twelve\": { time: \"12:00\" },\n    \"at thirteen\": { time: \"13:00\" },\n    \"at fourteen\": { time: \"14:00\" },\n    \"at fifteen\": { time: \"15:00\" },\n    \"at sixteen\": { time: \"16:00\" },\n    \"at seventeen\": { time: \"17:00\" },\n    \"at eighteen\": { time: \"18:00\" },\n    \"at nineteen\": { time: \"19:00\" },\n    \"at twenty\": { time: \"20:00\" },\n    \"at twenty one\": { time: \"21:00\" },\n    \"at twenty two\": { time: \"22:00\" },\n    \"at twenty three\": { time: \"23:00\" },\n    \"at twenty four\": { time: \"00:00\" },\n\n    \"one\": { time: \"01:00\" },\n    \"two\": { time: \"02:00\" },\n    \"three\": { time: \"03:00\" },\n    \"four\": { time: \"04:00\" },\n    \"five\": { time: \"05:00\" },\n    \"six\": { time: \"06:00\" },\n    \"seven\": { time: \"07:00\" },\n    \"eight\": { time: \"08:00\" },\n    \"nine\": { time: \"09:00\" },\n    \"ten\": { time: \"10:00\" },\n    \"eleven\": { time: \"11:00\" },\n    \"twelve\": { time: \"12:00\" },\n    \"thirteen\": { time: \"13:00\" },\n    \"fourteen\": { time: \"14:00\" },\n    \"fifteen\": { time: \"15:00\" },\n    \"sixteen\": { time: \"16:00\" },\n    \"seventeen\": { time: \"17:00\" },\n    \"eighteen\": { time: \"18:00\" },\n    \"nineteen\": { time: \"19:00\" },\n    \"twenty\": { time: \"20:00\" },\n    \"twenty one\": { time: \"21:00\" },\n    \"twenty two\": { time: \"22:00\" },\n    \"twenty three\": { time: \"23:00\" },\n    \"twenty four\": { time: \"00:00\" },\n\n    \"at 1\": { time: \"01:00\" },\n    \"at 2\": { time: \"02:00\" },\n    \"at 3\": { time: \"03:00\" },\n    \"at 4\": { time: \"04:00\" },\n    \"at 5\": { time: \"05:00\" },\n    \"at 6\": { time: \"06:00\" },\n    \"at 7\": { time: \"07:00\" },\n    \"at 8\": { time: \"08:00\" },\n    \"at 9\": { time: \"09:00\" },\n    \"at 10\": { time: \"10:00\" },\n    \"at 11\": { time: \"11:00\" },\n    \"at 12\": { time: \"12:00\" },\n    \"at 13\": { time: \"13:00\" },\n    \"at 14\": { time: \"14:00\" },\n    \"at 15\": { time: \"15:00\" },\n    \"at 16\": { time: \"16:00\" },\n    \"at 17\": { time: \"17:00\" },\n    \"at 18\": { time: \"18:00\" },\n    \"at 19\": { time: \"19:00\" },\n    \"at 20\": { time: \"20:00\" },\n    \"at 21\": { time: \"21:00\" },\n    \"at 22\": { time: \"22:00\" },\n    \"at 23\": { time: \"23:00\" },\n    \"at 24\": { time: \"00:00\" },\n\n    \"1\": { time: \"01:00\" },\n    \"2\": { time: \"02:00\" },\n    \"3\": { time: \"03:00\" },\n    \"4\": { time: \"04:00\" },\n    \"5\": { time: \"05:00\" },\n    \"6\": { time: \"06:00\" },\n    \"7\": { time: \"07:00\" },\n    \"8\": { time: \"08:00\" },\n    \"9\": { time: \"09:00\" },\n    \"10\": { time: \"10:00\" },\n    \"11\": { time: \"11:00\" },\n    \"12\": { time: \"12:00\" },\n    \"13\": { time: \"13:00\" },\n    \"14\": { time: \"14:00\" },\n    \"15\": { time: \"15:00\" },\n    \"16\": { time: \"16:00\" },\n    \"17\": { time: \"17:00\" },\n    \"18\": { time: \"18:00\" },\n    \"19\": { time: \"19:00\" },\n    \"20\": { time: \"20:00\" },\n    \"21\": { time: \"21:00\" },\n    \"22\": { time: \"22:00\" },\n    \"23\": { time: \"23:00\" },\n    \"24\": { time: \"00:00\" }\n}\n\n//second grammar for trues and falses\nconst grammar2 = {\n    \"yes\": true,\n    \"Yes\": true,\n    \"yes of course\": true,\n    \"Yes of course\": true,\n    \"sure\": true,\n    \"Sure\": true,\n    \"absolutely\": true,\n    \"Absolutely\": true,\n    \"perfect\": true,\n    \"Perfect\": true,\n    \"no\": false,\n    \"No\": false,\n    \"no way\": false,\n    \"No way\": false\n}\n\n\n/*function promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            ask: {\n                entry: send(\"LISTEN\")\n            },\n        }})\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n   \n    initial: \"init\",\n    states: {\n        init: {\n            on: {\n                CLICK: \"welcome\"\n            }            \n        },        \n\n        welcome: {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")\n        },\n\n\n        query: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I understand.`\n                    })),\n        }, \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n\t\t\t\t\tcond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"wholeday\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`,\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        wholeday: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"time\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirm_meeting_whole_day\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n\t},\n        time: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_time\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.day}. What time is your meeting?`,\n                    \n                    })),\n            on: { ENDSPEECH: \"ask\" }\n                },\n        ask: {\n            entry: listen()\n                },\n        nomatch: {\n            entry: say(\"Sorry I do not know that\"),\n        on: { ENDSPEECH: \"prompt\" }\n                }\n                }\n        },\n        confirm_meeting_whole_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"init\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                }\n\n\t},\n    confirm_time: {\n        initial: \"prompt\",\n        on:  {\n            RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                target: \"who\"\n            },\n    {cond: (context) => (grammar2[context.recResult] === true),\n    target: \"confirmed\"\n    },\n            { target: \".nomatch\" }]\n        },\n        states: {\n            prompt: {\n               entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                })),\n        on: { ENDSPEECH: \"ask\" }\n            },\n    ask: {\n         entry: listen()\n        },\n    nomatch: {\n        entry: say(\"Sorry I do not understand\"),\n    on: { ENDSPEECH: \"prompt\" }\n           }\n            },\n        },\n    confirmed: {\n        initial: \"prompt\",\n        on: { ENDSPEECH: \"init\" },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Your appointment has been created!`\n                }))\n            },\n    }\n    }\n    }})\n*/\n\nfunction promptAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: 'ask' }\n            },\n            ask: {\n                entry: send('LISTEN')\n            },\n        }})\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = \n\n({\n    initial: 'init',\n    states: \n    \n    {\n        init:{\n            on: {\n                CLICK: 'welcome'\n                }\n             },\n\n        welcome: \n        {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAsk(\"What would you like to do?\")\n        },\n\n        query: \n        {\n            invoke: {\n            \n            id: 'rasa',\n            src: (context, event) => nluRequest(context.option),\n            onDone: {\n                target: 'menu',\n                actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                (context: SDSContext, event: any) => console.log(event.data)]\n            },\n            onError: {\n                target: 'welcome',\n                actions: (context, event) => console.log(event.data)\n\n                }\n            }\n        },\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: 'todo', cond: (context) => context.option === 'todo' },\n                    { target: 'timer', cond: (context) => context.option === 'timer' },\n                    { target: 'appointment', cond: (context) => context.option === 'appointment' }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I see.`\n                    })),\n        },\n                 nomatch: {\n                    entry: say(\"Sorry, I don't understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create an appointment`\n                    }))\n                }}\n        },\n\n        who: \n        \n        {\n            initial: \"prompt\",\n            on: \n            {\n                RECOGNISED: \n                [\n                    {\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n                    },\n                { target: \".nomatch\" }\n                ]\n            },\n\n            states: \n            \n            {\n                prompt: \n                \n                {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                \n                ask: \n                \n                {\n                    entry: listen()\n                },\n                \n                nomatch: \n                \n                {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n\n        day: \n        \n        {\n            initial: \"prompt\",\n            on: \n            \n            {\n\t            RECOGNISED: \n                [\n                    {\n\t                cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n\t\t            actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n\t\t            target: \"wholeday\"\n\n\t\t            },\t\n\n\t\t            { target: \".nomatch\" }\n                \n                ]\n\t        },\n\n            states: \n\n            {\n                prompt: \n                \n                {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`\n                    })),\n\t\t            on: { ENDSPEECH: \"ask\" }\n                },\n\t\t        ask: \n                \n                {\n\t\t            entry: listen()\n\t            },\n\n\t\t        nomatch: \n                \n                {\n\t\t            entry: say(\"Sorry I don't know which day are you talking about\"),\n\t\t            on: { ENDSPEECH: \"prompt\" }\n\t            }\t     \n            }\n        },\n\n\n\t    wholeday: \n        \n        {\n\t\t        initial: \"prompt\",\n\t\t        on: \n                \n                {\n\t                RECOGNISED: \n                    \n                    [\n                        {cond: (context) => grammar2[context.recResult] === true,\n                        target: \"timefixed\"},\n\n\t\t\t\t\t\t{cond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\t\ttarget: \"settime\"},\n\n\t                { target: \".nomatch\" }\n                    ]\n\t\t        \n                },\n\n\n\t\t        states: \n                \n                {\n\t\t            prompt: \n                    \n                    {\n\t\t\t            entry: send((context) => ({\n\t\t\t                type: \"SPEAK\",\n\t\t\t\t\t\t    value: `Good. Appointment is on ${context.day}. Will it take the whole day?`\n\t\t\t            })),\n\t\t\t            on: { ENDSPEECH: \"ask\" }\n\t\t            },\n\n\t\t            ask: {\n\t\t                entry: listen()\n\t\t            },\n\n\t\t            nomatch: \n\n                    {\n\t\t\t            entry: say(\"Please repeat it again\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t            }\n\t\t        }\t     \n        },\n\n\n            timefixed: \n            \n            {\n\t\t           initial: \"prompt\",\n\n\t               on: \n                   \n                   {\n\t\t               RECOGNISED: \n                       \n                       [\n                           {cond: (context) => grammar2[context.recResult] === true,\n\t\t\t               target: \"Finished\"},\n\t\t\t\t\t\t   {cond: (context) => grammar2[context.recResult] === false,\n                           target: \"who\"},\n\t\t                   { target: \".nomatch\" }\n                        ]\n\t\t            },\n\n\n\n\t\t            states: \n                    \n                    {\n\t\t                prompt: \n                        \n                        {\n\t\t\t                entry: send((context) => ({\n\t\t\t                    type: \"SPEAK\",\n\t\t\t\t\t\t\t\tvalue: `Good. Do you want to me create an appointment with ${context.person} on ${context.day}for the whole day?`\n                            })),\n                            on: { ENDSPEECH: \"ask\" }\n\t\t                },\n\n\n\t\t                ask: \n                        \n                        {\n\t\t\t                entry: listen()\n\t\t                },\n\n\t\t                nomatch: \n                        \n                        {\n\t\t\t                entry: say(\"Please repeat it again\"),\n\t\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t                }\n                    }\n\t        },\n\n\t\t\tsettime: \n                \n                    {\n\n\t\t\t\t\t    initial: \"prompt\",\n\t\t\t\t\t    on: \n                    \n                    {\n\t\t\t\t\t\tRECOGNISED: \n                        [\n                            {\n\t\t\t\t\t\t\t\n                            cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n\t\t\t\t\t\t\tactions: assign((context) => { return { time: grammar[context.recResult].time }}),\n\t\t\t\t\t\t\ttarget: \"withtime\"\n\n\t\t\t\t\t\t    },\n\n\t\t\t\t\t\t    { target: \".nomatch\" }\n                        ]\n\t\t\t\t\t},\n\n\n\t\t\t\t\t    states: \n\n                        {\n\t\t\t\t\t\t    prompt: { entry: say(\"What time is your meeting\"),\n\t\t\t\t\t\t    on: { ENDSPEECH: \"ask\" }\n\t\t\t\t\t    },\n\n\t\t\t\t\task: \n                    {\n\t\t\t\t\t\tentry: listen()\n\t\t\t\t    },\n\n\t\t\t\tnomatch:\n                \n                {\n\t\t\t\t\tentry: say(\"Please repeat it again\"),\n\t\t\t\t\ton: { ENDSPEECH: \"prompt\" }\n\t\t\t\t}\n\t\t\t            }\n\t\t                \n                    },\n\n\n\t\twithtime: \n        \n        {\n\t\t\tinitial: \"prompt\",\n\t\t\ton: \n            \n            {\n\t\t\t\tRECOGNISED: \n                [\n                    \n                    { \n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === true,\n\t\t\t\t\ttarget: \"Finished\"\n                    },\n\t\t\t\t\t{\n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\ttarget: \"who\"\n\t\t\t\t    },\n\t\t\t\t    { target: \".nomatch\" }\n                ]\n\t\t\t},\n\n\n\t\t\t states: \n             \n            {\n\t\t\t\t prompt: \n                 \n                 {\n\t\t\t\t\t entry: send((context) => ({\n\t\t\t\t\t\t type: \"SPEAK\",\n\t\t\t\t\t\t value: `Good. Do you want to me create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n\t\t\t\t\t })),\n\t\t\t\t\t on: { ENDSPEECH: \"ask\" }\n\t\t\t\t },\n\n\t\t\t\t ask: \n                {\n\t\t\t\t\t entry: listen()\n\t\t\t\t},\n\n\t\t\t\t nomatch: \n                 \n                 {\n\t\t\t\t\t entry: say(\"Please repeat it again\"),\n\t\t\t\t\t on: { ENDSPEECH: \"prompt\" }\n\t\t\t\t }\n\t\t\t}\n\t\t},\n\n                Finished: \n                \n                {\n\t\t                 initial: \"prompt\",\n\t\t                 on: { ENDSPEECH: \"init\" },\n\t\t                 states: \n                        {\n\t\t\t                 prompt: { entry: say(\"Your appointment has been created!\")},\n\t                    }\n\t            }\t    \n    }\n\n})\n\n\n\n\n\n\n//the api for rasa to use\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // have to set up temporary permission/access for the robot to not give error: \"Unexpected token S in JSON at position 0\"\nconst rasaurl = \"https://intents-oyousuf.herokuapp.com/model/parse\"\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: \"POST\",\n        headers: { \"Origin\": \"http://localhost:3000/react-xstate-colourchanger\" },\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\n\n","import \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Machine, assign, send, State } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\nimport { dmMachine } from \"./dmAppointment\";\n\n\ninspect({\n    url: \"https://statecharts.io/inspect\",\n    iframe: false\n});\n\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n\n\nconst machine = Machine<SDSContext, any, SDSEvent>({\n    id: 'root',\n    type: 'parallel',\n    states: {\n        dm: {\n            ...dmMachine\n        },\n        asrtts: {\n            initial: 'idle',\n            states: {\n                idle: {\n                    on: {\n                        LISTEN: 'recognising',\n                        SPEAK: {\n                            target: 'speaking',\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n                        }\n                    }\n                },\n                recognising: {\n                    entry: 'recStart',\n                    exit: 'recStop',\n                    on: {\n                        ASRRESULT: {\n                            actions: ['recLogResult',\n                                assign((_context, event) => { return { recResult: event.value } })],\n                            target: '.match'\n                        },\n                        RECOGNISED: 'idle'\n                    },\n                    states: {\n                        match: {\n                            entry: send('RECOGNISED'),\n                        },\n                    }\n                },\n                speaking: {\n                    entry: 'ttsStart',\n                    on: {\n                        ENDSPEECH: 'idle',\n                    }\n                }\n            }\n        }\n    },\n},\n    {\n        actions: {\n            recLogResult: (context: SDSContext) => {\n                /* context.recResult = event.recResult; */\n                console.log('<< ASR: ' + context.recResult);\n            },\n            test: () => {\n                console.log('test')\n            },\n            logIntent: (context: SDSContext) => {\n                /* context.nluData = event.data */\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\n            }\n        },\n    });\n\n\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    state: State<SDSContext, any, any, any>;\n}\nconst ReactiveButton = (props: Props): JSX.Element => {\n    switch (true) {\n        case props.state.matches({ asrtts: 'recognising' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"glowing 20s linear\" }} {...props}>\n                    Listening...\n                </button>\n            );\n        case props.state.matches({ asrtts: 'speaking' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\n                    Speaking...\n                </button>\n            );\n        default:\n            return (\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\n                    Click to start\n                </button >\n            );\n    }\n}\n\nfunction App() {\n    const { speak, cancel, speaking } = useSpeechSynthesis({\n        onEnd: () => {\n            send('ENDSPEECH');\n        },\n    });\n    const { listen, listening, stop } = useSpeechRecognition({\n        onResult: (result: any) => {\n            send({ type: \"ASRRESULT\", value: result });\n        },\n    });\n    const [current, send, service] = useMachine(machine, {\n        devTools: true,\n        actions: {\n            recStart: asEffect(() => {\n                console.log('Ready to receive a color command.');\n                listen({\n                    interimResults: false,\n                    continuous: true\n                });\n            }),\n            recStop: asEffect(() => {\n                console.log('Recognition stopped.');\n                stop()\n            }),\n            changeColour: asEffect((context) => {\n                console.log('Repainting...');\n                document.body.style.background = context.recResult;\n            }),\n            ttsStart: asEffect((context, effect) => {\n                console.log('Speaking...');\n                speak({ text: context.ttsAgenda })\n            }),\n            ttsCancel: asEffect((context, effect) => {\n                console.log('TTS STOP...');\n                cancel()\n            })\n            /* speak: asEffect((context) => {\n\t     * console.log('Speaking...');\n             *     speak({text: context.ttsAgenda })\n             * } */\n        }\n    });\n\n\n    return (\n        <div className=\"App\">\n            <ReactiveButton state={current} onClick={() => send('CLICK')} />\n        </div>\n    )\n};\n\n\n\n/* RASA API\n *  */\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://intents-oyousuf.herokuapp.com/model/parse'\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <App />,\n    rootElement);\n"]}}