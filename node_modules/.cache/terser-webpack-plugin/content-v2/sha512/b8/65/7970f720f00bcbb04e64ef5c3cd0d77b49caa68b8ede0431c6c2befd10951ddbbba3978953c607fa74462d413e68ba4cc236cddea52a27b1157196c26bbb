{"code":"(this[\"webpackJsonpxstate-react-typescript-template\"]=this[\"webpackJsonpxstate-react-typescript-template\"]||[]).push([[0],{20:function(t,e,n){},35:function(t,e,n){\"use strict\";n.r(e);var a=n(24),o=n(6),i=(n(20),n(8),n(21)),s=n(41),c=n(4),r=n(40),m=n(39);const p=actions.cancel;function d(t){return Object(c.k)((e=>({type:\"SPEAK\",value:t})))}function l(){return Object(c.k)(\"LISTEN\")}function u(t,e){return{entry:d(t),on:{ENDSPEECH:e+\".hist\"}}}function y(t){return{entry:d(t),on:{ENDSPEECH:\"ask\"}}}const h={John:{person:\"John Appleseed\"},Jack:{person:\"Jack Orangeseed\"},David:{person:\"David Grapeseed\"},Robert:{person:\"Robert Watermelonseed\"},Jennifer:{person:\"Jennifer Bananaseed\"},Jessica:{person:\"Jessica Pineappleseed\"},john:{person:\"john appleseed\"},jack:{person:\"jack orangeseed\"},david:{person:\"david grapeseed\"},robert:{person:\"robert watermelonseed\"},jennifer:{person:\"jennifer bananaseed\"},jessica:{person:\"jessica pineappleseed\"},Zhe:{person:\"Zhe Han\"},Siyi:{person:\"Siyi Gu\"},\"Jae Eun\":{person:\"Jae Eun Hong\"},Oreen:{person:\"Oreen Yousuf\"},Angeliki:{person:\"Angeliki Zagoura\"},Flor:{person:\"Flor Ortiz\"},Emma:{person:\"Emma Waller\\xf6\"},zhe:{person:\"zhe han\"},siyi:{person:\"siyi gu\"},\"jae eun\":{person:\"jae eun hong\"},oreen:{person:\"oreen yousuf\"},angeliki:{person:\"angeliki zagoura\"},flor:{person:\"flor ortiz\"},emma:{person:\"emma waller\\xf6\"},Monday:{day:\"Monday\"},\"on Monday\":{day:\"Monday\"},Tuesday:{day:\"Tuesday\"},\"on Tuesday\":{day:\"Tuesday\"},Wednesday:{day:\"Wednesday\"},\"on Wednesday\":{day:\"Wednesday\"},Thursday:{day:\"Thursday\"},\"on Thursday\":{day:\"Thursday\"},Friday:{day:\"Friday\"},\"on Friday\":{day:\"Friday\"},Saturday:{day:\"Saturday\"},\"on Saturday\":{day:\"Saturday\"},Sunday:{day:\"Sunday\"},\"on Sunday\":{day:\"Sunday\"},\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"},one:{time:\"01:00\"},two:{time:\"02:00\"},three:{time:\"03:00\"},four:{time:\"04:00\"},five:{time:\"05:00\"},six:{time:\"06:00\"},seven:{time:\"07:00\"},eight:{time:\"08:00\"},nine:{time:\"09:00\"},ten:{time:\"10:00\"},eleven:{time:\"11:00\"},twelve:{time:\"12:00\"},thirteen:{time:\"13:00\"},fourteen:{time:\"14:00\"},fifteen:{time:\"15:00\"},sixteen:{time:\"16:00\"},seventeen:{time:\"17:00\"},eighteen:{time:\"18:00\"},nineteen:{time:\"19:00\"},twenty:{time:\"20:00\"},\"twenty one\":{time:\"21:00\"},\"twenty two\":{time:\"22:00\"},\"twenty three\":{time:\"23:00\"},\"twenty four\":{time:\"00:00\"},\"at 1\":{time:\"01:00\"},\"at 2\":{time:\"02:00\"},\"at 3\":{time:\"03:00\"},\"at 4\":{time:\"04:00\"},\"at 5\":{time:\"05:00\"},\"at 6\":{time:\"06:00\"},\"at 7\":{time:\"07:00\"},\"at 8\":{time:\"08:00\"},\"at 9\":{time:\"09:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 13\":{time:\"13:00\"},\"at 14\":{time:\"14:00\"},\"at 15\":{time:\"15:00\"},\"at 16\":{time:\"16:00\"},\"at 17\":{time:\"17:00\"},\"at 18\":{time:\"18:00\"},\"at 19\":{time:\"19:00\"},\"at 20\":{time:\"20:00\"},\"at 21\":{time:\"21:00\"},\"at 22\":{time:\"22:00\"},\"at 23\":{time:\"23:00\"},\"at 24\":{time:\"00:00\"},1:{time:\"01:00\"},2:{time:\"02:00\"},3:{time:\"03:00\"},4:{time:\"04:00\"},5:{time:\"05:00\"},6:{time:\"06:00\"},7:{time:\"07:00\"},8:{time:\"08:00\"},9:{time:\"09:00\"},10:{time:\"10:00\"},11:{time:\"11:00\"},12:{time:\"12:00\"},13:{time:\"13:00\"},14:{time:\"14:00\"},15:{time:\"15:00\"},16:{time:\"16:00\"},17:{time:\"17:00\"},18:{time:\"18:00\"},19:{time:\"19:00\"},20:{time:\"20:00\"},21:{time:\"21:00\"},22:{time:\"22:00\"},23:{time:\"23:00\"},24:{time:\"00:00\"}},E={yes:!0,Yes:!0,\"yes of course\":!0,\"Yes of course\":!0,sure:!0,Sure:!0,absolutely:!0,Absolutely:!0,perfect:!0,Perfect:!0,no:!1,No:!1,\"no way\":!1,\"No way\":!1},b={help:\"h\",Help:\"H\"},g={count:0};const O={initial:\"init\",states:{init:{on:{CLICK:\"welcome\"}},welcome:{initial:\"prompt\",on:{RECOGNISED:[{target:\"query\",cond:t=>!(t.recResult in b),actions:Object(c.b)((t=>({option:t.recResult})))},{target:\"help1\",cond:t=>t.recResult in b}],MAXSPEECH:[{target:\"welcome.maxspeech1\",cond:t=>g.count<=2,actions:Object(c.b)((t=>{g.count=g.count+1}))},{target:\"#root.dm.init\",cond:t=>g.count>2,actions:Object(c.b)((t=>{g.count=0}))}]},states:{prompt:{entry:d(\"What would you like to do?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},maxspeech1:Object(o.a)({},y(\"You have not responded. What is it you would like to do?\")),ask:{entry:[l(),Object(c.k)(\"MAXSPEECH\",{delay:5e3})]}}},help1:Object(o.a)({},u(\"Please tell me what you want to do.\",\"welcome\")),query:{invoke:{id:\"rasa\",src:(t,e)=>j(t.option),onDone:{target:\"menu\",actions:[Object(c.b)(((t,e)=>({option:e.data.intent.name}))),(t,e)=>console.log(e.data)]},onError:{target:\"welcome\",actions:(t,e)=>console.log(e.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:\"todo\",cond:t=>\"todo\"===t.option},{target:\"timer\",cond:t=>\"timer\"===t.option},{target:\"appointment\",cond:t=>\"appointment\"===t.option}]},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:\"OK. I understand\\uff0cyou want a \".concat(t.option,\".\")})))}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:'Let\"s create a to do item.'})))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:'Let\"s create a timer'})))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:'Let\"s create an appointment'})))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>\"person\"in(h[t.recResult]||{}),actions:Object(c.b)((t=>({person:h[t.recResult].person}))),target:\"day\"},{target:\".nomatch\",cond:t=>!(t.recResult in b),actions:p(\"maxsp\")},{target:\"help2\",cond:t=>t.recResult in b}],MAXSPEECH:[{target:\"who.maxspeech2\",cond:t=>g.count<=2,actions:Object(c.b)((t=>{g.count=g.count+1}))},{target:\"#root.dm.init\",cond:t=>g.count>2,actions:Object(c.b)((t=>{g.count=0}))}]},states:{prompt:{entry:d(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[l(),Object(c.k)(\"MAXSPEECH\",{delay:5e3,id:\"maxsp\"})]},maxspeech2:Object(o.a)({},y(\"You did not respond. Which person are you meeting with?\")),nomatch:{entry:d(\"Sorry, I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},help2:Object(o.a)({},u(\"Please tell me the name\",\"who\")),day:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>\"day\"in(h[t.recResult]||{}),actions:Object(c.b)((t=>({day:h[t.recResult].day}))),target:\"wholeday\"},{target:\".nomatch\",cond:t=>!(t.recResult in b),actions:p(\"maxsp\")},{target:\"help3\",cond:t=>t.recResult in b}],MAXSPEECH:[{target:\"day.maxspeech3\",cond:t=>g.count<=2,actions:Object(c.b)((t=>{g.count=g.count+1}))},{target:\"#root.dm.init\",cond:t=>g.count>2,actions:Object(c.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:\"OK. \".concat(t.person,\". What day is your meeting on?\")}))),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[l(),Object(c.k)(\"MAXSPEECH\",{delay:5e3,id:\"maxsp\"})]},maxspeech3:Object(o.a)({},y(\"You did not respond, state a day\")),nomatch:{entry:d(\"Sorry, I don't know which day you are talking about.\"),on:{ENDSPEECH:\"prompt\"}}}},help3:Object(o.a)({},u(\"Please tell me the day\",\"day\")),wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>!0===E[t.recResult],target:\"notime\"},{cond:t=>!1===E[t.recResult],target:\"whattime\"},{target:\".nomatch\",cond:t=>!(t.recResult in b),actions:p(\"maxsp\")},{target:\"help4\",cond:t=>t.recResult in b}],MAXSPEECH:[{target:\"wholeday.maxspeech4\",cond:t=>g.count<=2,actions:Object(c.b)((t=>{g.count=g.count+1}))},{target:\"#root.dm.init\",cond:t=>g.count>2,actions:Object(c.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:\"Good, on \".concat(t.day,\". Will it take the whole day?\")}))),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[l(),Object(c.k)(\"MAXSPEECH\",{delay:5e3,id:\"maxsp\"})]},maxspeech4:Object(o.a)({},y(\"You did not respond, make a decision\")),nomatch:{entry:d(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help4:Object(o.a)({},u(\"Please tell me the decision\",\"wholeday\")),notime:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>!0===E[t.recResult],target:\"Finished\"},{cond:t=>!1===E[t.recResult],target:\"who\"},{target:\".nomatch\",cond:t=>!(t.recResult in b),actions:p(\"maxsp\")},{target:\"help5\",cond:t=>t.recResult in b}],MAXSPEECH:[{target:\"notime.maxspeech5\",cond:t=>g.count<=2,actions:Object(c.b)((t=>{g.count=g.count+1}))},{target:\"#root.dm.init\",cond:t=>g.count>2,actions:Object(c.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:\"Great. Do you want to me create an appointment with \".concat(t.person,\" on \").concat(t.day,\" for the whole day?\")}))),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[l(),Object(c.k)(\"MAXSPEECH\",{delay:5e3,id:\"maxsp\"})]},maxspeech5:Object(o.a)({},y(\"You did not respond, please confirm.\")),nomatch:{entry:d(\"Please, repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help5:Object(o.a)({},u(\"Please confirm it\",\"notime\")),whattime:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>\"time\"in(h[t.recResult]||{}),actions:Object(c.b)((t=>({time:h[t.recResult].time}))),target:\"withtime\"},{target:\".nomatch\",cond:t=>!(t.recResult in b),actions:p(\"maxsp\")},{target:\"help6\",cond:t=>t.recResult in b}],MAXSPEECH:[{target:\"whattime.maxspeech6\",cond:t=>g.count<=2,actions:Object(c.b)((t=>{g.count=g.count+1}))},{target:\"#root.dm.init\",cond:t=>g.count>2,actions:Object(c.b)((t=>{g.count=0}))}]},states:{prompt:{entry:d(\"What time is your meeting\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[l(),Object(c.k)(\"MAXSPEECH\",{delay:5e3,id:\"maxsp\"})]},maxspeech6:Object(o.a)({},y(\"You did not respond, state a time\")),nomatch:{entry:d(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help6:Object(o.a)({},u(\"Please tell me the time\",\"whattime\")),withtime:{initial:\"prompt\",on:{RECOGNISED:[{cond:t=>!0===E[t.recResult],target:\"Finished\"},{cond:t=>!1===E[t.recResult],target:\"who\"},{target:\".nomatch\",cond:t=>!(t.recResult in b),actions:p(\"maxsp\")},{target:\"help7\",cond:t=>t.recResult in b}],MAXSPEECH:[{target:\"withtime.maxspeech7\",cond:t=>g.count<=2,actions:Object(c.b)((t=>{g.count=g.count+1}))},{target:\"#root.dm.init\",cond:t=>g.count>2,actions:Object(c.b)((t=>{g.count=0}))}]},states:{prompt:{entry:Object(c.k)((t=>({type:\"SPEAK\",value:\"Great. Do you want to me create an appointment with \".concat(t.person,\" on \").concat(t.day,\" at \").concat(t.time,\"?\")}))),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[l(),Object(c.k)(\"MAXSPEECH\",{delay:5e3,id:\"maxsp\"})]},maxspeech7:Object(o.a)({},y(\"You did not respond, please confirm\")),nomatch:{entry:d(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help7:Object(o.a)({},u(\"Please confirm\",\"withtime\")),Finished:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:d(\"Ok, great! Your appointment has been created!\")}}}}},j=t=>fetch(new Request(\"https://cors-anywhere.herokuapp.com/https://intents-oyousuf.herokuapp.com/model/parse\",{method:\"POST\",headers:{Origin:\"http://localhost:3000/react-xstate-colourchanger\"},body:'{\"text\": \"'.concat(t,'\"}')})).then((t=>t.json()));var S=n(19),w=n(12);Object(m.a)({url:\"https://statecharts.io/inspect\",iframe:!1});const k=Object(s.a)({id:\"root\",type:\"parallel\",states:{dm:Object(o.a)({},O),asrtts:{initial:\"idle\",states:{idle:{on:{LISTEN:\"recognising\",SPEAK:{target:\"speaking\",actions:Object(c.b)(((t,e)=>({ttsAgenda:e.value})))}}},recognising:{entry:\"recStart\",exit:\"recStop\",on:{ASRRESULT:{actions:[\"recLogResult\",Object(c.b)(((t,e)=>({recResult:e.value})))],target:\".match\"},RECOGNISED:\"idle\"},states:{match:{entry:Object(c.k)(\"RECOGNISED\")}}},speaking:{entry:\"ttsStart\",on:{ENDSPEECH:\"idle\"}}}}}},{actions:{recLogResult:t=>{console.log(\"<< ASR: \"+t.recResult)},test:()=>{console.log(\"test\")},logIntent:t=>{console.log(\"<< NLU intent: \"+t.nluData.intent.name)}}}),P=t=>{switch(!0){case t.state.matches({asrtts:\"recognising\"}):return Object(w.jsx)(\"button\",Object(o.a)(Object(o.a)({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},t),{},{children:\"Listening...\"}));case t.state.matches({asrtts:\"speaking\"}):return Object(w.jsx)(\"button\",Object(o.a)(Object(o.a)({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},t),{},{children:\"Speaking...\"}));default:return Object(w.jsx)(\"button\",Object(o.a)(Object(o.a)({type:\"button\",className:\"glow-on-hover\"},t),{},{children:\"Click to start\"}))}};function R(){const t=Object(S.useSpeechSynthesis)({onEnd:()=>{d(\"ENDSPEECH\")}}),e=t.speak,n=t.cancel,o=(t.speaking,Object(S.useSpeechRecognition)({onResult:t=>{d({type:\"ASRRESULT\",value:t})}})),i=o.listen,s=(o.listening,o.stop),c=Object(r.b)(k,{devTools:!0,actions:{recStart:Object(r.a)((()=>{console.log(\"Ready to receive a color command.\"),i({interimResults:!1,continuous:!0})})),recStop:Object(r.a)((()=>{console.log(\"Recognition stopped.\"),s()})),changeColour:Object(r.a)((t=>{console.log(\"Repainting...\"),document.body.style.background=t.recResult})),ttsStart:Object(r.a)(((t,n)=>{console.log(\"Speaking...\"),e({text:t.ttsAgenda})})),ttsCancel:Object(r.a)(((t,e)=>{console.log(\"TTS STOP...\"),n()}))}}),m=Object(a.a)(c,3),p=m[0],d=m[1];m[2];return Object(w.jsx)(\"div\",{className:\"App\",children:Object(w.jsx)(P,{state:p,onClick:()=>d(\"CLICK\")})})}const C=document.getElementById(\"root\");i.render(Object(w.jsx)(R,{}),C)}},[[35,1,2]]]);","name":"static/js/main.ed09fd4f.chunk.js","map":{"version":3,"sources":["static/js/main.ed09fd4f.chunk.js"],"names":["this","push","20","module","exports","__webpack_require__","35","__webpack_exports__","r","slicedToArray","objectSpread2","react_dom","Machine","es_actions","useMachine","browser","dmAppointment_cancel","actions","cancel","say","text","Object","_context","type","value","dmAppointment_listen","helpm","prompt","name","entry","on","ENDSPEECH","speech","grammar","John","person","Jack","David","Robert","Jennifer","Jessica","john","jack","david","robert","jennifer","jessica","Zhe","Siyi","Jae Eun","Oreen","Angeliki","Flor","Emma","zhe","siyi","jae eun","oreen","angeliki","flor","emma","Monday","day","on Monday","Tuesday","on Tuesday","Wednesday","on Wednesday","Thursday","on Thursday","Friday","on Friday","Saturday","on Saturday","Sunday","on Sunday","at one","time","at two","at three","at four","at five","at six","at seven","at eight","at nine","at ten","at eleven","at twelve","at thirteen","at fourteen","at fifteen","at sixteen","at seventeen","at eighteen","at nineteen","at twenty","at twenty one","at twenty two","at twenty three","at twenty four","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty","twenty one","twenty two","twenty three","twenty four","at 1","at 2","at 3","at 4","at 5","at 6","at 7","at 8","at 9","at 10","at 11","at 12","at 13","at 14","at 15","at 16","at 17","at 18","at 19","at 20","at 21","at 22","at 23","at 24","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","21","22","23","24","grammar2","yes","Yes","yes of course","Yes of course","sure","Sure","absolutely","Absolutely","perfect","Perfect","no","No","no way","No way","commands","help","Help","grammar3","count","dmMachine","initial","states","init","CLICK","welcome","RECOGNISED","target","cond","context","recResult","option","MAXSPEECH","hist","maxspeech1","ask","delay","help1","query","invoke","id","src","event","nluRequest","onDone","data","intent","console","log","onError","menu","concat","todo","timer","appointment","who","maxspeech2","nomatch","help2","maxspeech3","help3","wholeday","maxspeech4","help4","notime","maxspeech5","help5","whattime","maxspeech6","help6","withtime","maxspeech7","help7","Finished","fetch","Request","proxyurl","method","headers","Origin","body","then","json","dist","jsx_runtime","url","iframe","machine","dm","asrtts","idle","LISTEN","SPEAK","ttsAgenda","recognising","exit","ASRRESULT","match","speaking","recLogResult","test","logIntent","nluData","ReactiveButton","props","state","matches","className","style","animation","children","App","_useSpeechSynthesis","onEnd","send","speak","_useSpeechRecognition","onResult","result","listen","stop","listening","_useMachine","devTools","recStart","interimResults","continuous","recStop","changeColour","document","background","ttsStart","effect","ttsCancel","_useMachine2","current","onClick","rootElement","getElementById"],"mappings":"CAACA,KAAK,gDAAkDA,KAAK,iDAAmD,IAAIC,KAAK,CAAC,CAAC,GAAG,CAExHC,GACA,SAAUC,EAAQC,EAASC,KAM3BC,GACA,SAAUH,EAAQI,EAAqBF,GAE7C,aAEAA,EAAoBG,EAAED,GAGtB,IAAIE,EAAgBJ,EAAoB,IAGpCK,EAAgBL,EAAoB,GASpCM,GANSN,EAAoB,IAGrBA,EAAoB,GAGhBA,EAAoB,KAGhCO,EAAUP,EAAoB,IAG9BQ,EAAaR,EAAoB,GAGjCS,EAAaT,EAAoB,IAGjCU,EAAUV,EAAoB,IAMlC,MAAuBW,EAARC,QAAsCC,OACrD,SAASC,EAAIC,GAAM,OAAOC,OAAOR,EAAyB,EAAhCQ,EAAmCC,IAAU,CAAEC,KAAK,QAAQC,MAAMJ,MAAS,SAASK,IAAuB,OAAOJ,OAAOR,EAAyB,EAAhCQ,CAAmC,UAC/K,SAASK,EAAMC,EAAOC,GAAM,MAAM,CAACC,MAAMV,EAAIQ,GAAQG,GAAG,CAACC,UAAUH,EAAK,UAAW,SAASI,EAAOL,GAAQ,MAAM,CAACE,MAAMV,EAAIQ,GAAQG,GAAG,CAACC,UAAU,QAClJ,MAAME,EAAQ,CACdC,KAAO,CAACC,OAAO,kBAAkBC,KAAO,CAACD,OAAO,mBAAmBE,MAAQ,CAACF,OAAO,mBAAmBG,OAAS,CAACH,OAAO,yBAAyBI,SAAW,CAACJ,OAAO,uBAAuBK,QAAU,CAACL,OAAO,yBAAyBM,KAAO,CAACN,OAAO,kBAAkBO,KAAO,CAACP,OAAO,mBAAmBQ,MAAQ,CAACR,OAAO,mBAAmBS,OAAS,CAACT,OAAO,yBAAyBU,SAAW,CAACV,OAAO,uBAAuBW,QAAU,CAACX,OAAO,yBACjbY,IAAM,CAACZ,OAAO,WAAWa,KAAO,CAACb,OAAO,WAAWc,UAAU,CAACd,OAAO,gBAAgBe,MAAQ,CAACf,OAAO,gBAAgBgB,SAAW,CAAChB,OAAO,oBAAoBiB,KAAO,CAACjB,OAAO,cAAckB,KAAO,CAAClB,OAAO,mBAAgBmB,IAAM,CAACnB,OAAO,WAAWoB,KAAO,CAACpB,OAAO,WAAWqB,UAAU,CAACrB,OAAO,gBAAgBsB,MAAQ,CAACtB,OAAO,gBAAgBuB,SAAW,CAACvB,OAAO,oBAAoBwB,KAAO,CAACxB,OAAO,cAAcyB,KAAO,CAACzB,OAAO,mBACha0B,OAAS,CAACC,IAAI,UAAUC,YAAY,CAACD,IAAI,UAAUE,QAAU,CAACF,IAAI,WAAWG,aAAa,CAACH,IAAI,WAAWI,UAAY,CAACJ,IAAI,aAAaK,eAAe,CAACL,IAAI,aAAaM,SAAW,CAACN,IAAI,YAAYO,cAAc,CAACP,IAAI,YAAYQ,OAAS,CAACR,IAAI,UAAUS,YAAY,CAACT,IAAI,UAAUU,SAAW,CAACV,IAAI,YAAYW,cAAc,CAACX,IAAI,YAAYY,OAAS,CAACZ,IAAI,UAAUa,YAAY,CAACb,IAAI,UAC3Xc,SAAS,CAACC,KAAK,SAASC,SAAS,CAACD,KAAK,SAASE,WAAW,CAACF,KAAK,SAASG,UAAU,CAACH,KAAK,SAASI,UAAU,CAACJ,KAAK,SAASK,SAAS,CAACL,KAAK,SAASM,WAAW,CAACN,KAAK,SAASO,WAAW,CAACP,KAAK,SAASQ,UAAU,CAACR,KAAK,SAASS,SAAS,CAACT,KAAK,SAASU,YAAY,CAACV,KAAK,SAASW,YAAY,CAACX,KAAK,SAASY,cAAc,CAACZ,KAAK,SAASa,cAAc,CAACb,KAAK,SAASc,aAAa,CAACd,KAAK,SAASe,aAAa,CAACf,KAAK,SAASgB,eAAe,CAAChB,KAAK,SAASiB,cAAc,CAACjB,KAAK,SAASkB,cAAc,CAAClB,KAAK,SAASmB,YAAY,CAACnB,KAAK,SAASoB,gBAAgB,CAACpB,KAAK,SAASqB,gBAAgB,CAACrB,KAAK,SAASsB,kBAAkB,CAACtB,KAAK,SAASuB,iBAAiB,CAACvB,KAAK,SAASwB,IAAM,CAACxB,KAAK,SAASyB,IAAM,CAACzB,KAAK,SAAS0B,MAAQ,CAAC1B,KAAK,SAAS2B,KAAO,CAAC3B,KAAK,SAAS4B,KAAO,CAAC5B,KAAK,SAAS6B,IAAM,CAAC7B,KAAK,SAAS8B,MAAQ,CAAC9B,KAAK,SAAS+B,MAAQ,CAAC/B,KAAK,SAASgC,KAAO,CAAChC,KAAK,SAASiC,IAAM,CAACjC,KAAK,SAASkC,OAAS,CAAClC,KAAK,SAASmC,OAAS,CAACnC,KAAK,SAASoC,SAAW,CAACpC,KAAK,SAASqC,SAAW,CAACrC,KAAK,SAASsC,QAAU,CAACtC,KAAK,SAASuC,QAAU,CAACvC,KAAK,SAASwC,UAAY,CAACxC,KAAK,SAASyC,SAAW,CAACzC,KAAK,SAAS0C,SAAW,CAAC1C,KAAK,SAAS2C,OAAS,CAAC3C,KAAK,SAAS4C,aAAa,CAAC5C,KAAK,SAAS6C,aAAa,CAAC7C,KAAK,SAAS8C,eAAe,CAAC9C,KAAK,SAAS+C,cAAc,CAAC/C,KAAK,SAASgD,OAAO,CAAChD,KAAK,SAASiD,OAAO,CAACjD,KAAK,SAASkD,OAAO,CAAClD,KAAK,SAASmD,OAAO,CAACnD,KAAK,SAASoD,OAAO,CAACpD,KAAK,SAASqD,OAAO,CAACrD,KAAK,SAASsD,OAAO,CAACtD,KAAK,SAASuD,OAAO,CAACvD,KAAK,SAASwD,OAAO,CAACxD,KAAK,SAASyD,QAAQ,CAACzD,KAAK,SAAS0D,QAAQ,CAAC1D,KAAK,SAAS2D,QAAQ,CAAC3D,KAAK,SAAS4D,QAAQ,CAAC5D,KAAK,SAAS6D,QAAQ,CAAC7D,KAAK,SAAS8D,QAAQ,CAAC9D,KAAK,SAAS+D,QAAQ,CAAC/D,KAAK,SAASgE,QAAQ,CAAChE,KAAK,SAASiE,QAAQ,CAACjE,KAAK,SAASkE,QAAQ,CAAClE,KAAK,SAASmE,QAAQ,CAACnE,KAAK,SAASoE,QAAQ,CAACpE,KAAK,SAASqE,QAAQ,CAACrE,KAAK,SAASsE,QAAQ,CAACtE,KAAK,SAASuE,QAAQ,CAACvE,KAAK,SAASwE,EAAI,CAACxE,KAAK,SAASyE,EAAI,CAACzE,KAAK,SAAS0E,EAAI,CAAC1E,KAAK,SAAS2E,EAAI,CAAC3E,KAAK,SAAS4E,EAAI,CAAC5E,KAAK,SAAS6E,EAAI,CAAC7E,KAAK,SAAS8E,EAAI,CAAC9E,KAAK,SAAS+E,EAAI,CAAC/E,KAAK,SAASgF,EAAI,CAAChF,KAAK,SAASiF,GAAK,CAACjF,KAAK,SAASkF,GAAK,CAAClF,KAAK,SAASmF,GAAK,CAACnF,KAAK,SAASoF,GAAK,CAACpF,KAAK,SAASqF,GAAK,CAACrF,KAAK,SAASsF,GAAK,CAACtF,KAAK,SAASuF,GAAK,CAACvF,KAAK,SAASwF,GAAK,CAACxF,KAAK,SAASyF,GAAK,CAACzF,KAAK,SAAS0F,GAAK,CAAC1F,KAAK,SAAS3E,GAAK,CAAC2E,KAAK,SAAS2F,GAAK,CAAC3F,KAAK,SAAS4F,GAAK,CAAC5F,KAAK,SAAS6F,GAAK,CAAC7F,KAAK,SAAS8F,GAAK,CAAC9F,KAAK,UACrsE+F,EAAS,CAACC,KAAM,EAAKC,KAAM,EAAKC,iBAAgB,EAAKC,iBAAgB,EAAKC,MAAO,EAAKC,MAAO,EAAKC,YAAa,EAAKC,YAAa,EAAKC,SAAU,EAAKC,SAAU,EAAKC,IAAK,EAAMC,IAAK,EAAMC,UAAS,EAAMC,UAAS,GAClNC,EAAS,CAACC,KAAO,IAAIC,KAAO,KAAWC,EAAS,CAACC,MAAQ,GAorB/D,MAAMC,EAAU,CAACC,QAAQ,OAAOC,OAAO,CAACC,KAAK,CAACrK,GAAG,CAACsK,MAAM,YAAYC,QAAQ,CAACJ,QAAQ,SAASnK,GAAG,CAACwK,WAAW,CAAC,CAACC,OAAO,QAAQC,KAAKC,KAAWA,EAAQC,aAAaf,GAAU1K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAgB,CAACE,OAAOF,EAAQC,eAAe,CAACH,OAAO,QAAQC,KAAKC,GAASA,EAAQC,aAAaf,IAAWiB,UAAU,CAAC,CAACL,OAAO,qBAAqBC,KAAKC,GAASX,EAAgB,OAAG,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAEA,EAAgB,MAAE,MAAM,CAACS,OAAO,gBAAgBC,KAAKC,GAASX,EAAgB,MAAE,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAE,QAAQI,OAAO,CAACvK,OAAO,CAACE,MAAMV,EAAI,8BAA8BW,GAAG,CAACC,UAAU,QAAQ8K,KAAK,CAACtL,KAAK,WAAWuL,WAAWzL,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGW,EAAO,6DAA6D+K,IAAI,CAAClL,MAAM,CAACJ,IAAuBJ,OAAOR,EAAyB,EAAhCQ,CAAmC,YAAY,CAAC2L,MAAM,UAAWC,MAAM5L,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGK,EAAM,sCAAsC,YAAYwL,MAAM,CAACC,OAAO,CAACC,GAAG,OAAOC,IAAI,CAACZ,EAAQa,IAAQC,EAAWd,EAAQE,QAAQa,OAAO,CAACjB,OAAO,OAAOtL,QAAQ,CAACI,OAAOR,EAA2B,EAAlCQ,EAAqC,CAACoL,EAAQa,KAAe,CAACX,OAAOW,EAAMG,KAAKC,OAAO9L,SAAS,CAAC6K,EAAQa,IAAQK,QAAQC,IAAIN,EAAMG,QACpxCI,QAAQ,CAACtB,OAAO,UAAUtL,QAAQ,CAACwL,EAAQa,IAAQK,QAAQC,IAAIN,EAAMG,SAASK,KAAK,CAAC7B,QAAQ,SAASnK,GAAG,CAACC,UAAU,CAAC,CAACwK,OAAO,OAAOC,KAAKC,GAA0B,SAAjBA,EAAQE,QAAiB,CAACJ,OAAO,QAAQC,KAAKC,GAA0B,UAAjBA,EAAQE,QAAkB,CAACJ,OAAO,cAAcC,KAAKC,GAA0B,gBAAjBA,EAAQE,UAA0BT,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,oCAAoCuM,OAAOtB,EAAQE,OAAO,YAG5aqB,KAAK,CAAC/B,QAAQ,SAASnK,GAAG,CAACC,UAAU,QAAQmK,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,oCAAoCyM,MAAM,CAAChC,QAAQ,SAASnK,GAAG,CAACC,UAAU,QAAQmK,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,8BAA8B0M,YAAY,CAACjC,QAAQ,SAASnK,GAAG,CAACC,UAAU,OAAOmK,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,qCAAqC2M,IAAI,CAAClC,QAAQ,SAASnK,GAAG,CAACwK,WAAW,CAAC,CAACE,KAAKC,GAAS,WAAWxK,EAAQwK,EAAQC,YAAY,IAAIzL,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAgB,CAACtK,OAAOF,EAAQwK,EAAQC,WAAWvK,WAAWoK,OAAO,OAAO,CAACA,OAAO,WAAWC,KAAKC,KAAWA,EAAQC,aAAaf,GAAU1K,QAAQD,EAAqB,UAAU,CAACuL,OAAO,QAAQC,KAAKC,GAASA,EAAQC,aAAaf,IAAWiB,UAAU,CAAC,CAACL,OAAO,iBAAiBC,KAAKC,GAASX,EAAgB,OAAG,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAEA,EAAgB,MAAE,MAAM,CAACS,OAAO,gBAAgBC,KAAKC,GAASX,EAAgB,MAAE,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAE,QAAQI,OAAO,CAACvK,OAAO,CAACE,MAAMV,EAAI,6BAA6BW,GAAG,CAACC,UAAU,QAAQ8K,KAAK,CAACtL,KAAK,WAAWwL,IAAI,CAAClL,MAAM,CAACJ,IAAuBJ,OAAOR,EAAyB,EAAhCQ,CAAmC,YAAY,CAAC2L,MAAM,IAAKI,GAAG,YAAYgB,WAAW/M,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGW,EAAO,4DAA4DqM,QAAQ,CAACxM,MAAMV,EAAI,4BAA4BW,GAAG,CAACC,UAAU,aAAauM,MAAMjN,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGK,EAAM,0BAA0B,QAAQoC,IAAI,CAACmI,QAAQ,SAASnK,GAAG,CAACwK,WAAW,CAAC,CAACE,KAAKC,GAAS,QAAQxK,EAAQwK,EAAQC,YAAY,IAAIzL,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAgB,CAAC3I,IAAI7B,EAAQwK,EAAQC,WAAW5I,QAAQyI,OAAO,YAAY,CAACA,OAAO,WAAWC,KAAKC,KAAWA,EAAQC,aAAaf,GAAU1K,QAAQD,EAAqB,UAAU,CAACuL,OAAO,QAAQC,KAAKC,GAASA,EAAQC,aAAaf,IAAWiB,UAAU,CAAC,CAACL,OAAO,iBAAiBC,KAAKC,GAASX,EAAgB,OAAG,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAEA,EAAgB,MAAE,MAAM,CAACS,OAAO,gBAAgBC,KAAKC,GAASX,EAAgB,MAAE,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAE,QAAQI,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,OAAOuM,OAAOtB,EAAQtK,OAAO,sCAAqCL,GAAG,CAACC,UAAU,QAAQ8K,KAAK,CAACtL,KAAK,WAAWwL,IAAI,CAAClL,MAAM,CAACJ,IAAuBJ,OAAOR,EAAyB,EAAhCQ,CAAmC,YAAY,CAAC2L,MAAM,IAAKI,GAAG,YAAYmB,WAAWlN,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGW,EAAO,qCAAqCqM,QAAQ,CAACxM,MAAMV,EAAI,wDAAwDW,GAAG,CAACC,UAAU,aAAayM,MAAMnN,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGK,EAAM,yBAAyB,QAAQ+M,SAAS,CAACxC,QAAQ,SAASnK,GAAG,CAACwK,WAAW,CAAC,CAACE,KAAKC,IAAuC,IAA9B7B,EAAS6B,EAAQC,WAAkBH,OAAO,UAAU,CAACC,KAAKC,IAAuC,IAA9B7B,EAAS6B,EAAQC,WAAmBH,OAAO,YAAY,CAACA,OAAO,WAAWC,KAAKC,KAAWA,EAAQC,aAAaf,GAAU1K,QAAQD,EAAqB,UAAU,CAACuL,OAAO,QAAQC,KAAKC,GAASA,EAAQC,aAAaf,IAAWiB,UAAU,CAAC,CAACL,OAAO,sBAAsBC,KAAKC,GAASX,EAAgB,OAAG,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAEA,EAAgB,MAAE,MAAM,CAACS,OAAO,gBAAgBC,KAAKC,GAASX,EAAgB,MAAE,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAE,QAAQI,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,YAAYuM,OAAOtB,EAAQ3I,IAAI,qCAAoChC,GAAG,CAACC,UAAU,QAAQ8K,KAAK,CAACtL,KAAK,WAAWwL,IAAI,CAAClL,MAAM,CAACJ,IAAuBJ,OAAOR,EAAyB,EAAhCQ,CAAmC,YAAY,CAAC2L,MAAM,IAAKI,GAAG,YAAYsB,WAAWrN,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGW,EAAO,yCAAyCqM,QAAQ,CAACxM,MAAMV,EAAI,0BAA0BW,GAAG,CAACC,UAAU,aAAa4M,MAAMtN,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGK,EAAM,8BAA8B,aAAakN,OAAO,CAAC3C,QAAQ,SAASnK,GAAG,CAACwK,WAAW,CAAC,CAACE,KAAKC,IAAuC,IAA9B7B,EAAS6B,EAAQC,WAAkBH,OAAO,YAAY,CAACC,KAAKC,IAAuC,IAA9B7B,EAAS6B,EAAQC,WAAmBH,OAAO,OAAO,CAACA,OAAO,WAAWC,KAAKC,KAAWA,EAAQC,aAAaf,GAAU1K,QAAQD,EAAqB,UAAU,CAACuL,OAAO,QAAQC,KAAKC,GAASA,EAAQC,aAAaf,IAAWiB,UAAU,CAAC,CAACL,OAAO,oBAAoBC,KAAKC,GAASX,EAAgB,OAAG,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAEA,EAAgB,MAAE,MAAM,CAACS,OAAO,gBAAgBC,KAAKC,GAASX,EAAgB,MAAE,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAE,QAAQI,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,uDAAuDuM,OAAOtB,EAAQtK,OAAO,QAAQ4L,OAAOtB,EAAQ3I,IAAI,2BAA0BhC,GAAG,CAACC,UAAU,QAAQ8K,KAAK,CAACtL,KAAK,WAAWwL,IAAI,CAAClL,MAAM,CAACJ,IAAuBJ,OAAOR,EAAyB,EAAhCQ,CAAmC,YAAY,CAAC2L,MAAM,IAAKI,GAAG,YAAYyB,WAAWxN,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGW,EAAO,yCAAyCqM,QAAQ,CAACxM,MAAMV,EAAI,2BAA2BW,GAAG,CAACC,UAAU,aAAa+M,MAAMzN,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGK,EAAM,oBAAoB,WAAWqN,SAAS,CAAC9C,QAAQ,SAASnK,GAAG,CAACwK,WAAW,CAAC,CAACE,KAAKC,GAAS,SAASxK,EAAQwK,EAAQC,YAAY,IAAIzL,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAgB,CAAC5H,KAAK5C,EAAQwK,EAAQC,WAAW7H,SAAS0H,OAAO,YAAY,CAACA,OAAO,WAAWC,KAAKC,KAAWA,EAAQC,aAAaf,GAAU1K,QAAQD,EAAqB,UAAU,CAACuL,OAAO,QAAQC,KAAKC,GAASA,EAAQC,aAAaf,IAAWiB,UAAU,CAAC,CAACL,OAAO,sBAAsBC,KAAKC,GAASX,EAAgB,OAAG,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAEA,EAAgB,MAAE,MAAM,CAACS,OAAO,gBAAgBC,KAAKC,GAASX,EAAgB,MAAE,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAE,QAAQI,OAAO,CAACvK,OAAO,CAACE,MAAMV,EAAI,6BAA6BW,GAAG,CAACC,UAAU,QAAQ8K,KAAK,CAACtL,KAAK,WAAWwL,IAAI,CAAClL,MAAM,CAACJ,IAAuBJ,OAAOR,EAAyB,EAAhCQ,CAAmC,YAAY,CAAC2L,MAAM,IAAKI,GAAG,YAAY4B,WAAW3N,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGW,EAAO,sCAAsCqM,QAAQ,CAACxM,MAAMV,EAAI,0BAA0BW,GAAG,CAACC,UAAU,aAAakN,MAAM5N,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGK,EAAM,0BAA0B,aAAawN,SAAS,CAACjD,QAAQ,SAASnK,GAAG,CAACwK,WAAW,CAAC,CAACE,KAAKC,IAAuC,IAA9B7B,EAAS6B,EAAQC,WAAkBH,OAAO,YAAY,CAACC,KAAKC,IAAuC,IAA9B7B,EAAS6B,EAAQC,WAAmBH,OAAO,OAAO,CAACA,OAAO,WAAWC,KAAKC,KAAWA,EAAQC,aAAaf,GAAU1K,QAAQD,EAAqB,UAAU,CAACuL,OAAO,QAAQC,KAAKC,GAASA,EAAQC,aAAaf,IAAWiB,UAAU,CAAC,CAACL,OAAO,sBAAsBC,KAAKC,GAASX,EAAgB,OAAG,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAEA,EAAgB,MAAE,MAAM,CAACS,OAAO,gBAAgBC,KAAKC,GAASX,EAAgB,MAAE,EAAE7K,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqCoL,IAAUX,EAAgB,MAAE,QAAQI,OAAO,CAACvK,OAAO,CAACE,MAAMR,OAAOR,EAAyB,EAAhCQ,EAAmCoL,IAAS,CAAElL,KAAK,QAAQC,MAAM,uDAAuDuM,OAAOtB,EAAQtK,OAAO,QAAQ4L,OAAOtB,EAAQ3I,IAAI,QAAQiK,OAAOtB,EAAQ5H,KAAK,SAAQ/C,GAAG,CAACC,UAAU,QAAQ8K,KAAK,CAACtL,KAAK,WAAWwL,IAAI,CAAClL,MAAM,CAACJ,IAAuBJ,OAAOR,EAAyB,EAAhCQ,CAAmC,YAAY,CAAC2L,MAAM,IAAKI,GAAG,YAAY+B,WAAW9N,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGW,EAAO,wCAAwCqM,QAAQ,CAACxM,MAAMV,EAAI,0BAA0BW,GAAG,CAACC,UAAU,aAAaqN,MAAM/N,OAAOX,EAA+B,EAAtCW,CAAyC,GAAGK,EAAM,iBAAiB,aAAa2N,SAAS,CAACpD,QAAQ,SAASnK,GAAG,CAACC,UAAU,QAAQmK,OAAO,CAACvK,OAAO,CAACE,MAAMV,EAAI,sDAEpzPoM,EAAWnM,GAAMkO,MAAM,IAAIC,QAAQC,wFAAiB,CAACC,OAAO,OAAOC,QAAQ,CAACC,OAAS,oDAAoDC,KAAK,aAAgB7B,OAAO3M,EAAK,SAAUyO,MAAKpC,GAAMA,EAAKqC,SAE5Q,IAAIC,EAAO1P,EAAoB,IAG3B2P,EAAc3P,EAAoB,IAGtCgB,OAAON,EAAyB,EAAhCM,CAAmC,CAAC4O,IAAI,iCAAiCC,QAAO,IAAQ,MAAMC,EAAQ9O,OAAOT,EAAyB,EAAhCS,CAAmC,CAAC+L,GAAG,OAAO7L,KAAK,WAAW2K,OAAO,CAACkE,GAAG/O,OAAOX,EAA+B,EAAtCW,CAAyC,GAAG2K,GAAWqE,OAAO,CAACpE,QAAQ,OAAOC,OAAO,CAACoE,KAAK,CAACxO,GAAG,CAACyO,OAAO,cAAcC,MAAM,CAACjE,OAAO,WAAWtL,QAAQI,OAAOR,EAA2B,EAAlCQ,EAAqC,CAACC,EAASgM,KAAe,CAACmD,UAAUnD,EAAM9L,aAAakP,YAAY,CAAC7O,MAAM,WAAW8O,KAAK,UAAU7O,GAAG,CAAC8O,UAAU,CAAC3P,QAAQ,CAAC,eAAeI,OAAOR,EAA2B,EAAlCQ,EAAqC,CAACC,EAASgM,KAAe,CAACZ,UAAUY,EAAM9L,WAAW+K,OAAO,UAAUD,WAAW,QAAQJ,OAAO,CAAC2E,MAAM,CAAChP,MAAMR,OAAOR,EAAyB,EAAhCQ,CAAmC,iBAAiByP,SAAS,CAACjP,MAAM,WAAWC,GAAG,CAACC,UAAU,aAAa,CAACd,QAAQ,CAAC8P,aAAatE,IAAoDkB,QAAQC,IAAI,WAAWnB,EAAQC,YAAasE,KAAK,KAAKrD,QAAQC,IAAI,SAAUqD,UAAUxE,IAA4CkB,QAAQC,IAAI,kBAAkBnB,EAAQyE,QAAQxD,OAAO9L,UAAiBuP,EAAeC,IAAQ,QAAO,GAAM,KAAKA,EAAMC,MAAMC,QAAQ,CAACjB,OAAO,gBAAgB,OAAmBhP,OAAO2O,EAAiB,IAAxB3O,CAA2B,SAASA,OAAOX,EAA+B,EAAtCW,CAAyCA,OAAOX,EAA+B,EAAtCW,CAAyC,CAACE,KAAK,SAASgQ,UAAU,gBAAgBC,MAAM,CAACC,UAAU,uBAAuBL,GAAO,GAAG,CAACM,SAAS,kBAAkB,KAAKN,EAAMC,MAAMC,QAAQ,CAACjB,OAAO,aAAa,OAAmBhP,OAAO2O,EAAiB,IAAxB3O,CAA2B,SAASA,OAAOX,EAA+B,EAAtCW,CAAyCA,OAAOX,EAA+B,EAAtCW,CAAyC,CAACE,KAAK,SAASgQ,UAAU,gBAAgBC,MAAM,CAACC,UAAU,0BAA0BL,GAAO,GAAG,CAACM,SAAS,iBAAiB,QAAQ,OAAmBrQ,OAAO2O,EAAiB,IAAxB3O,CAA2B,SAASA,OAAOX,EAA+B,EAAtCW,CAAyCA,OAAOX,EAA+B,EAAtCW,CAAyC,CAACE,KAAK,SAASgQ,UAAU,iBAAiBH,GAAO,GAAG,CAACM,SAAS,sBAAuB,SAASC,IAAM,MAAMC,EAAoBvQ,OAAO0O,EAAyB,mBAAhC1O,CAAmC,CAACwQ,MAAM,KAAKC,EAAK,gBAAiBC,EAAMH,EAAoBG,MAAM7Q,EAAO0Q,EAAoB1Q,OAAmD8Q,GAAnCJ,EAAoBd,SAAqCzP,OAAO0O,EAA2B,qBAAlC1O,CAAqC,CAAC4Q,SAASC,IAASJ,EAAK,CAACvQ,KAAK,YAAYC,MAAM0Q,QAAaC,EAAOH,EAAsBG,OAAiDC,GAAhCJ,EAAsBK,UAAeL,EAAsBI,MAAWE,EAAYjR,OAAOP,EAA+B,EAAtCO,CAAyC8O,EAAQ,CAACoC,UAAS,EAAKtR,QAAQ,CAACuR,SAASnR,OAAOP,EAA6B,EAApCO,EAAuC,KAAKsM,QAAQC,IAAI,qCAAqCuE,EAAO,CAACM,gBAAe,EAAMC,YAAW,OAAUC,QAAQtR,OAAOP,EAA6B,EAApCO,EAAuC,KAAKsM,QAAQC,IAAI,wBAAwBwE,OAAUQ,aAAavR,OAAOP,EAA6B,EAApCO,EAAuCoL,IAAUkB,QAAQC,IAAI,iBAAiBiF,SAASjD,KAAK4B,MAAMsB,WAAWrG,EAAQC,aAAaqG,SAAS1R,OAAOP,EAA6B,EAApCO,EAAuC,CAACoL,EAAQuG,KAAUrF,QAAQC,IAAI,eAAemE,EAAM,CAAC3Q,KAAKqL,EAAQgE,eAAewC,UAAU5R,OAAOP,EAA6B,EAApCO,EAAuC,CAACoL,EAAQuG,KAAUrF,QAAQC,IAAI,eAAe1M,UAG/9FgS,EAAa7R,OAAOZ,EAA+B,EAAtCY,CAAyCiR,EAAY,GAAGa,EAAQD,EAAa,GAAGpB,EAAKoB,EAAa,GAAWA,EAAa,GAAG,OAAmB7R,OAAO2O,EAAiB,IAAxB3O,CAA2B,MAAM,CAACkQ,UAAU,MAAMG,SAAsBrQ,OAAO2O,EAAiB,IAAxB3O,CAA2B8P,EAAe,CAACE,MAAM8B,EAAQC,QAAQ,IAAItB,EAAK,aAChU,MACmEuB,EAAYR,SAASS,eAAe,QAAQ3S,EAAkB,OAAeU,OAAO2O,EAAiB,IAAxB3O,CAA2BsQ,EAAI,IAAI0B,KAIvL,CAAC,CAAC,GAAG,EAAE"},"input":"(this[\"webpackJsonpxstate-react-typescript-template\"] = this[\"webpackJsonpxstate-react-typescript-template\"] || []).push([[0],{\n\n/***/ 20:\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(24);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js + 1 modules\nvar objectSpread2 = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./src/styles.scss\nvar styles = __webpack_require__(20);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(21);\n\n// EXTERNAL MODULE: ./node_modules/xstate/es/Machine.js + 2 modules\nvar Machine = __webpack_require__(41);\n\n// EXTERNAL MODULE: ./node_modules/xstate/es/actions.js\nvar es_actions = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/@xstate/react/es/useMachine.js + 3 modules\nvar useMachine = __webpack_require__(40);\n\n// EXTERNAL MODULE: ./node_modules/@xstate/inspect/es/browser.js + 3 modules\nvar browser = __webpack_require__(39);\n\n// CONCATENATED MODULE: ./src/dmAppointment.ts\n// new stuff\n//new\n//new\nconst _actions=actions,dmAppointment_cancel=_actions.cancel;//new\nfunction say(text){return Object(es_actions[\"k\" /* send */])(_context=>({type:\"SPEAK\",value:text}));}function dmAppointment_listen(){return Object(es_actions[\"k\" /* send */])(\"LISTEN\");}//new\nfunction helpm(prompt,name){return{entry:say(prompt),on:{ENDSPEECH:name+\".hist\"}};}function speech(prompt){return{entry:say(prompt),on:{ENDSPEECH:\"ask\"}};}//new\nconst grammar={// Here are some common names in English that I found are easier for the robot to understand.\n\"John\":{person:\"John Appleseed\"},\"Jack\":{person:\"Jack Orangeseed\"},\"David\":{person:\"David Grapeseed\"},\"Robert\":{person:\"Robert Watermelonseed\"},\"Jennifer\":{person:\"Jennifer Bananaseed\"},\"Jessica\":{person:\"Jessica Pineappleseed\"},\"john\":{person:\"john appleseed\"},\"jack\":{person:\"jack orangeseed\"},\"david\":{person:\"david grapeseed\"},\"robert\":{person:\"robert watermelonseed\"},\"jennifer\":{person:\"jennifer bananaseed\"},\"jessica\":{person:\"jessica pineappleseed\"},// Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n\"Zhe\":{person:\"Zhe Han\"},\"Siyi\":{person:\"Siyi Gu\"},\"Jae Eun\":{person:\"Jae Eun Hong\"},\"Oreen\":{person:\"Oreen Yousuf\"},\"Angeliki\":{person:\"Angeliki Zagoura\"},\"Flor\":{person:\"Flor Ortiz\"},\"Emma\":{person:\"Emma Wallerö\"},\"zhe\":{person:\"zhe han\"},\"siyi\":{person:\"siyi gu\"},\"jae eun\":{person:\"jae eun hong\"},\"oreen\":{person:\"oreen yousuf\"},\"angeliki\":{person:\"angeliki zagoura\"},\"flor\":{person:\"flor ortiz\"},\"emma\":{person:\"emma wallerö\"},//Days of the week with alternating potential utterances ('on')\n\"Monday\":{day:\"Monday\"},\"on Monday\":{day:\"Monday\"},\"Tuesday\":{day:\"Tuesday\"},\"on Tuesday\":{day:\"Tuesday\"},\"Wednesday\":{day:\"Wednesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"Thursday\":{day:\"Thursday\"},\"on Thursday\":{day:\"Thursday\"},\"Friday\":{day:\"Friday\"},\"on Friday\":{day:\"Friday\"},\"Saturday\":{day:\"Saturday\"},\"on Saturday\":{day:\"Saturday\"},\"Sunday\":{day:\"Sunday\"},\"on Sunday\":{day:\"Sunday\"},//times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"},\"one\":{time:\"01:00\"},\"two\":{time:\"02:00\"},\"three\":{time:\"03:00\"},\"four\":{time:\"04:00\"},\"five\":{time:\"05:00\"},\"six\":{time:\"06:00\"},\"seven\":{time:\"07:00\"},\"eight\":{time:\"08:00\"},\"nine\":{time:\"09:00\"},\"ten\":{time:\"10:00\"},\"eleven\":{time:\"11:00\"},\"twelve\":{time:\"12:00\"},\"thirteen\":{time:\"13:00\"},\"fourteen\":{time:\"14:00\"},\"fifteen\":{time:\"15:00\"},\"sixteen\":{time:\"16:00\"},\"seventeen\":{time:\"17:00\"},\"eighteen\":{time:\"18:00\"},\"nineteen\":{time:\"19:00\"},\"twenty\":{time:\"20:00\"},\"twenty one\":{time:\"21:00\"},\"twenty two\":{time:\"22:00\"},\"twenty three\":{time:\"23:00\"},\"twenty four\":{time:\"00:00\"},\"at 1\":{time:\"01:00\"},\"at 2\":{time:\"02:00\"},\"at 3\":{time:\"03:00\"},\"at 4\":{time:\"04:00\"},\"at 5\":{time:\"05:00\"},\"at 6\":{time:\"06:00\"},\"at 7\":{time:\"07:00\"},\"at 8\":{time:\"08:00\"},\"at 9\":{time:\"09:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 13\":{time:\"13:00\"},\"at 14\":{time:\"14:00\"},\"at 15\":{time:\"15:00\"},\"at 16\":{time:\"16:00\"},\"at 17\":{time:\"17:00\"},\"at 18\":{time:\"18:00\"},\"at 19\":{time:\"19:00\"},\"at 20\":{time:\"20:00\"},\"at 21\":{time:\"21:00\"},\"at 22\":{time:\"22:00\"},\"at 23\":{time:\"23:00\"},\"at 24\":{time:\"00:00\"},\"1\":{time:\"01:00\"},\"2\":{time:\"02:00\"},\"3\":{time:\"03:00\"},\"4\":{time:\"04:00\"},\"5\":{time:\"05:00\"},\"6\":{time:\"06:00\"},\"7\":{time:\"07:00\"},\"8\":{time:\"08:00\"},\"9\":{time:\"09:00\"},\"10\":{time:\"10:00\"},\"11\":{time:\"11:00\"},\"12\":{time:\"12:00\"},\"13\":{time:\"13:00\"},\"14\":{time:\"14:00\"},\"15\":{time:\"15:00\"},\"16\":{time:\"16:00\"},\"17\":{time:\"17:00\"},\"18\":{time:\"18:00\"},\"19\":{time:\"19:00\"},\"20\":{time:\"20:00\"},\"21\":{time:\"21:00\"},\"22\":{time:\"22:00\"},\"23\":{time:\"23:00\"},\"24\":{time:\"00:00\"}};//second grammar for trues and falses\nconst grammar2={\"yes\":true,\"Yes\":true,\"yes of course\":true,\"Yes of course\":true,\"sure\":true,\"Sure\":true,\"absolutely\":true,\"Absolutely\":true,\"perfect\":true,\"Perfect\":true,\"no\":false,\"No\":false,\"no way\":false,\"No way\":false};//new\nconst commands={\"help\":\"h\",\"Help\":\"H\"};const grammar3={\"count\":0};//new\n/*function promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            ask: {\n                entry: send(\"LISTEN\")\n            },\n        }})\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n   \n    initial: \"init\",\n    states: {\n        init: {\n            on: {\n                CLICK: \"welcome\"\n            }            \n        },        \n\n        welcome: {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")\n        },\n\n\n        query: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I understand.`\n                    })),\n        }, \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n\t\t\t\t\tcond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"wholeday\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`,\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        wholeday: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"time\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirm_meeting_whole_day\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n\t},\n        time: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_time\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.day}. What time is your meeting?`,\n                    \n                    })),\n            on: { ENDSPEECH: \"ask\" }\n                },\n        ask: {\n            entry: listen()\n                },\n        nomatch: {\n            entry: say(\"Sorry I do not know that\"),\n        on: { ENDSPEECH: \"prompt\" }\n                }\n                }\n        },\n        confirm_meeting_whole_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"init\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                }\n\n\t},\n    confirm_time: {\n        initial: \"prompt\",\n        on:  {\n            RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                target: \"who\"\n            },\n    {cond: (context) => (grammar2[context.recResult] === true),\n    target: \"confirmed\"\n    },\n            { target: \".nomatch\" }]\n        },\n        states: {\n            prompt: {\n               entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                })),\n        on: { ENDSPEECH: \"ask\" }\n            },\n    ask: {\n         entry: listen()\n        },\n    nomatch: {\n        entry: say(\"Sorry I do not understand\"),\n    on: { ENDSPEECH: \"prompt\" }\n           }\n            },\n        },\n    confirmed: {\n        initial: \"prompt\",\n        on: { ENDSPEECH: \"init\" },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Your appointment has been created!`\n                }))\n            },\n    }\n    }\n    }})\n*/function promptAsk(prompt){return{initial:'prompt',states:{prompt:{entry:say(prompt),on:{ENDSPEECH:'ask'}},ask:{entry:Object(es_actions[\"k\" /* send */])('LISTEN')}}};}/* //lab 2 base code\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = \n\n({\n    initial: 'init',\n    states: \n    {\n        init:{\n            on: {\n                CLICK: 'welcome'\n                }\n             },\n        welcome: \n        {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAsk(\"What would you like to do?\")\n        },\n\n        query: \n        {\n            invoke: {\n            \n            id: 'rasa',\n            src: (context, event) => nluRequest(context.option),\n            onDone: {\n                target: 'menu',\n                actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                (context: SDSContext, event: any) => console.log(event.data)]\n            },\n            onError: {\n                target: 'welcome',\n                actions: (context, event) => console.log(event.data)\n\n                }\n            }\n        },\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: 'todo', cond: (context) => context.option === 'todo' },\n                    { target: 'timer', cond: (context) => context.option === 'timer' },\n                    { target: 'appointment', cond: (context) => context.option === 'appointment' }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I see.`\n                    })),\n        },\n                 nomatch: {\n                    entry: say(\"Sorry, I don't understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create an appointment`\n                    }))\n                }}\n        },\n\n        who: \n        \n        {\n            initial: \"prompt\",\n            on: \n            {\n                RECOGNISED: \n                [\n                    {\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n                    },\n                { target: \".nomatch\" }\n                ]\n            },\n\n            states: \n            \n            {\n                prompt: \n                \n                {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                \n                ask: \n                \n                {\n                    entry: listen()\n                },\n                \n                nomatch: \n                \n                {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n\n        day: \n        \n        {\n            initial: \"prompt\",\n            on: \n            \n            {\n\t            RECOGNISED: \n                [\n                    {\n\t                cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n\t\t            actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n\t\t            target: \"wholeday\"\n\n\t\t            },\t\n\n\t\t            { target: \".nomatch\" }\n                \n                ]\n\t        },\n\n            states: \n\n            {\n                prompt: \n                \n                {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`\n                    })),\n\t\t            on: { ENDSPEECH: \"ask\" }\n                },\n\t\t        ask: \n                \n                {\n\t\t            entry: listen()\n\t            },\n\n\t\t        nomatch: \n                \n                {\n\t\t            entry: say(\"Sorry I don't know which day are you talking about\"),\n\t\t            on: { ENDSPEECH: \"prompt\" }\n\t            }\t     \n            }\n        },\n\n\n\t    wholeday: \n        \n        {\n\t\t        initial: \"prompt\",\n\t\t        on: \n                \n                {\n\t                RECOGNISED: \n                    \n                    [\n                        {cond: (context) => grammar2[context.recResult] === true,\n                        target: \"timefixed\"},\n\n\t\t\t\t\t\t{cond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\t\ttarget: \"settime\"},\n\n\t                { target: \".nomatch\" }\n                    ]\n\t\t        \n                },\n\n\n\t\t        states: \n                \n                {\n\t\t            prompt: \n                    \n                    {\n\t\t\t            entry: send((context) => ({\n\t\t\t                type: \"SPEAK\",\n\t\t\t\t\t\t    value: `Good. Appointment is on ${context.day}. Will it take the whole day?`\n\t\t\t            })),\n\t\t\t            on: { ENDSPEECH: \"ask\" }\n\t\t            },\n\n\t\t            ask: {\n\t\t                entry: listen()\n\t\t            },\n\n\t\t            nomatch: \n\n                    {\n\t\t\t            entry: say(\"Please repeat it again\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t            }\n\t\t        }\t     \n        },\n\n\n            timefixed: \n            \n            {\n\t\t           initial: \"prompt\",\n\n\t               on: \n                   \n                   {\n\t\t               RECOGNISED: \n                       \n                       [\n                           {cond: (context) => grammar2[context.recResult] === true,\n\t\t\t               target: \"Finished\"},\n\t\t\t\t\t\t   {cond: (context) => grammar2[context.recResult] === false,\n                           target: \"who\"},\n\t\t                   { target: \".nomatch\" }\n                        ]\n\t\t            },\n\n\n\n\t\t            states: \n                    \n                    {\n\t\t                prompt: \n                        \n                        {\n\t\t\t                entry: send((context) => ({\n\t\t\t                    type: \"SPEAK\",\n\t\t\t\t\t\t\t\tvalue: `Good. Do you want to me create an appointment with ${context.person} on ${context.day}for the whole day?`\n                            })),\n                            on: { ENDSPEECH: \"ask\" }\n\t\t                },\n\n\n\t\t                ask: \n                        \n                        {\n\t\t\t                entry: listen()\n\t\t                },\n\n\t\t                nomatch: \n                        \n                        {\n\t\t\t                entry: say(\"Please repeat it again\"),\n\t\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t                }\n                    }\n\t        },\n\n\t\t\tsettime: \n                \n                    {\n\n\t\t\t\t\t    initial: \"prompt\",\n\t\t\t\t\t    on: \n                    \n                    {\n\t\t\t\t\t\tRECOGNISED: \n                        [\n                            {\n\t\t\t\t\t\t\t\n                            cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n\t\t\t\t\t\t\tactions: assign((context) => { return { time: grammar[context.recResult].time }}),\n\t\t\t\t\t\t\ttarget: \"withtime\"\n\n\t\t\t\t\t\t    },\n\n\t\t\t\t\t\t    { target: \".nomatch\" }\n                        ]\n\t\t\t\t\t},\n\n\n\t\t\t\t\t    states: \n\n                        {\n\t\t\t\t\t\t    prompt: { entry: say(\"What time is your meeting\"),\n\t\t\t\t\t\t    on: { ENDSPEECH: \"ask\" }\n\t\t\t\t\t    },\n\n\t\t\t\t\task: \n                    {\n\t\t\t\t\t\tentry: listen()\n\t\t\t\t    },\n\n\t\t\t\tnomatch:\n                \n                {\n\t\t\t\t\tentry: say(\"Please repeat it again\"),\n\t\t\t\t\ton: { ENDSPEECH: \"prompt\" }\n\t\t\t\t}\n\t\t\t            }\n\t\t                \n                    },\n\n\n\t\twithtime: \n        \n        {\n\t\t\tinitial: \"prompt\",\n\t\t\ton: \n            \n            {\n\t\t\t\tRECOGNISED: \n                [\n                    \n                    { \n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === true,\n\t\t\t\t\ttarget: \"Finished\"\n                    },\n\t\t\t\t\t{\n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\ttarget: \"who\"\n\t\t\t\t    },\n\t\t\t\t    { target: \".nomatch\" }\n                ]\n\t\t\t},\n\n\n\t\t\t states: \n             \n            {\n\t\t\t\t prompt: \n                 \n                 {\n\t\t\t\t\t entry: send((context) => ({\n\t\t\t\t\t\t type: \"SPEAK\",\n\t\t\t\t\t\t value: `Good. Do you want to me create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n\t\t\t\t\t })),\n\t\t\t\t\t on: { ENDSPEECH: \"ask\" }\n\t\t\t\t },\n\n\t\t\t\t ask: \n                {\n\t\t\t\t\t entry: listen()\n\t\t\t\t},\n\n\t\t\t\t nomatch: \n                 \n                 {\n\t\t\t\t\t entry: say(\"Please repeat it again\"),\n\t\t\t\t\t on: { ENDSPEECH: \"prompt\" }\n\t\t\t\t }\n\t\t\t}\n\t\t},\n\n                Finished: \n                \n                {\n\t\t                 initial: \"prompt\",\n\t\t                 on: { ENDSPEECH: \"init\" },\n\t\t                 states: \n                        {\n\t\t\t                 prompt: { entry: say(\"Your appointment has been created!\")},\n\t                    }\n\t            }\t    \n    }\n\n})*/ // new code for lab 4\nconst dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{initial:\"prompt\",on:{RECOGNISED:[{target:\"query\",cond:context=>!(context.recResult in commands),actions:Object(es_actions[\"b\" /* assign */])(context=>{return{option:context.recResult};})},{target:\"help1\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"welcome.maxspeech1\",cond:context=>grammar3[\"count\"]<=2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"What would you like to do?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},maxspeech1:Object(objectSpread2[\"a\" /* default */])({},speech(\"You have not responded. What is it you would like to do?\")),ask:{entry:[dmAppointment_listen(),Object(es_actions[\"k\" /* send */])('MAXSPEECH',{delay:5000})]}}},help1:Object(objectSpread2[\"a\" /* default */])({},helpm(\"Please tell me what you want to do.\",\"welcome\")),query:{invoke:{id:\"rasa\",src:(context,event)=>nluRequest(context.option),onDone:{target:\"menu\",actions:[Object(es_actions[\"b\" /* assign */])((context,event)=>{return{option:event.data.intent.name};}),(context,event)=>console.log(event.data)]//actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n},onError:{target:\"welcome\",actions:(context,event)=>console.log(event.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:\"todo\",cond:context=>context.option===\"todo\"},{target:\"timer\",cond:context=>context.option===\"timer\"},{target:\"appointment\",cond:context=>context.option===\"appointment\"}]},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"OK. I understand\\uFF0Cyou want a \".concat(context.option,\".\")}))}/*            nomatch: {\n                    entry: say(\"Sorry, I don\"t understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } */}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Let\\\"s create a to do item.\"}))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Let\\\"s create a timer\"}))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Let\\\"s create an appointment\"}))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:Object(es_actions[\"b\" /* assign */])(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:dmAppointment_cancel(\"maxsp\")},{target:\"help2\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"who.maxspeech2\",cond:context=>grammar3[\"count\"]<=2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[dmAppointment_listen(),Object(es_actions[\"k\" /* send */])('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech2:Object(objectSpread2[\"a\" /* default */])({},speech(\"You did not respond. Which person are you meeting with?\")),nomatch:{entry:say(\"Sorry, I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},help2:Object(objectSpread2[\"a\" /* default */])({},helpm(\"Please tell me the name\",\"who\")),day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:Object(es_actions[\"b\" /* assign */])(context=>{return{day:grammar[context.recResult].day};}),target:\"wholeday\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:dmAppointment_cancel(\"maxsp\")},{target:\"help3\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"day.maxspeech3\",cond:context=>grammar3[\"count\"]<=2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". What day is your meeting on?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[dmAppointment_listen(),Object(es_actions[\"k\" /* send */])('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech3:Object(objectSpread2[\"a\" /* default */])({},speech(\"You did not respond, state a day\")),nomatch:{entry:say(\"Sorry, I don't know which day you are talking about.\"),on:{ENDSPEECH:\"prompt\"}}}},help3:Object(objectSpread2[\"a\" /* default */])({},helpm(\"Please tell me the day\",\"day\")),wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"notime\"},{cond:context=>grammar2[context.recResult]===false,target:\"whattime\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:dmAppointment_cancel(\"maxsp\")},{target:\"help4\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"wholeday.maxspeech4\",cond:context=>grammar3[\"count\"]<=2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Good, on \".concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[dmAppointment_listen(),Object(es_actions[\"k\" /* send */])('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech4:Object(objectSpread2[\"a\" /* default */])({},speech(\"You did not respond, make a decision\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help4:Object(objectSpread2[\"a\" /* default */])({},helpm(\"Please tell me the decision\",\"wholeday\")),notime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\"},{cond:context=>grammar2[context.recResult]===false,target:\"who\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:dmAppointment_cancel(\"maxsp\")},{target:\"help5\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"notime.maxspeech5\",cond:context=>grammar3[\"count\"]<=2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Great. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[dmAppointment_listen(),Object(es_actions[\"k\" /* send */])('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech5:Object(objectSpread2[\"a\" /* default */])({},speech(\"You did not respond, please confirm.\")),nomatch:{entry:say(\"Please, repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help5:Object(objectSpread2[\"a\" /* default */])({},helpm(\"Please confirm it\",\"notime\")),whattime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:Object(es_actions[\"b\" /* assign */])(context=>{return{time:grammar[context.recResult].time};}),target:\"withtime\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:dmAppointment_cancel(\"maxsp\")},{target:\"help6\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"whattime.maxspeech6\",cond:context=>grammar3[\"count\"]<=2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"What time is your meeting\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[dmAppointment_listen(),Object(es_actions[\"k\" /* send */])('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech6:Object(objectSpread2[\"a\" /* default */])({},speech(\"You did not respond, state a time\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help6:Object(objectSpread2[\"a\" /* default */])({},helpm(\"Please tell me the time\",\"whattime\")),withtime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\"},{cond:context=>grammar2[context.recResult]===false,target:\"who\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:dmAppointment_cancel(\"maxsp\")},{target:\"help7\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"withtime.maxspeech7\",cond:context=>grammar3[\"count\"]<=2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:Object(es_actions[\"b\" /* assign */])(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:Object(es_actions[\"k\" /* send */])(context=>({type:\"SPEAK\",value:\"Great. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[dmAppointment_listen(),Object(es_actions[\"k\" /* send */])('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech7:Object(objectSpread2[\"a\" /* default */])({},speech(\"You did not respond, please confirm\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help7:Object(objectSpread2[\"a\" /* default */])({},helpm(\"Please confirm\",\"withtime\")),Finished:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Ok, great! Your appointment has been created!\")}}}}};//the api for rasa to use\nconst proxyurl=\"https://cors-anywhere.herokuapp.com/\";// have to set up temporary permission/access for the robot to not give error: \"Unexpected token S in JSON at position 0\"\nconst rasaurl=\"https://intents-oyousuf.herokuapp.com/model/parse\";const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:\"POST\",headers:{\"Origin\":\"http://localhost:3000/react-xstate-colourchanger\"},body:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());\n// EXTERNAL MODULE: ./node_modules/react-speech-kit/dist/index.js\nvar dist = __webpack_require__(19);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./src/index.tsx\nObject(browser[\"a\" /* inspect */])({url:\"https://statecharts.io/inspect\",iframe:false});const machine=Object(Machine[\"a\" /* Machine */])({id:'root',type:'parallel',states:{dm:Object(objectSpread2[\"a\" /* default */])({},dmMachine),asrtts:{initial:'idle',states:{idle:{on:{LISTEN:'recognising',SPEAK:{target:'speaking',actions:Object(es_actions[\"b\" /* assign */])((_context,event)=>{return{ttsAgenda:event.value};})}}},recognising:{entry:'recStart',exit:'recStop',on:{ASRRESULT:{actions:['recLogResult',Object(es_actions[\"b\" /* assign */])((_context,event)=>{return{recResult:event.value};})],target:'.match'},RECOGNISED:'idle'},states:{match:{entry:Object(es_actions[\"k\" /* send */])('RECOGNISED')}}},speaking:{entry:'ttsStart',on:{ENDSPEECH:'idle'}}}}}},{actions:{recLogResult:context=>{/* context.recResult = event.recResult; */console.log('<< ASR: '+context.recResult);},test:()=>{console.log('test');},logIntent:context=>{/* context.nluData = event.data */console.log('<< NLU intent: '+context.nluData.intent.name);}}});const ReactiveButton=props=>{switch(true){case props.state.matches({asrtts:'recognising'}):return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\",style:{animation:\"glowing 20s linear\"}},props),{},{children:\"Listening...\"}));case props.state.matches({asrtts:'speaking'}):return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\",style:{animation:\"bordering 1s infinite\"}},props),{},{children:\"Speaking...\"}));default:return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"button\",Object(objectSpread2[\"a\" /* default */])(Object(objectSpread2[\"a\" /* default */])({type:\"button\",className:\"glow-on-hover\"},props),{},{children:\"Click to start\"}));}};function App(){const _useSpeechSynthesis=Object(dist[\"useSpeechSynthesis\"])({onEnd:()=>{send('ENDSPEECH');}}),speak=_useSpeechSynthesis.speak,cancel=_useSpeechSynthesis.cancel,speaking=_useSpeechSynthesis.speaking;const _useSpeechRecognition=Object(dist[\"useSpeechRecognition\"])({onResult:result=>{send({type:\"ASRRESULT\",value:result});}}),listen=_useSpeechRecognition.listen,listening=_useSpeechRecognition.listening,stop=_useSpeechRecognition.stop;const _useMachine=Object(useMachine[\"b\" /* useMachine */])(machine,{devTools:true,actions:{recStart:Object(useMachine[\"a\" /* asEffect */])(()=>{console.log('Ready to receive a color command.');listen({interimResults:false,continuous:true});}),recStop:Object(useMachine[\"a\" /* asEffect */])(()=>{console.log('Recognition stopped.');stop();}),changeColour:Object(useMachine[\"a\" /* asEffect */])(context=>{console.log('Repainting...');document.body.style.background=context.recResult;}),ttsStart:Object(useMachine[\"a\" /* asEffect */])((context,effect)=>{console.log('Speaking...');speak({text:context.ttsAgenda});}),ttsCancel:Object(useMachine[\"a\" /* asEffect */])((context,effect)=>{console.log('TTS STOP...');cancel();})/* speak: asEffect((context) => {\n\t     * console.log('Speaking...');\n             *     speak({text: context.ttsAgenda })\n             * } */}}),_useMachine2=Object(slicedToArray[\"a\" /* default */])(_useMachine,3),current=_useMachine2[0],send=_useMachine2[1],service=_useMachine2[2];return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{className:\"App\",children:/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(ReactiveButton,{state:current,onClick:()=>send('CLICK')})});};/* RASA API\n *  */const src_proxyurl=\"https://cors-anywhere.herokuapp.com/\";const src_rasaurl='https://intents-oyousuf.herokuapp.com/model/parse';const src_nluRequest=text=>fetch(new Request(src_proxyurl+src_rasaurl,{method:'POST',headers:{'Origin':'http://maraev.me'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());const rootElement=document.getElementById(\"root\");react_dom[\"render\"](/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(App,{}),rootElement);\n\n/***/ })\n\n},[[35,1,2]]]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\mini-css-extract-plugin\\dist\\loader.js??ref--5-oneOf-6-0!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\css-loader\\dist\\cjs.js??ref--5-oneOf-6-1!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\postcss-loader\\src\\index.js??postcss!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\resolve-url-loader\\index.js??ref--5-oneOf-6-3!C:\\Users\\User\\react-xstate-colourchanger\\node_modules\\sass-loader\\dist\\cjs.js??ref--5-oneOf-6-4!C:\\Users\\User\\react-xstate-colourchanger\\src\\styles.scss","C:/Users/User/react-xstate-colourchanger/src/dmAppointment.ts","C:/Users/User/react-xstate-colourchanger/src/index.tsx"],"names":["actions","cancel","say","text","send","_context","type","value","listen","helpm","prompt","name","entry","on","ENDSPEECH","speech","grammar","person","day","time","grammar2","commands","grammar3","promptAsk","initial","states","ask","dmMachine","init","CLICK","welcome","RECOGNISED","target","cond","context","recResult","assign","option","MAXSPEECH","hist","maxspeech1","delay","help1","query","invoke","id","src","event","nluRequest","onDone","data","intent","console","log","onError","menu","todo","timer","appointment","who","maxspeech2","nomatch","help2","maxspeech3","help3","wholeday","maxspeech4","help4","notime","maxspeech5","help5","whattime","maxspeech6","help6","withtime","maxspeech7","help7","Finished","proxyurl","rasaurl","fetch","Request","method","headers","body","then","json","inspect","url","iframe","machine","Machine","dm","asrtts","idle","LISTEN","SPEAK","ttsAgenda","recognising","exit","ASRRESULT","match","speaking","recLogResult","test","logIntent","nluData","ReactiveButton","props","state","matches","animation","App","useSpeechSynthesis","onEnd","speak","useSpeechRecognition","onResult","result","listening","stop","useMachine","devTools","recStart","asEffect","interimResults","continuous","recStop","changeColour","document","style","background","ttsStart","effect","ttsCancel","current","service","rootElement","getElementById","ReactDOM"],"mappings":";;;;;AAAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;AAKA;AAEA;eACeA,O,CAARC,oB,UAAAA,M,CACP;AAGA,QAASC,IAAT,CAAaC,IAAb,CAAyD,CACrD,MAAOC,mCAAI,CAAEC,QAAD,GAA2B,CAAEC,IAAI,CAAE,OAAR,CAAiBC,KAAK,CAAEJ,IAAxB,CAA3B,CAAD,CAAX,CACH,CAED,QAASK,qBAAT,EAAgD,CAC5C,MAAOJ,mCAAI,CAAC,QAAD,CAAX,CACH,CAED;AACA,QAASK,MAAT,CAAeC,MAAf,CAA+BC,IAA/B,CAAsF,CAClF,MAAQ,CAACC,KAAK,CAAEV,GAAG,CAACQ,MAAD,CAAX,CACCG,EAAE,CAAE,CAACC,SAAS,CAAEH,IAAI,CAAC,OAAjB,CADL,CAAR,CAEH,CAED,QAASI,OAAT,CAAgBL,MAAhB,CAAyE,CACrE,MAAQ,CAACE,KAAK,CAAEV,GAAG,CAACQ,MAAD,CAAX,CACCG,EAAE,CAAE,CAACC,SAAS,CAAE,KAAZ,CADL,CAAR,CAGH,CACD;AAGA,KAAME,QACL,CAAG,CACA;AACA,OAAQ,CAAEC,MAAM,CAAE,gBAAV,CAFR,CAGA,OAAQ,CAAEA,MAAM,CAAE,iBAAV,CAHR,CAIA,QAAS,CAAEA,MAAM,CAAE,iBAAV,CAJT,CAKA,SAAU,CAAEA,MAAM,CAAE,uBAAV,CALV,CAMA,WAAY,CAAEA,MAAM,CAAE,qBAAV,CANZ,CAOA,UAAW,CAAEA,MAAM,CAAE,uBAAV,CAPX,CASA,OAAQ,CAAEA,MAAM,CAAE,gBAAV,CATR,CAUA,OAAQ,CAAEA,MAAM,CAAE,iBAAV,CAVR,CAWA,QAAS,CAAEA,MAAM,CAAE,iBAAV,CAXT,CAYA,SAAU,CAAEA,MAAM,CAAE,uBAAV,CAZV,CAaA,WAAY,CAAEA,MAAM,CAAE,qBAAV,CAbZ,CAcA,UAAW,CAAEA,MAAM,CAAE,uBAAV,CAdX,CAgBA;AACA,MAAO,CAAEA,MAAM,CAAE,SAAV,CAjBP,CAkBA,OAAQ,CAAEA,MAAM,CAAE,SAAV,CAlBR,CAmBA,UAAW,CAAEA,MAAM,CAAE,cAAV,CAnBX,CAoBA,QAAS,CAAEA,MAAM,CAAE,cAAV,CApBT,CAqBA,WAAY,CAAEA,MAAM,CAAE,kBAAV,CArBZ,CAsBA,OAAQ,CAAEA,MAAM,CAAE,YAAV,CAtBR,CAuBA,OAAQ,CAAEA,MAAM,CAAE,cAAV,CAvBR,CAyBA,MAAO,CAAEA,MAAM,CAAE,SAAV,CAzBP,CA0BA,OAAQ,CAAEA,MAAM,CAAE,SAAV,CA1BR,CA2BA,UAAW,CAAEA,MAAM,CAAE,cAAV,CA3BX,CA4BA,QAAS,CAAEA,MAAM,CAAE,cAAV,CA5BT,CA6BA,WAAY,CAAEA,MAAM,CAAE,kBAAV,CA7BZ,CA8BA,OAAQ,CAAEA,MAAM,CAAE,YAAV,CA9BR,CA+BA,OAAQ,CAAEA,MAAM,CAAE,cAAV,CA/BR,CAiCA;AACA,SAAU,CAAEC,GAAG,CAAE,QAAP,CAlCV,CAmCA,YAAa,CAAEA,GAAG,CAAE,QAAP,CAnCb,CAoCA,UAAW,CAAEA,GAAG,CAAE,SAAP,CApCX,CAqCA,aAAc,CAAEA,GAAG,CAAE,SAAP,CArCd,CAsCA,YAAa,CAAEA,GAAG,CAAE,WAAP,CAtCb,CAuCA,eAAgB,CAAEA,GAAG,CAAE,WAAP,CAvChB,CAwCA,WAAY,CAAEA,GAAG,CAAE,UAAP,CAxCZ,CAyCA,cAAe,CAAEA,GAAG,CAAE,UAAP,CAzCf,CA0CA,SAAU,CAAEA,GAAG,CAAE,QAAP,CA1CV,CA2CA,YAAa,CAAEA,GAAG,CAAE,QAAP,CA3Cb,CA4CA,WAAY,CAAEA,GAAG,CAAE,UAAP,CA5CZ,CA6CA,cAAe,CAAEA,GAAG,CAAE,UAAP,CA7Cf,CA8CA,SAAU,CAAEA,GAAG,CAAE,QAAP,CA9CV,CA+CA,YAAa,CAAEA,GAAG,CAAE,QAAP,CA/Cb,CAiDA;AACA,SAAU,CAAEC,IAAI,CAAE,OAAR,CAlDV,CAmDA,SAAU,CAAEA,IAAI,CAAE,OAAR,CAnDV,CAoDA,WAAY,CAAEA,IAAI,CAAE,OAAR,CApDZ,CAqDA,UAAW,CAAEA,IAAI,CAAE,OAAR,CArDX,CAsDA,UAAW,CAAEA,IAAI,CAAE,OAAR,CAtDX,CAuDA,SAAU,CAAEA,IAAI,CAAE,OAAR,CAvDV,CAwDA,WAAY,CAAEA,IAAI,CAAE,OAAR,CAxDZ,CAyDA,WAAY,CAAEA,IAAI,CAAE,OAAR,CAzDZ,CA0DA,UAAW,CAAEA,IAAI,CAAE,OAAR,CA1DX,CA2DA,SAAU,CAAEA,IAAI,CAAE,OAAR,CA3DV,CA4DA,YAAa,CAAEA,IAAI,CAAE,OAAR,CA5Db,CA6DA,YAAa,CAAEA,IAAI,CAAE,OAAR,CA7Db,CA8DA,cAAe,CAAEA,IAAI,CAAE,OAAR,CA9Df,CA+DA,cAAe,CAAEA,IAAI,CAAE,OAAR,CA/Df,CAgEA,aAAc,CAAEA,IAAI,CAAE,OAAR,CAhEd,CAiEA,aAAc,CAAEA,IAAI,CAAE,OAAR,CAjEd,CAkEA,eAAgB,CAAEA,IAAI,CAAE,OAAR,CAlEhB,CAmEA,cAAe,CAAEA,IAAI,CAAE,OAAR,CAnEf,CAoEA,cAAe,CAAEA,IAAI,CAAE,OAAR,CApEf,CAqEA,YAAa,CAAEA,IAAI,CAAE,OAAR,CArEb,CAsEA,gBAAiB,CAAEA,IAAI,CAAE,OAAR,CAtEjB,CAuEA,gBAAiB,CAAEA,IAAI,CAAE,OAAR,CAvEjB,CAwEA,kBAAmB,CAAEA,IAAI,CAAE,OAAR,CAxEnB,CAyEA,iBAAkB,CAAEA,IAAI,CAAE,OAAR,CAzElB,CA2EA,MAAO,CAAEA,IAAI,CAAE,OAAR,CA3EP,CA4EA,MAAO,CAAEA,IAAI,CAAE,OAAR,CA5EP,CA6EA,QAAS,CAAEA,IAAI,CAAE,OAAR,CA7ET,CA8EA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA9ER,CA+EA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA/ER,CAgFA,MAAO,CAAEA,IAAI,CAAE,OAAR,CAhFP,CAiFA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAjFT,CAkFA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAlFT,CAmFA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAnFR,CAoFA,MAAO,CAAEA,IAAI,CAAE,OAAR,CApFP,CAqFA,SAAU,CAAEA,IAAI,CAAE,OAAR,CArFV,CAsFA,SAAU,CAAEA,IAAI,CAAE,OAAR,CAtFV,CAuFA,WAAY,CAAEA,IAAI,CAAE,OAAR,CAvFZ,CAwFA,WAAY,CAAEA,IAAI,CAAE,OAAR,CAxFZ,CAyFA,UAAW,CAAEA,IAAI,CAAE,OAAR,CAzFX,CA0FA,UAAW,CAAEA,IAAI,CAAE,OAAR,CA1FX,CA2FA,YAAa,CAAEA,IAAI,CAAE,OAAR,CA3Fb,CA4FA,WAAY,CAAEA,IAAI,CAAE,OAAR,CA5FZ,CA6FA,WAAY,CAAEA,IAAI,CAAE,OAAR,CA7FZ,CA8FA,SAAU,CAAEA,IAAI,CAAE,OAAR,CA9FV,CA+FA,aAAc,CAAEA,IAAI,CAAE,OAAR,CA/Fd,CAgGA,aAAc,CAAEA,IAAI,CAAE,OAAR,CAhGd,CAiGA,eAAgB,CAAEA,IAAI,CAAE,OAAR,CAjGhB,CAkGA,cAAe,CAAEA,IAAI,CAAE,OAAR,CAlGf,CAoGA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CApGR,CAqGA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CArGR,CAsGA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAtGR,CAuGA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAvGR,CAwGA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAxGR,CAyGA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAzGR,CA0GA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA1GR,CA2GA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA3GR,CA4GA,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA5GR,CA6GA,QAAS,CAAEA,IAAI,CAAE,OAAR,CA7GT,CA8GA,QAAS,CAAEA,IAAI,CAAE,OAAR,CA9GT,CA+GA,QAAS,CAAEA,IAAI,CAAE,OAAR,CA/GT,CAgHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAhHT,CAiHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAjHT,CAkHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAlHT,CAmHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAnHT,CAoHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CApHT,CAqHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CArHT,CAsHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAtHT,CAuHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAvHT,CAwHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAxHT,CAyHA,QAAS,CAAEA,IAAI,CAAE,OAAR,CAzHT,CA0HA,QAAS,CAAEA,IAAI,CAAE,OAAR,CA1HT,CA2HA,QAAS,CAAEA,IAAI,CAAE,OAAR,CA3HT,CA6HA,IAAK,CAAEA,IAAI,CAAE,OAAR,CA7HL,CA8HA,IAAK,CAAEA,IAAI,CAAE,OAAR,CA9HL,CA+HA,IAAK,CAAEA,IAAI,CAAE,OAAR,CA/HL,CAgIA,IAAK,CAAEA,IAAI,CAAE,OAAR,CAhIL,CAiIA,IAAK,CAAEA,IAAI,CAAE,OAAR,CAjIL,CAkIA,IAAK,CAAEA,IAAI,CAAE,OAAR,CAlIL,CAmIA,IAAK,CAAEA,IAAI,CAAE,OAAR,CAnIL,CAoIA,IAAK,CAAEA,IAAI,CAAE,OAAR,CApIL,CAqIA,IAAK,CAAEA,IAAI,CAAE,OAAR,CArIL,CAsIA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAtIN,CAuIA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAvIN,CAwIA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAxIN,CAyIA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAzIN,CA0IA,KAAM,CAAEA,IAAI,CAAE,OAAR,CA1IN,CA2IA,KAAM,CAAEA,IAAI,CAAE,OAAR,CA3IN,CA4IA,KAAM,CAAEA,IAAI,CAAE,OAAR,CA5IN,CA6IA,KAAM,CAAEA,IAAI,CAAE,OAAR,CA7IN,CA8IA,KAAM,CAAEA,IAAI,CAAE,OAAR,CA9IN,CA+IA,KAAM,CAAEA,IAAI,CAAE,OAAR,CA/IN,CAgJA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAhJN,CAiJA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAjJN,CAkJA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAlJN,CAmJA,KAAM,CAAEA,IAAI,CAAE,OAAR,CAnJN,CAoJA,KAAM,CAAEA,IAAI,CAAE,OAAR,CApJN,CADJ,CAwJA;AACA,KAAMC,SAAuC,CACzC,CAAC,MAAO,IAAR,CACA,MAAO,IADP,CAEA,gBAAiB,IAFjB,CAGA,gBAAiB,IAHjB,CAIA,OAAQ,IAJR,CAKA,OAAQ,IALR,CAMA,aAAc,IANd,CAOA,aAAc,IAPd,CAQA,UAAW,IARX,CASA,UAAW,IATX,CAUA,KAAM,KAVN,CAWA,KAAM,KAXN,CAYA,SAAU,KAZV,CAaA,SAAU,KAbV,CADJ,CAiBA;AACA,KAAMC,SAAQ,CAAG,CAAC,OAAQ,GAAT,CAAc,OAAQ,GAAtB,CAAjB,CAEA,KAAMC,SAAQ,CAAE,CAAC,QAAS,CAAV,CAAhmBb,MAAnB,CAA6E,CACzE,MAAQ,CACJc,OAAO,CAAE,QADL,CAEJC,MAAM,CAAE,CACJf,MAAM,CAAE,CACJE,KAAK,CAAEV,GAAG,CAACQ,MAAD,CADN,CAEJG,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CAFA,CADJ,CAKJY,GAAG,CAAE,CACDd,KAAK,CAAER,kCAAI,CAAC,QAAD,CADV,CALD,CAFJ,CAAR,CAWH,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"x","sourcesContent":["// extracted by mini-css-extract-plugin","import { MachineConfig, Machine, send, Action, assign } from \"xstate\";\nimport \"./styles.scss\";\n// new stuff\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\n//new\n\n//new\nconst {cancel}=actions\n//new\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send(\"LISTEN\")\n}\n\n//new\nfunction helpm(prompt: string, name: string): MachineConfig<SDSContext, any, SDSEvent>{\n    return ({entry: say(prompt),\n             on: {ENDSPEECH: name+\".hist\" }})\n}\n\nfunction speech(prompt: string): MachineConfig<SDSContext, any, SDSEvent>{\n    return ({entry: say(prompt),\n             on: {ENDSPEECH: \"ask\"\n            }})\n}\n//new\n\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } \n} = {\n    // Here are some common names in English that I found are easier for the robot to understand.\n    \"John\": { person: \"John Appleseed\" },\n    \"Jack\": { person: \"Jack Orangeseed\" },\n    \"David\": { person: \"David Grapeseed\" },\n    \"Robert\": { person: \"Robert Watermelonseed\" },\n    \"Jennifer\": { person: \"Jennifer Bananaseed\" },\n    \"Jessica\": { person: \"Jessica Pineappleseed\" },\n\n    \"john\": { person: \"john appleseed\" },\n    \"jack\": { person: \"jack orangeseed\" },\n    \"david\": { person: \"david grapeseed\" },\n    \"robert\": { person: \"robert watermelonseed\" },\n    \"jennifer\": { person: \"jennifer bananaseed\" },\n    \"jessica\": { person: \"jessica pineappleseed\" },\n\n    // Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n    \"Zhe\": { person: \"Zhe Han\" },\n    \"Siyi\": { person: \"Siyi Gu\" },\n    \"Jae Eun\": { person: \"Jae Eun Hong\" },\n    \"Oreen\": { person: \"Oreen Yousuf\" },\n    \"Angeliki\": { person: \"Angeliki Zagoura\" },\n    \"Flor\": { person: \"Flor Ortiz\" },\n    \"Emma\": { person: \"Emma Wallerö\"},\n\n    \"zhe\": { person: \"zhe han\" },\n    \"siyi\": { person: \"siyi gu\" },\n    \"jae eun\": { person: \"jae eun hong\" },\n    \"oreen\": { person: \"oreen yousuf\" },\n    \"angeliki\": { person: \"angeliki zagoura\" },\n    \"flor\": { person: \"flor ortiz\" },\n    \"emma\": { person: \"emma wallerö\" },\n\n    //Days of the week with alternating potential utterances ('on')\n    \"Monday\": { day: \"Monday\" },\n    \"on Monday\": { day: \"Monday\" },\n    \"Tuesday\": { day: \"Tuesday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"Wednesday\": { day: \"Wednesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"Thursday\": { day: \"Thursday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"Friday\": { day: \"Friday\" },\n    \"on Friday\": { day: \"Friday\" },\n    \"Saturday\": { day: \"Saturday\" },\n    \"on Saturday\": { day: \"Saturday\" },\n    \"Sunday\": { day: \"Sunday\" },\n    \"on Sunday\": { day: \"Sunday\" },\n\n    //times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n    \"at one\": { time: \"01:00\" },\n    \"at two\": { time: \"02:00\" },\n    \"at three\": { time: \"03:00\" },\n    \"at four\": { time: \"04:00\" },\n    \"at five\": { time: \"05:00\" },\n    \"at six\": { time: \"06:00\" },\n    \"at seven\": { time: \"07:00\" },\n    \"at eight\": { time: \"08:00\" },\n    \"at nine\": { time: \"09:00\" },\n    \"at ten\": { time: \"10:00\" },\n    \"at eleven\": { time: \"11:00\" },\n    \"at twelve\": { time: \"12:00\" },\n    \"at thirteen\": { time: \"13:00\" },\n    \"at fourteen\": { time: \"14:00\" },\n    \"at fifteen\": { time: \"15:00\" },\n    \"at sixteen\": { time: \"16:00\" },\n    \"at seventeen\": { time: \"17:00\" },\n    \"at eighteen\": { time: \"18:00\" },\n    \"at nineteen\": { time: \"19:00\" },\n    \"at twenty\": { time: \"20:00\" },\n    \"at twenty one\": { time: \"21:00\" },\n    \"at twenty two\": { time: \"22:00\" },\n    \"at twenty three\": { time: \"23:00\" },\n    \"at twenty four\": { time: \"00:00\" },\n\n    \"one\": { time: \"01:00\" },\n    \"two\": { time: \"02:00\" },\n    \"three\": { time: \"03:00\" },\n    \"four\": { time: \"04:00\" },\n    \"five\": { time: \"05:00\" },\n    \"six\": { time: \"06:00\" },\n    \"seven\": { time: \"07:00\" },\n    \"eight\": { time: \"08:00\" },\n    \"nine\": { time: \"09:00\" },\n    \"ten\": { time: \"10:00\" },\n    \"eleven\": { time: \"11:00\" },\n    \"twelve\": { time: \"12:00\" },\n    \"thirteen\": { time: \"13:00\" },\n    \"fourteen\": { time: \"14:00\" },\n    \"fifteen\": { time: \"15:00\" },\n    \"sixteen\": { time: \"16:00\" },\n    \"seventeen\": { time: \"17:00\" },\n    \"eighteen\": { time: \"18:00\" },\n    \"nineteen\": { time: \"19:00\" },\n    \"twenty\": { time: \"20:00\" },\n    \"twenty one\": { time: \"21:00\" },\n    \"twenty two\": { time: \"22:00\" },\n    \"twenty three\": { time: \"23:00\" },\n    \"twenty four\": { time: \"00:00\" },\n\n    \"at 1\": { time: \"01:00\" },\n    \"at 2\": { time: \"02:00\" },\n    \"at 3\": { time: \"03:00\" },\n    \"at 4\": { time: \"04:00\" },\n    \"at 5\": { time: \"05:00\" },\n    \"at 6\": { time: \"06:00\" },\n    \"at 7\": { time: \"07:00\" },\n    \"at 8\": { time: \"08:00\" },\n    \"at 9\": { time: \"09:00\" },\n    \"at 10\": { time: \"10:00\" },\n    \"at 11\": { time: \"11:00\" },\n    \"at 12\": { time: \"12:00\" },\n    \"at 13\": { time: \"13:00\" },\n    \"at 14\": { time: \"14:00\" },\n    \"at 15\": { time: \"15:00\" },\n    \"at 16\": { time: \"16:00\" },\n    \"at 17\": { time: \"17:00\" },\n    \"at 18\": { time: \"18:00\" },\n    \"at 19\": { time: \"19:00\" },\n    \"at 20\": { time: \"20:00\" },\n    \"at 21\": { time: \"21:00\" },\n    \"at 22\": { time: \"22:00\" },\n    \"at 23\": { time: \"23:00\" },\n    \"at 24\": { time: \"00:00\" },\n\n    \"1\": { time: \"01:00\" },\n    \"2\": { time: \"02:00\" },\n    \"3\": { time: \"03:00\" },\n    \"4\": { time: \"04:00\" },\n    \"5\": { time: \"05:00\" },\n    \"6\": { time: \"06:00\" },\n    \"7\": { time: \"07:00\" },\n    \"8\": { time: \"08:00\" },\n    \"9\": { time: \"09:00\" },\n    \"10\": { time: \"10:00\" },\n    \"11\": { time: \"11:00\" },\n    \"12\": { time: \"12:00\" },\n    \"13\": { time: \"13:00\" },\n    \"14\": { time: \"14:00\" },\n    \"15\": { time: \"15:00\" },\n    \"16\": { time: \"16:00\" },\n    \"17\": { time: \"17:00\" },\n    \"18\": { time: \"18:00\" },\n    \"19\": { time: \"19:00\" },\n    \"20\": { time: \"20:00\" },\n    \"21\": { time: \"21:00\" },\n    \"22\": { time: \"22:00\" },\n    \"23\": { time: \"23:00\" },\n    \"24\": { time: \"00:00\" }\n}\n\n//second grammar for trues and falses\nconst grammar2 : { [index: string]: boolean } = \n    {\"yes\": true,\n    \"Yes\": true,\n    \"yes of course\": true,\n    \"Yes of course\": true,\n    \"sure\": true,\n    \"Sure\": true,\n    \"absolutely\": true,\n    \"Absolutely\": true,\n    \"perfect\": true,\n    \"Perfect\": true,\n    \"no\": false,\n    \"No\": false,\n    \"no way\": false,\n    \"No way\": false\n}\n\n//new\nconst commands = {\"help\": \"h\", \"Help\": \"H\"}\n\nconst grammar3 ={\"count\": 0}\n//new\n\n\n/*function promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            ask: {\n                entry: send(\"LISTEN\")\n            },\n        }})\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n   \n    initial: \"init\",\n    states: {\n        init: {\n            on: {\n                CLICK: \"welcome\"\n            }            \n        },        \n\n        welcome: {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")\n        },\n\n\n        query: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I understand.`\n                    })),\n        }, \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n\t\t\t\t\tcond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"wholeday\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`,\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        wholeday: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"time\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirm_meeting_whole_day\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n\t},\n        time: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_time\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.day}. What time is your meeting?`,\n                    \n                    })),\n            on: { ENDSPEECH: \"ask\" }\n                },\n        ask: {\n            entry: listen()\n                },\n        nomatch: {\n            entry: say(\"Sorry I do not know that\"),\n        on: { ENDSPEECH: \"prompt\" }\n                }\n                }\n        },\n        confirm_meeting_whole_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"init\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                }\n\n\t},\n    confirm_time: {\n        initial: \"prompt\",\n        on:  {\n            RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                target: \"who\"\n            },\n    {cond: (context) => (grammar2[context.recResult] === true),\n    target: \"confirmed\"\n    },\n            { target: \".nomatch\" }]\n        },\n        states: {\n            prompt: {\n               entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                })),\n        on: { ENDSPEECH: \"ask\" }\n            },\n    ask: {\n         entry: listen()\n        },\n    nomatch: {\n        entry: say(\"Sorry I do not understand\"),\n    on: { ENDSPEECH: \"prompt\" }\n           }\n            },\n        },\n    confirmed: {\n        initial: \"prompt\",\n        on: { ENDSPEECH: \"init\" },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Your appointment has been created!`\n                }))\n            },\n    }\n    }\n    }})\n*/\n\n\nfunction promptAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: 'ask' }\n            },\n            ask: {\n                entry: send('LISTEN')\n            },\n        }})\n}\n\n/* //lab 2 base code\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = \n\n({\n    initial: 'init',\n    states: \n    {\n        init:{\n            on: {\n                CLICK: 'welcome'\n                }\n             },\n        welcome: \n        {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAsk(\"What would you like to do?\")\n        },\n\n        query: \n        {\n            invoke: {\n            \n            id: 'rasa',\n            src: (context, event) => nluRequest(context.option),\n            onDone: {\n                target: 'menu',\n                actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                (context: SDSContext, event: any) => console.log(event.data)]\n            },\n            onError: {\n                target: 'welcome',\n                actions: (context, event) => console.log(event.data)\n\n                }\n            }\n        },\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: 'todo', cond: (context) => context.option === 'todo' },\n                    { target: 'timer', cond: (context) => context.option === 'timer' },\n                    { target: 'appointment', cond: (context) => context.option === 'appointment' }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I see.`\n                    })),\n        },\n                 nomatch: {\n                    entry: say(\"Sorry, I don't understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let's create an appointment`\n                    }))\n                }}\n        },\n\n        who: \n        \n        {\n            initial: \"prompt\",\n            on: \n            {\n                RECOGNISED: \n                [\n                    {\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n                    },\n                { target: \".nomatch\" }\n                ]\n            },\n\n            states: \n            \n            {\n                prompt: \n                \n                {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                \n                ask: \n                \n                {\n                    entry: listen()\n                },\n                \n                nomatch: \n                \n                {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n\n        day: \n        \n        {\n            initial: \"prompt\",\n            on: \n            \n            {\n\t            RECOGNISED: \n                [\n                    {\n\t                cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n\t\t            actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n\t\t            target: \"wholeday\"\n\n\t\t            },\t\n\n\t\t            { target: \".nomatch\" }\n                \n                ]\n\t        },\n\n            states: \n\n            {\n                prompt: \n                \n                {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`\n                    })),\n\t\t            on: { ENDSPEECH: \"ask\" }\n                },\n\t\t        ask: \n                \n                {\n\t\t            entry: listen()\n\t            },\n\n\t\t        nomatch: \n                \n                {\n\t\t            entry: say(\"Sorry I don't know which day are you talking about\"),\n\t\t            on: { ENDSPEECH: \"prompt\" }\n\t            }\t     \n            }\n        },\n\n\n\t    wholeday: \n        \n        {\n\t\t        initial: \"prompt\",\n\t\t        on: \n                \n                {\n\t                RECOGNISED: \n                    \n                    [\n                        {cond: (context) => grammar2[context.recResult] === true,\n                        target: \"timefixed\"},\n\n\t\t\t\t\t\t{cond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\t\ttarget: \"settime\"},\n\n\t                { target: \".nomatch\" }\n                    ]\n\t\t        \n                },\n\n\n\t\t        states: \n                \n                {\n\t\t            prompt: \n                    \n                    {\n\t\t\t            entry: send((context) => ({\n\t\t\t                type: \"SPEAK\",\n\t\t\t\t\t\t    value: `Good. Appointment is on ${context.day}. Will it take the whole day?`\n\t\t\t            })),\n\t\t\t            on: { ENDSPEECH: \"ask\" }\n\t\t            },\n\n\t\t            ask: {\n\t\t                entry: listen()\n\t\t            },\n\n\t\t            nomatch: \n\n                    {\n\t\t\t            entry: say(\"Please repeat it again\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t            }\n\t\t        }\t     \n        },\n\n\n            timefixed: \n            \n            {\n\t\t           initial: \"prompt\",\n\n\t               on: \n                   \n                   {\n\t\t               RECOGNISED: \n                       \n                       [\n                           {cond: (context) => grammar2[context.recResult] === true,\n\t\t\t               target: \"Finished\"},\n\t\t\t\t\t\t   {cond: (context) => grammar2[context.recResult] === false,\n                           target: \"who\"},\n\t\t                   { target: \".nomatch\" }\n                        ]\n\t\t            },\n\n\n\n\t\t            states: \n                    \n                    {\n\t\t                prompt: \n                        \n                        {\n\t\t\t                entry: send((context) => ({\n\t\t\t                    type: \"SPEAK\",\n\t\t\t\t\t\t\t\tvalue: `Good. Do you want to me create an appointment with ${context.person} on ${context.day}for the whole day?`\n                            })),\n                            on: { ENDSPEECH: \"ask\" }\n\t\t                },\n\n\n\t\t                ask: \n                        \n                        {\n\t\t\t                entry: listen()\n\t\t                },\n\n\t\t                nomatch: \n                        \n                        {\n\t\t\t                entry: say(\"Please repeat it again\"),\n\t\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t                }\n                    }\n\t        },\n\n\t\t\tsettime: \n                \n                    {\n\n\t\t\t\t\t    initial: \"prompt\",\n\t\t\t\t\t    on: \n                    \n                    {\n\t\t\t\t\t\tRECOGNISED: \n                        [\n                            {\n\t\t\t\t\t\t\t\n                            cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n\t\t\t\t\t\t\tactions: assign((context) => { return { time: grammar[context.recResult].time }}),\n\t\t\t\t\t\t\ttarget: \"withtime\"\n\n\t\t\t\t\t\t    },\n\n\t\t\t\t\t\t    { target: \".nomatch\" }\n                        ]\n\t\t\t\t\t},\n\n\n\t\t\t\t\t    states: \n\n                        {\n\t\t\t\t\t\t    prompt: { entry: say(\"What time is your meeting\"),\n\t\t\t\t\t\t    on: { ENDSPEECH: \"ask\" }\n\t\t\t\t\t    },\n\n\t\t\t\t\task: \n                    {\n\t\t\t\t\t\tentry: listen()\n\t\t\t\t    },\n\n\t\t\t\tnomatch:\n                \n                {\n\t\t\t\t\tentry: say(\"Please repeat it again\"),\n\t\t\t\t\ton: { ENDSPEECH: \"prompt\" }\n\t\t\t\t}\n\t\t\t            }\n\t\t                \n                    },\n\n\n\t\twithtime: \n        \n        {\n\t\t\tinitial: \"prompt\",\n\t\t\ton: \n            \n            {\n\t\t\t\tRECOGNISED: \n                [\n                    \n                    { \n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === true,\n\t\t\t\t\ttarget: \"Finished\"\n                    },\n\t\t\t\t\t{\n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\ttarget: \"who\"\n\t\t\t\t    },\n\t\t\t\t    { target: \".nomatch\" }\n                ]\n\t\t\t},\n\n\n\t\t\t states: \n             \n            {\n\t\t\t\t prompt: \n                 \n                 {\n\t\t\t\t\t entry: send((context) => ({\n\t\t\t\t\t\t type: \"SPEAK\",\n\t\t\t\t\t\t value: `Good. Do you want to me create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n\t\t\t\t\t })),\n\t\t\t\t\t on: { ENDSPEECH: \"ask\" }\n\t\t\t\t },\n\n\t\t\t\t ask: \n                {\n\t\t\t\t\t entry: listen()\n\t\t\t\t},\n\n\t\t\t\t nomatch: \n                 \n                 {\n\t\t\t\t\t entry: say(\"Please repeat it again\"),\n\t\t\t\t\t on: { ENDSPEECH: \"prompt\" }\n\t\t\t\t }\n\t\t\t}\n\t\t},\n\n                Finished: \n                \n                {\n\t\t                 initial: \"prompt\",\n\t\t                 on: { ENDSPEECH: \"init\" },\n\t\t                 states: \n                        {\n\t\t\t                 prompt: { entry: say(\"Your appointment has been created!\")},\n\t                    }\n\t            }\t    \n    }\n\n})*/\n\n// new code for lab 4\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n\t\twelcome: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    target: \"query\",\n                    cond: (context) => !(context.recResult in commands),\n                    actions: assign((context) => { return { option: context.recResult } }),\n                },\n                {target: \"help1\",\n                cond: (context) => context.recResult in commands }],\n                MAXSPEECH: [{target:\"welcome.maxspeech1\",\n                cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]\n            },\n            states: {        \n                prompt: {\n                entry: say(\"What would you like to do?\"),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            hist: {type: \"history\"},\n               maxspeech1: {\n                ...speech(\"You have not responded. What is it you would like to do?\")\n        },  \n            ask: {\n                entry: [listen(), send('MAXSPEECH', {delay: 5000})]\n            }\n        }   \n    }, \n    \n        help1:{\n            ...helpm(\"Please tell me what you want to do.\",\"welcome\")\n        },\n\t\tquery: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n      \n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I understand，you want a ${context.option}.`\n                    })),\n        },\n     /*            nomatch: {\n                    entry: say(\"Sorry, I don\"t understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n        } */ \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a to do item.`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" ,\n                 cond: (context) => !(context.recResult in commands),\n                 actions: cancel(\"maxsp\")},\n                 {target: \"help2\",\n                 cond: (context) => context.recResult in commands}],\n                 MAXSPEECH: [{target:\"who.maxspeech2\",\n                 cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                hist: {type: \"history\"},\n                ask: {\n                    entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n                },\n                maxspeech2: {\n                    ...speech(\"You did not respond. Which person are you meeting with?\")\n                },\n                nomatch: {\n                    entry: say(\"Sorry, I don't know them\"),\n                    on: { ENDSPEECH:  \"prompt\" }\n                \n                }\n             }\n        },\n        help2:{\n            ...helpm(\"Please tell me the name\",\"who\")\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n\t            RECOGNISED: [{\n\t                cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n\t\t            actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n\t\t            target: \"wholeday\"\n\n\t\t        },\t\n\t\t        { target: \".nomatch\" ,\n                cond: (context) => !(context.recResult in commands),\n                actions: cancel(\"maxsp\")},\n                {target: \"help3\",\n                cond: (context) => context.recResult in commands}],\n                MAXSPEECH: [{target:\"day.maxspeech3\",\n                cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t        },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. What day is your meeting on?`\n                    })),\n\t\t            on: { ENDSPEECH: \"ask\" }\n                },\n                hist: {type: \"history\"},\n\t\t        ask: {\n\t\t            entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t            },\n                maxspeech3: {\n                 ...speech(\"You did not respond, state a day\")\n              },\n\t\t        nomatch: {\n\t\t            entry: say(\"Sorry, I don't know which day you are talking about.\"),\n\t\t            on: { ENDSPEECH: \"prompt\" }\n\t            }\t     \n            }\n        },\n        help3:{\n            ...helpm(\"Please tell me the day\",\"day\")\n        },\n        \n\t    wholeday: {\n\t\t        initial: \"prompt\",\n\t\t        on: {\n\t                RECOGNISED: [{\n\t\t\t            cond: (context) => grammar2[context.recResult] === true,\n                        target: \"notime\"},\n\t\t\t\t\t\t{\n\t\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\t\ttarget: \"whattime\"\n\n\t\t            },\n\t                { target: \".nomatch\",\n                    cond: (context) => !(context.recResult in commands),\n                    actions: cancel(\"maxsp\")},\n                    {target: \"help4\",\n                    cond: (context) => context.recResult in commands}],\n                    MAXSPEECH: [{target:\"wholeday.maxspeech4\",\n                    cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t\t        },\n\t\t        states: {\n\t\t            prompt: {\n\t\t\t            entry: send((context) => ({\n\t\t\t                type: \"SPEAK\",\n\t\t\t\t\t\t    value: `Good, on ${context.day}. Will it take the whole day?`\n\t\t\t            })),\n\t\t\t            on: { ENDSPEECH: \"ask\" }\n\t\t            },\n                    hist: {type: \"history\"},\n\t\t            ask: {\n\t\t                entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t            },\n                    maxspeech4: {\n                      ...speech(\"You did not respond, make a decision\")\n                    },\n\t\t            nomatch: {\n\t\t\t            entry: say(\"Please repeat it again\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t            }\n\t\t        }\t     \n            },\n            help4:{\n                ...helpm(\"Please tell me the decision\",\"wholeday\")\n            },\n            notime: {\n\t\t           initial: \"prompt\",\n\t               on: {\n\t\t               RECOGNISED: [{ \n\t\t\t               cond: (context) => grammar2[context.recResult] === true,\n\t\t\t               target: \"Finished\"},\n\t\t\t\t\t\t   {\n\t\t\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n                           target: \"who\"\n\t\t\t\t\t\t   \n\t\t                },\n\t\t                { target: \".nomatch\",\n                        cond: (context) => !(context.recResult in commands),\n                        actions: cancel(\"maxsp\")},\n                        {target: \"help5\",\n                        cond: (context) => context.recResult in commands}],\n                        MAXSPEECH: [{target:\"notime.maxspeech5\",\n                        cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]  \n\t\t            },\n\t\t            states: {\n\t\t                prompt: {\n\t\t\t                entry: send((context) => ({\n\t\t\t                    type: \"SPEAK\",\n\t\t\t\t\t\t\t\tvalue: `Great. Do you want to me create an appointment with ${context.person} on ${context.day} for the whole day?`\n                            })),\n                            on: { ENDSPEECH: \"ask\" }\n\t\t                },\n                        hist: {type: \"history\"},\n\t\t                ask: {\n\t\t\t                entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t                },\n                        maxspeech5: {\n                             ...speech(\"You did not respond, please confirm.\")},\n\t\t                nomatch: {\n\t\t\t                entry: say(\"Please, repeat it again\"),\n\t\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t                }\n                    }\n\t            },\n                help5:{\n                    ...helpm(\"Please confirm it\",\"notime\")\n                },\n\t\t\t\twhattime: {\n\t\t\t\t\tinitial: \"prompt\",\n\t\t\t\t\ton: {\n\t\t\t\t\t\tRECOGNISED: [{\n\t\t\t\t\t\t\tcond: (context) => \"time\" in (grammar[context.recResult] || {}),\n\t\t\t\t\t\t\tactions: assign((context) => { return { time: grammar[context.recResult].time } }),\n\t\t\t\t\t\t\ttarget: \"withtime\"\n\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ target: \".nomatch\" ,\n                        cond: (context) => !(context.recResult in commands),\n                        actions: cancel(\"maxsp\")},\n                        {target: \"help6\",\n                        cond: (context) => context.recResult in commands}],\n                        MAXSPEECH: [{target:\"whattime.maxspeech6\",\n                        cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]  \n\t\t\t\t\t},\n\t\t\t\t\tstates: {\n\t\t\t\t\t\tprompt: { entry: say(\"What time is your meeting\"),\n\t\t\t\t\t\ton: { ENDSPEECH: \"ask\" }\n\t\t\t\t\t},\n                    hist: {type: \"history\"},\n\t\t\t\t\task: {\n\t\t\t\t\t\tentry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t\t\t},\n                maxspeech6: {\n                  ...speech(\"You did not respond, state a time\")\n                },\n\t\t\t\tnomatch: {\n\t\t\t\t\tentry: say(\"Please repeat it again\"),\n\t\t\t\t\ton: { ENDSPEECH: \"prompt\" }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n        help6:{\n            ...helpm(\"Please tell me the time\",\"whattime\")\n        },\n        \n\t\twithtime: {\n\t\t\tinitial: \"prompt\",\n\t\t\ton: {\n\t\t\t\tRECOGNISED: [{ \n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === true,\n\t\t\t\t\ttarget: \"Finished\"},\n\t\t\t\t\t{\n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\ttarget: \"who\"\n\n\t\t\t\t },\n\t\t\t\t { target: \".nomatch\",\n                 cond: (context) => !(context.recResult in commands),\n                 actions: cancel(\"maxsp\")},\n                 {target: \"help7\",\n                 cond: (context) => context.recResult in commands}],\n                 MAXSPEECH: [{target:\"withtime.maxspeech7\",\n                 cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t\t\t },\n\t\t\t states: {\n\t\t\t\t prompt: {\n\t\t\t\t\t entry: send((context) => ({\n\t\t\t\t\t\t type: \"SPEAK\",\n\t\t\t\t\t\t value: `Great. Do you want to me create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n\t\t\t\t\t })),\n\t\t\t\t\t on: { ENDSPEECH: \"ask\" }\n\t\t\t\t },\n                 hist: {type: \"history\"},\n\t\t\t\t ask: {\n\t\t\t\t\t entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t\t\t },\n                maxspeech7: {\n                 ...speech(\"You did not respond, please confirm\")\n                },        \n\t\t\t\t nomatch: {\n\t\t\t\t\t entry: say(\"Please repeat it again\"),\n\t\t\t\t\t on: { ENDSPEECH: \"prompt\" }\n\t\t\t\t }\n\t\t\t }\n\t\t},\n        help7:{\n            ...helpm(\"Please confirm\",\"withtime\")\n        },\n        \n        Finished: {\n\t\t                 initial: \"prompt\",\n\t\t                 on: { ENDSPEECH: \"init\" },\n\t\t                 states: {\n\t\t\t                 prompt: { entry: say(\"Ok, great! Your appointment has been created!\")\n\t\t                    },\n\t                    }\n\t                }\t    \n                }\n            })\n\n\n\n\n//the api for rasa to use\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // have to set up temporary permission/access for the robot to not give error: \"Unexpected token S in JSON at position 0\"\nconst rasaurl = \"https://intents-oyousuf.herokuapp.com/model/parse\"\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: \"POST\",\n        headers: { \"Origin\": \"http://localhost:3000/react-xstate-colourchanger\" },\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\n\n","import \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Machine, assign, send, State } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\nimport { dmMachine } from \"./dmAppointment\";\n\n\ninspect({\n    url: \"https://statecharts.io/inspect\",\n    iframe: false\n});\n\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n\n\nconst machine = Machine<SDSContext, any, SDSEvent>({\n    id: 'root',\n    type: 'parallel',\n    states: {\n        dm: {\n            ...dmMachine\n        },\n        asrtts: {\n            initial: 'idle',\n            states: {\n                idle: {\n                    on: {\n                        LISTEN: 'recognising',\n                        SPEAK: {\n                            target: 'speaking',\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n                        }\n                    }\n                },\n                recognising: {\n                    entry: 'recStart',\n                    exit: 'recStop',\n                    on: {\n                        ASRRESULT: {\n                            actions: ['recLogResult',\n                                assign((_context, event) => { return { recResult: event.value } })],\n                            target: '.match'\n                        },\n                        RECOGNISED: 'idle'\n                    },\n                    states: {\n                        match: {\n                            entry: send('RECOGNISED'),\n                        },\n                    }\n                },\n                speaking: {\n                    entry: 'ttsStart',\n                    on: {\n                        ENDSPEECH: 'idle',\n                    }\n                }\n            }\n        }\n    },\n},\n    {\n        actions: {\n            recLogResult: (context: SDSContext) => {\n                /* context.recResult = event.recResult; */\n                console.log('<< ASR: ' + context.recResult);\n            },\n            test: () => {\n                console.log('test')\n            },\n            logIntent: (context: SDSContext) => {\n                /* context.nluData = event.data */\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\n            }\n        },\n    });\n\n\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    state: State<SDSContext, any, any, any>;\n}\nconst ReactiveButton = (props: Props): JSX.Element => {\n    switch (true) {\n        case props.state.matches({ asrtts: 'recognising' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"glowing 20s linear\" }} {...props}>\n                    Listening...\n                </button>\n            );\n        case props.state.matches({ asrtts: 'speaking' }):\n            return (\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\n                    Speaking...\n                </button>\n            );\n        default:\n            return (\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\n                    Click to start\n                </button >\n            );\n    }\n}\n\nfunction App() {\n    const { speak, cancel, speaking } = useSpeechSynthesis({\n        onEnd: () => {\n            send('ENDSPEECH');\n        },\n    });\n    const { listen, listening, stop } = useSpeechRecognition({\n        onResult: (result: any) => {\n            send({ type: \"ASRRESULT\", value: result });\n        },\n    });\n    const [current, send, service] = useMachine(machine, {\n        devTools: true,\n        actions: {\n            recStart: asEffect(() => {\n                console.log('Ready to receive a color command.');\n                listen({\n                    interimResults: false,\n                    continuous: true\n                });\n            }),\n            recStop: asEffect(() => {\n                console.log('Recognition stopped.');\n                stop()\n            }),\n            changeColour: asEffect((context) => {\n                console.log('Repainting...');\n                document.body.style.background = context.recResult;\n            }),\n            ttsStart: asEffect((context, effect) => {\n                console.log('Speaking...');\n                speak({ text: context.ttsAgenda })\n            }),\n            ttsCancel: asEffect((context, effect) => {\n                console.log('TTS STOP...');\n                cancel()\n            })\n            /* speak: asEffect((context) => {\n\t     * console.log('Speaking...');\n             *     speak({text: context.ttsAgenda })\n             * } */\n        }\n    });\n\n\n    return (\n        <div className=\"App\">\n            <ReactiveButton state={current} onClick={() => send('CLICK')} />\n        </div>\n    )\n};\n\n\n\n/* RASA API\n *  */\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://intents-oyousuf.herokuapp.com/model/parse'\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <App />,\n    rootElement);\n"]}}