{"ast":null,"code":"import{send,assign}from\"xstate\";function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}const grammar={\"John\":{person:\"John Appleseed\"},\"Zhe\":{person:\"Zhe Han\"},\"Siyi\":{person:\"Siyi Gu\"},\"Jae Eun\":{person:\"Jae Eun Hong\"},\"Oreen\":{person:\"Oreen Yousuf\"},\"Angeliki\":{person:\"Angeliki Zagoura\"},\"Flor\":{person:\"Flor del Ortiz\"},\"on Monday\":{day:\"Monday\"},\"on Tuesday\":{day:\"Tuesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"on Thursday\":{day:\"Thursday\"},\"on Friday\":{day:\"Friday\"},\"on Saturday\":{day:\"Saturday\"},\"on Sunday\":{day:\"Sunday\"},\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"}};const grammar2;export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:say(\"Let's create an appointment\")}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar[context.recResult].person!==undefined,actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")}))}}}}};","map":{"version":3,"sources":["C:/Users/User/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","say","text","_context","type","value","listen","grammar","person","day","time","grammar2","dmMachine","initial","states","init","on","CLICK","welcome","ENDSPEECH","prompt","entry","who","RECOGNISED","cond","context","recResult","undefined","actions","target","ask","nomatch"],"mappings":"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","sourcesContent":["import { MachineConfig, send, Action, assign } from \"xstate\";\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } } = {\n    \"John\": { person: \"John Appleseed\" },\n    \"Zhe\": { person: \"Zhe Han\" },\n    \"Siyi\": { person: \"Siyi Gu\" },\n    \"Jae Eun\": { person: \"Jae Eun Hong\" },\n    \"Oreen\": { person: \"Oreen Yousuf\" },\n    \"Angeliki\": { person: \"Angeliki Zagoura\" },\n    \"Flor\": { person: \"Flor del Ortiz\" },\n\n    \"on Monday\": { day: \"Monday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"on Friday\": { day: \"Friday\" },\n    \"on Saturday\": { day: \"Saturday\" },\n    \"on Sunday\": { day: \"Sunday\" },\n    \n    \"at one\": { time: \"01:00\" },\n    \"at two\": { time: \"02:00\" },\n    \"at three\": { time: \"03:00\" },\n    \"at four\": { time: \"04:00\" },\n    \"at five\": { time: \"05:00\" },\n    \"at six\": { time: \"06:00\" },\n    \"at seven\": { time: \"07:00\" },\n    \"at eight\": { time: \"08:00\" },\n    \"at nine\": { time: \"09:00\" },\n    \"at ten\": { time: \"10:00\" },\n    \"at eleven\": { time: \"11:00\" },\n    \"at twelve\": { time: \"12:00\" },\n    \"at thirteen\": { time: \"13:00\" },\n    \"at fourteen\": { time: \"14:00\" },\n    \"at fifteen\": { time: \"15:00\" },\n    \"at sixteen\": { time: \"16:00\" },\n    \"at seventeen\": { time: \"17:00\" },\n    \"at eighteen\": { time: \"18:00\" },\n    \"at nineteen\": { time: \"19:00\" },\n    \"at twenty\": { time: \"20:00\" },\n    \"at twenty one\": { time: \"21:00\" },\n    \"at twenty two\": { time: \"22:00\" },\n    \"at twenty three\": { time: \"23:00\" },\n    \"at twenty four\": { time: \"00:00\" }\n}\n\nconst grammar2: {\n\t\"yes\": true,\n\t\"yes of course\": true,\n\t\"sure\": true,\n\t\"absolutely\": true,\n\t\"perfect\": true,\n\t\"no\": false,\n\t\"no way\": false\n}\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n        welcome: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: { entry: say(\"Let's create an appointment\") }\n            }\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => grammar[context.recResult].person !== undefined,\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`\n                    }))\n                },\n            }\n        }\n    }\n})\n"]},"metadata":{},"sourceType":"module"}