{"ast":null,"code":"import{send}from\"xstate\";const sayColour=send(context=>({type:\"SPEAK\",value:\"Repainting to \".concat(context.recResult)}));function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{initial:'prompt',on:{RECOGNISED:[{target:'stop',cond:context=>context.recResult==='stop'},{target:'repaint'}]},states:{prompt:{entry:say(\"Tell me the colour\"),on:{ENDSPEECH:'ask'}},ask:{entry:send('LISTEN')}}},stop:{entry:say(\"Ok\"),always:'init'},repaint:{initial:'prompt',states:{prompt:{entry:sayColour,on:{ENDSPEECH:'repaint'}},repaint:{entry:'changeColour',always:'#root.dm.welcome'}}}}};","map":{"version":3,"sources":["C:/Users/User/react-xstate-colourchanger/src/dmColourChanger.ts"],"names":["send","sayColour","context","type","value","recResult","say","text","_context","dmMachine","initial","states","init","on","CLICK","welcome","RECOGNISED","target","cond","prompt","entry","ENDSPEECH","ask","stop","always","repaint"],"mappings":"AAAA,OAAwBA,IAAxB,KAA4C,QAA5C,CAGA,KAAMC,CAAAA,SAAuC,CAAGD,IAAI,CAAEE,OAAD,GAA0B,CAC3EC,IAAI,CAAE,OADqE,CAC5DC,KAAK,yBAAmBF,OAAO,CAACG,SAA3B,CADuD,CAA1B,CAAD,CAApD,CAIA,QAASC,CAAAA,GAAT,CAAaC,IAAb,CAAyD,CACrD,MAAOP,CAAAA,IAAI,CAAEQ,QAAD,GAA2B,CAAEL,IAAI,CAAE,OAAR,CAAiBC,KAAK,CAAEG,IAAxB,CAA3B,CAAD,CAAX,CACH,CAED,MAAO,MAAME,CAAAA,SAAmD,CAAI,CAChEC,OAAO,CAAE,MADuD,CAEhEC,MAAM,CAAE,CACJC,IAAI,CAAE,CACFC,EAAE,CAAE,CACAC,KAAK,CAAE,SADP,CADF,CADF,CAMJC,OAAO,CAAE,CACLL,OAAO,CAAE,QADJ,CAELG,EAAE,CAAE,CACAG,UAAU,CAAE,CACR,CAAEC,MAAM,CAAE,MAAV,CAAkBC,IAAI,CAAGhB,OAAD,EAAaA,OAAO,CAACG,SAAR,GAAsB,MAA3D,CADQ,CAER,CAAEY,MAAM,CAAE,SAAV,CAFQ,CADZ,CAFC,CAOLN,MAAM,CAAE,CACJQ,MAAM,CAAE,CACJC,KAAK,CAAEd,GAAG,CAAC,oBAAD,CADN,CAEJO,EAAE,CAAE,CAAEQ,SAAS,CAAE,KAAb,CAFA,CADJ,CAKJC,GAAG,CAAE,CACDF,KAAK,CAAEpB,IAAI,CAAC,QAAD,CADV,CALD,CAPH,CANL,CAuBJuB,IAAI,CAAE,CACFH,KAAK,CAAEd,GAAG,CAAC,IAAD,CADR,CAEFkB,MAAM,CAAE,MAFN,CAvBF,CA2BJC,OAAO,CAAE,CACLf,OAAO,CAAE,QADJ,CAELC,MAAM,CAAE,CACJQ,MAAM,CAAE,CACJC,KAAK,CAAEnB,SADH,CAEJY,EAAE,CAAE,CAAEQ,SAAS,CAAE,SAAb,CAFA,CADJ,CAKJI,OAAO,CAAE,CACLL,KAAK,CAAE,cADF,CAELI,MAAM,CAAE,kBAFH,CALL,CAFH,CA3BL,CAFwD,CAA7D","sourcesContent":["import { MachineConfig, send, Action } from \"xstate\";\n\n\nconst sayColour: Action<SDSContext, SDSEvent> = send((context: SDSContext) => ({\n    type: \"SPEAK\", value: `Repainting to ${context.recResult}`\n}))\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n        welcome: {\n            initial: 'prompt',\n            on: {\n                RECOGNISED: [\n                    { target: 'stop', cond: (context) => context.recResult === 'stop' },\n                    { target: 'repaint' }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Tell me the colour\"),\n                    on: { ENDSPEECH: 'ask' }\n                },\n                ask: {\n                    entry: send('LISTEN'),\n                },\n            }\n        },\n        stop: {\n            entry: say(\"Ok\"),\n            always: 'init'\n        },\n        repaint: {\n            initial: 'prompt',\n            states: {\n                prompt: {\n                    entry: sayColour,\n                    on: { ENDSPEECH: 'repaint' }\n                },\n                repaint: {\n                    entry: 'changeColour',\n                    always: '#root.dm.welcome'\n                }\n            }\n        }\n    }\n})\n"]},"metadata":{},"sourceType":"module"}