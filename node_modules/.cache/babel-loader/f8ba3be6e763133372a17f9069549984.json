{"ast":null,"code":"import _objectSpread from\"C:/Users/User/react-xstate-colourchanger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{send,assign}from\"xstate\";import\"./styles.scss\";function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send(\"LISTEN\");}const grammar={// Here are some common names in English that I found are easier for the robot to understand.\n\"John\":{person:\"John Appleseed\"},\"Jack\":{person:\"Jack Orangeseed\"},\"David\":{person:\"David Grapeseed\"},\"Robert\":{person:\"Robert Watermelonseed\"},\"Jennifer\":{person:\"Jennifer Bananaseed\"},\"Jessica\":{person:\"Jessica Pineappleseed\"},\"john\":{person:\"john appleseed\"},\"jack\":{person:\"jack orangeseed\"},\"david\":{person:\"david grapeseed\"},\"robert\":{person:\"robert watermelonseed\"},\"jennifer\":{person:\"jennifer bananaseed\"},\"jessica\":{person:\"jessica pineappleseed\"},// Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n\"Zhe\":{person:\"Zhe Han\"},\"Siyi\":{person:\"Siyi Gu\"},\"Jae Eun\":{person:\"Jae Eun Hong\"},\"Oreen\":{person:\"Oreen Yousuf\"},\"Angeliki\":{person:\"Angeliki Zagoura\"},\"Flor\":{person:\"Flor Ortiz\"},\"Emma\":{person:\"Emma Wallerö\"},\"zhe\":{person:\"zhe han\"},\"siyi\":{person:\"siyi gu\"},\"jae eun\":{person:\"jae eun hong\"},\"oreen\":{person:\"oreen yousuf\"},\"angeliki\":{person:\"angeliki zagoura\"},\"flor\":{person:\"flor ortiz\"},\"emma\":{person:\"emma wallerö\"},//Days of the week with alternating potential utterances ('on')\n\"Monday\":{day:\"Monday\"},\"on Monday\":{day:\"Monday\"},\"Tuesday\":{day:\"Tuesday\"},\"on Tuesday\":{day:\"Tuesday\"},\"Wednesday\":{day:\"Wednesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"Thursday\":{day:\"Thursday\"},\"on Thursday\":{day:\"Thursday\"},\"Friday\":{day:\"Friday\"},\"on Friday\":{day:\"Friday\"},\"Saturday\":{day:\"Saturday\"},\"on Saturday\":{day:\"Saturday\"},\"Sunday\":{day:\"Sunday\"},\"on Sunday\":{day:\"Sunday\"},//times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"},\"one\":{time:\"01:00\"},\"two\":{time:\"02:00\"},\"three\":{time:\"03:00\"},\"four\":{time:\"04:00\"},\"five\":{time:\"05:00\"},\"six\":{time:\"06:00\"},\"seven\":{time:\"07:00\"},\"eight\":{time:\"08:00\"},\"nine\":{time:\"09:00\"},\"ten\":{time:\"10:00\"},\"eleven\":{time:\"11:00\"},\"twelve\":{time:\"12:00\"},\"thirteen\":{time:\"13:00\"},\"fourteen\":{time:\"14:00\"},\"fifteen\":{time:\"15:00\"},\"sixteen\":{time:\"16:00\"},\"seventeen\":{time:\"17:00\"},\"eighteen\":{time:\"18:00\"},\"nineteen\":{time:\"19:00\"},\"twenty\":{time:\"20:00\"},\"twenty one\":{time:\"21:00\"},\"twenty two\":{time:\"22:00\"},\"twenty three\":{time:\"23:00\"},\"twenty four\":{time:\"00:00\"},\"at 1\":{time:\"01:00\"},\"at 2\":{time:\"02:00\"},\"at 3\":{time:\"03:00\"},\"at 4\":{time:\"04:00\"},\"at 5\":{time:\"05:00\"},\"at 6\":{time:\"06:00\"},\"at 7\":{time:\"07:00\"},\"at 8\":{time:\"08:00\"},\"at 9\":{time:\"09:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 13\":{time:\"13:00\"},\"at 14\":{time:\"14:00\"},\"at 15\":{time:\"15:00\"},\"at 16\":{time:\"16:00\"},\"at 17\":{time:\"17:00\"},\"at 18\":{time:\"18:00\"},\"at 19\":{time:\"19:00\"},\"at 20\":{time:\"20:00\"},\"at 21\":{time:\"21:00\"},\"at 22\":{time:\"22:00\"},\"at 23\":{time:\"23:00\"},\"at 24\":{time:\"00:00\"},\"1\":{time:\"01:00\"},\"2\":{time:\"02:00\"},\"3\":{time:\"03:00\"},\"4\":{time:\"04:00\"},\"5\":{time:\"05:00\"},\"6\":{time:\"06:00\"},\"7\":{time:\"07:00\"},\"8\":{time:\"08:00\"},\"9\":{time:\"09:00\"},\"10\":{time:\"10:00\"},\"11\":{time:\"11:00\"},\"12\":{time:\"12:00\"},\"13\":{time:\"13:00\"},\"14\":{time:\"14:00\"},\"15\":{time:\"15:00\"},\"16\":{time:\"16:00\"},\"17\":{time:\"17:00\"},\"18\":{time:\"18:00\"},\"19\":{time:\"19:00\"},\"20\":{time:\"20:00\"},\"21\":{time:\"21:00\"},\"22\":{time:\"22:00\"},\"23\":{time:\"23:00\"},\"24\":{time:\"00:00\"}};//second grammar for trues and falses\nconst grammar2={\"yes\":true,\"Yes\":true,\"yes of course\":true,\"Yes of course\":true,\"sure\":true,\"Sure\":true,\"absolutely\":true,\"Absolutely\":true,\"perfect\":true,\"Perfect\":true,\"no\":false,\"No\":false,\"no way\":false,\"No way\":false};function promptAndAsk(prompt){return{initial:\"prompt\",states:{prompt:{entry:say(prompt),on:{ENDSPEECH:\"ask\"}},ask:{entry:send(\"LISTEN\")}}};}export const dmMachine={initial:\"init\",states:{init:{on:{CLICK:\"welcome\"}},welcome:_objectSpread({on:{RECOGNISED:{target:\"query\",actions:assign(context=>{return{option:context.recResult};})}}},promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")),query:{invoke:{id:\"rasa\",src:(context,event)=>nluRequest(context.option),onDone:{target:\"menu\",actions:[assign((context,event)=>{return{option:event.data.intent.name};}),(context,event)=>console.log(event.data)]//actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n},onError:{target:\"welcome\",actions:(context,event)=>console.log(event.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:\"todo\",cond:context=>context.option===\"todo\"},{target:\"timer\",cond:context=>context.option===\"timer\"},{target:\"appointment\",cond:context=>context.option===\"appointment\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. I understand.\"}))}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\\"s create a to do item\"}))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\\"s create a timer\"}))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\\"s create an appointment\"}))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I do not know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{day:grammar[context.recResult].day};}),target:\"wholeday\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I do not understand\"),on:{ENDSPEECH:\"prompt\"}}}},wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===false,target:\"time\"},{cond:context=>grammar2[context.recResult]===true,target:\"confirm_meeting_whole_day\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\" on \").concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I do not understand\"),on:{ENDSPEECH:\"prompt\"}}}},time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{time:grammar[context.recResult].time};}),target:\"confirm_time\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.day,\". What time is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I do not know that\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_meeting_whole_day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===false,target:\"init\"},{cond:context=>grammar2[context.recResult]===true,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I do not understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirm_time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===false,target:\"who\"},{cond:context=>grammar2[context.recResult]===true,target:\"confirmed\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I do not understand\"),on:{ENDSPEECH:\"prompt\"}}}},confirmed:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Your appointment has been created!\"}))}}}}};//the api for rasa to use\nconst proxyurl=\"https://cors-anywhere.herokuapp.com/\";// have to set up temporary permission/access for the robot to not give error: \"Unexpected token S in JSON at position 0\"\nconst rasaurl=\"https://intents-oyousuf.herokuapp.com/model/parse\";const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:\"POST\",headers:{\"Origin\":\"http://localhost:3000/react-xstate-colourchanger\"},body:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());","map":{"version":3,"sources":["C:/Users/User/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","say","text","_context","type","value","listen","grammar","person","day","time","grammar2","promptAndAsk","prompt","initial","states","entry","on","ENDSPEECH","ask","dmMachine","init","CLICK","welcome","RECOGNISED","target","actions","context","option","recResult","query","invoke","id","src","event","nluRequest","onDone","data","intent","name","console","log","onError","menu","cond","todo","timer","appointment","who","nomatch","wholeday","confirm_meeting_whole_day","confirm_time","confirmed","proxyurl","rasaurl","fetch","Request","method","headers","body","then","json"],"mappings":"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","sourcesContent":["import { MachineConfig, Machine, send, Action, assign } from \"xstate\";\nimport \"./styles.scss\";\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send(\"LISTEN\")\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } \n} = {\n    // Here are some common names in English that I found are easier for the robot to understand.\n    \"John\": { person: \"John Appleseed\" },\n    \"Jack\": { person: \"Jack Orangeseed\" },\n    \"David\": { person: \"David Grapeseed\" },\n    \"Robert\": { person: \"Robert Watermelonseed\" },\n    \"Jennifer\": { person: \"Jennifer Bananaseed\" },\n    \"Jessica\": { person: \"Jessica Pineappleseed\" },\n\n    \"john\": { person: \"john appleseed\" },\n    \"jack\": { person: \"jack orangeseed\" },\n    \"david\": { person: \"david grapeseed\" },\n    \"robert\": { person: \"robert watermelonseed\" },\n    \"jennifer\": { person: \"jennifer bananaseed\" },\n    \"jessica\": { person: \"jessica pineappleseed\" },\n\n    // Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n    \"Zhe\": { person: \"Zhe Han\" },\n    \"Siyi\": { person: \"Siyi Gu\" },\n    \"Jae Eun\": { person: \"Jae Eun Hong\" },\n    \"Oreen\": { person: \"Oreen Yousuf\" },\n    \"Angeliki\": { person: \"Angeliki Zagoura\" },\n    \"Flor\": { person: \"Flor Ortiz\" },\n    \"Emma\": { person: \"Emma Wallerö\"},\n\n    \"zhe\": { person: \"zhe han\" },\n    \"siyi\": { person: \"siyi gu\" },\n    \"jae eun\": { person: \"jae eun hong\" },\n    \"oreen\": { person: \"oreen yousuf\" },\n    \"angeliki\": { person: \"angeliki zagoura\" },\n    \"flor\": { person: \"flor ortiz\" },\n    \"emma\": { person: \"emma wallerö\" },\n\n    //Days of the week with alternating potential utterances ('on')\n    \"Monday\": { day: \"Monday\" },\n    \"on Monday\": { day: \"Monday\" },\n    \"Tuesday\": { day: \"Tuesday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"Wednesday\": { day: \"Wednesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"Thursday\": { day: \"Thursday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"Friday\": { day: \"Friday\" },\n    \"on Friday\": { day: \"Friday\" },\n    \"Saturday\": { day: \"Saturday\" },\n    \"on Saturday\": { day: \"Saturday\" },\n    \"Sunday\": { day: \"Sunday\" },\n    \"on Sunday\": { day: \"Sunday\" },\n\n    //times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n    \"at one\": { time: \"01:00\" },\n    \"at two\": { time: \"02:00\" },\n    \"at three\": { time: \"03:00\" },\n    \"at four\": { time: \"04:00\" },\n    \"at five\": { time: \"05:00\" },\n    \"at six\": { time: \"06:00\" },\n    \"at seven\": { time: \"07:00\" },\n    \"at eight\": { time: \"08:00\" },\n    \"at nine\": { time: \"09:00\" },\n    \"at ten\": { time: \"10:00\" },\n    \"at eleven\": { time: \"11:00\" },\n    \"at twelve\": { time: \"12:00\" },\n    \"at thirteen\": { time: \"13:00\" },\n    \"at fourteen\": { time: \"14:00\" },\n    \"at fifteen\": { time: \"15:00\" },\n    \"at sixteen\": { time: \"16:00\" },\n    \"at seventeen\": { time: \"17:00\" },\n    \"at eighteen\": { time: \"18:00\" },\n    \"at nineteen\": { time: \"19:00\" },\n    \"at twenty\": { time: \"20:00\" },\n    \"at twenty one\": { time: \"21:00\" },\n    \"at twenty two\": { time: \"22:00\" },\n    \"at twenty three\": { time: \"23:00\" },\n    \"at twenty four\": { time: \"00:00\" },\n\n    \"one\": { time: \"01:00\" },\n    \"two\": { time: \"02:00\" },\n    \"three\": { time: \"03:00\" },\n    \"four\": { time: \"04:00\" },\n    \"five\": { time: \"05:00\" },\n    \"six\": { time: \"06:00\" },\n    \"seven\": { time: \"07:00\" },\n    \"eight\": { time: \"08:00\" },\n    \"nine\": { time: \"09:00\" },\n    \"ten\": { time: \"10:00\" },\n    \"eleven\": { time: \"11:00\" },\n    \"twelve\": { time: \"12:00\" },\n    \"thirteen\": { time: \"13:00\" },\n    \"fourteen\": { time: \"14:00\" },\n    \"fifteen\": { time: \"15:00\" },\n    \"sixteen\": { time: \"16:00\" },\n    \"seventeen\": { time: \"17:00\" },\n    \"eighteen\": { time: \"18:00\" },\n    \"nineteen\": { time: \"19:00\" },\n    \"twenty\": { time: \"20:00\" },\n    \"twenty one\": { time: \"21:00\" },\n    \"twenty two\": { time: \"22:00\" },\n    \"twenty three\": { time: \"23:00\" },\n    \"twenty four\": { time: \"00:00\" },\n\n    \"at 1\": { time: \"01:00\" },\n    \"at 2\": { time: \"02:00\" },\n    \"at 3\": { time: \"03:00\" },\n    \"at 4\": { time: \"04:00\" },\n    \"at 5\": { time: \"05:00\" },\n    \"at 6\": { time: \"06:00\" },\n    \"at 7\": { time: \"07:00\" },\n    \"at 8\": { time: \"08:00\" },\n    \"at 9\": { time: \"09:00\" },\n    \"at 10\": { time: \"10:00\" },\n    \"at 11\": { time: \"11:00\" },\n    \"at 12\": { time: \"12:00\" },\n    \"at 13\": { time: \"13:00\" },\n    \"at 14\": { time: \"14:00\" },\n    \"at 15\": { time: \"15:00\" },\n    \"at 16\": { time: \"16:00\" },\n    \"at 17\": { time: \"17:00\" },\n    \"at 18\": { time: \"18:00\" },\n    \"at 19\": { time: \"19:00\" },\n    \"at 20\": { time: \"20:00\" },\n    \"at 21\": { time: \"21:00\" },\n    \"at 22\": { time: \"22:00\" },\n    \"at 23\": { time: \"23:00\" },\n    \"at 24\": { time: \"00:00\" },\n\n    \"1\": { time: \"01:00\" },\n    \"2\": { time: \"02:00\" },\n    \"3\": { time: \"03:00\" },\n    \"4\": { time: \"04:00\" },\n    \"5\": { time: \"05:00\" },\n    \"6\": { time: \"06:00\" },\n    \"7\": { time: \"07:00\" },\n    \"8\": { time: \"08:00\" },\n    \"9\": { time: \"09:00\" },\n    \"10\": { time: \"10:00\" },\n    \"11\": { time: \"11:00\" },\n    \"12\": { time: \"12:00\" },\n    \"13\": { time: \"13:00\" },\n    \"14\": { time: \"14:00\" },\n    \"15\": { time: \"15:00\" },\n    \"16\": { time: \"16:00\" },\n    \"17\": { time: \"17:00\" },\n    \"18\": { time: \"18:00\" },\n    \"19\": { time: \"19:00\" },\n    \"20\": { time: \"20:00\" },\n    \"21\": { time: \"21:00\" },\n    \"22\": { time: \"22:00\" },\n    \"23\": { time: \"23:00\" },\n    \"24\": { time: \"00:00\" }\n}\n\n//second grammar for trues and falses\nconst grammar2 = {\n    \"yes\": true,\n    \"Yes\": true,\n    \"yes of course\": true,\n    \"Yes of course\": true,\n    \"sure\": true,\n    \"Sure\": true,\n    \"absolutely\": true,\n    \"Absolutely\": true,\n    \"perfect\": true,\n    \"Perfect\": true,\n    \"no\": false,\n    \"No\": false,\n    \"no way\": false,\n    \"No way\": false\n}\n\n\nfunction promptAndAsk(prompt: string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            ask: {\n                entry: send(\"LISTEN\")\n            },\n        }})\n}\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n   \n    initial: \"init\",\n    states: {\n        init: {\n            on: {\n                CLICK: \"welcome\"\n            }            \n        },        \n\n        welcome: {\n            on: {\n                RECOGNISED: {\n                    target: \"query\",\n                    actions: assign((context) => { return { option: context.recResult } }),\n                }    \n            },\n                    ...promptAndAsk(\"What would you like to do? Your options are appointment, to do item or timer\")\n        },\n\n\n        query: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    //actions: assign({ intent: (context: SDSContext, event: any) =>{ return event.data }})\n\n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n\n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. I understand.`\n                    })),\n        }, \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a to do item`\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create a timer`\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Let\"s create an appointment`\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n\t\t\t\t\tcond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"wholeday\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`,\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I do not understand\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        wholeday: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"time\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirm_meeting_whole_day\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person} on ${context.day}. Will it take the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t            }\n                }\n\t},\n        time: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_time\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.day}. What time is your meeting?`,\n                    \n                    })),\n            on: { ENDSPEECH: \"ask\" }\n                },\n        ask: {\n            entry: listen()\n                },\n        nomatch: {\n            entry: say(\"Sorry I do not know that\"),\n        on: { ENDSPEECH: \"prompt\" }\n                }\n                }\n        },\n        confirm_meeting_whole_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                    target: \"init\"\n                },\n\t\t{cond: (context) => (grammar2[context.recResult] === true),\n\t\ttarget: \"confirmed\"\n\t\t},\n                { target: \".nomatch\" }]\n            },\n\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n\t\t    on: { ENDSPEECH: \"ask\" }\n                },\n\t\task: {\n\t\t     entry: listen()\n            },\n\t    nomatch: {\n\t    \tentry: say(\"Sorry I do not understand\"),\n\t\ton: { ENDSPEECH: \"prompt\" }\n\t           }\n                }\n\n\t},\n    confirm_time: {\n        initial: \"prompt\",\n        on:  {\n            RECOGNISED: [{cond: (context) => (grammar2[context.recResult] === false),\n                target: \"who\"\n            },\n    {cond: (context) => (grammar2[context.recResult] === true),\n    target: \"confirmed\"\n    },\n            { target: \".nomatch\" }]\n        },\n        states: {\n            prompt: {\n               entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                })),\n        on: { ENDSPEECH: \"ask\" }\n            },\n    ask: {\n         entry: listen()\n        },\n    nomatch: {\n        entry: say(\"Sorry I do not understand\"),\n    on: { ENDSPEECH: \"prompt\" }\n           }\n            },\n        },\n    confirmed: {\n        initial: \"prompt\",\n        on: { ENDSPEECH: \"init\" },\n        states: {\n            prompt: {\n                entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `Your appointment has been created!`\n                }))\n            },\n    }\n    }\n    }})\n\n\n\n\n//the api for rasa to use\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\"; // have to set up temporary permission/access for the robot to not give error: \"Unexpected token S in JSON at position 0\"\nconst rasaurl = \"https://intents-oyousuf.herokuapp.com/model/parse\"\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: \"POST\",\n        headers: { \"Origin\": \"http://localhost:3000/react-xstate-colourchanger\" },\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n\n\n"]},"metadata":{},"sourceType":"module"}