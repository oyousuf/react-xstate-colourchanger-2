{"ast":null,"code":"import { send } from \"xstate\";\nconst sayColour = send(context => ({\n  type: \"SPEAK\",\n  value: \"Repainting to \".concat(context.recResult)\n}));\n\nfunction say(text) {\n  return send(_context => ({\n    type: \"SPEAK\",\n    value: text\n  }));\n}\n\nexport const dmMachine = {\n  initial: 'init',\n  states: {\n    init: {\n      on: {\n        CLICK: 'welcome'\n      }\n    },\n    welcome: {\n      initial: 'prompt',\n      on: {\n        RECOGNISED: [{\n          target: 'stop',\n          cond: context => context.recResult === 'stop'\n        }, {\n          target: 'repaint'\n        }]\n      },\n      states: {\n        prompt: {\n          entry: say(\"Tell me the colour\"),\n          on: {\n            ENDSPEECH: 'ask'\n          }\n        },\n        ask: {\n          entry: send('LISTEN')\n        }\n      }\n    },\n    stop: {\n      entry: say(\"Ok\"),\n      always: 'init'\n    },\n    repaint: {\n      initial: 'prompt',\n      states: {\n        prompt: {\n          entry: sayColour,\n          on: {\n            ENDSPEECH: 'repaint'\n          }\n        },\n        repaint: {\n          entry: 'changeColour',\n          always: '#root.dm.welcome'\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/User/react-xstate-colourchanger/src/dmColourChanger.ts"],"names":["send","sayColour","context","type","value","recResult","say","text","_context","dmMachine","initial","states","init","on","CLICK","welcome","RECOGNISED","target","cond","prompt","entry","ENDSPEECH","ask","stop","always","repaint"],"mappings":"AAAA,SAAwBA,IAAxB,QAA4C,QAA5C;AAGA,MAAMC,SAAuC,GAAGD,IAAI,CAAEE,OAAD,KAA0B;AAC3EC,EAAAA,IAAI,EAAE,OADqE;AAC5DC,EAAAA,KAAK,0BAAmBF,OAAO,CAACG,SAA3B;AADuD,CAA1B,CAAD,CAApD;;AAIA,SAASC,GAAT,CAAaC,IAAb,EAAyD;AACrD,SAAOP,IAAI,CAAEQ,QAAD,KAA2B;AAAEL,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAEG;AAAxB,GAA3B,CAAD,CAAX;AACH;;AAED,OAAO,MAAME,SAAmD,GAAI;AAChEC,EAAAA,OAAO,EAAE,MADuD;AAEhEC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE;AACAC,QAAAA,KAAK,EAAE;AADP;AADF,KADF;AAMJC,IAAAA,OAAO,EAAE;AACLL,MAAAA,OAAO,EAAE,QADJ;AAELG,MAAAA,EAAE,EAAE;AACAG,QAAAA,UAAU,EAAE,CACR;AAAEC,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,IAAI,EAAGhB,OAAD,IAAaA,OAAO,CAACG,SAAR,KAAsB;AAA3D,SADQ,EAER;AAAEY,UAAAA,MAAM,EAAE;AAAV,SAFQ;AADZ,OAFC;AAOLN,MAAAA,MAAM,EAAE;AACJQ,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAEd,GAAG,CAAC,oBAAD,CADN;AAEJO,UAAAA,EAAE,EAAE;AAAEQ,YAAAA,SAAS,EAAE;AAAb;AAFA,SADJ;AAKJC,QAAAA,GAAG,EAAE;AACDF,UAAAA,KAAK,EAAEpB,IAAI,CAAC,QAAD;AADV;AALD;AAPH,KANL;AAuBJuB,IAAAA,IAAI,EAAE;AACFH,MAAAA,KAAK,EAAEd,GAAG,CAAC,IAAD,CADR;AAEFkB,MAAAA,MAAM,EAAE;AAFN,KAvBF;AA2BJC,IAAAA,OAAO,EAAE;AACLf,MAAAA,OAAO,EAAE,QADJ;AAELC,MAAAA,MAAM,EAAE;AACJQ,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAEnB,SADH;AAEJY,UAAAA,EAAE,EAAE;AAAEQ,YAAAA,SAAS,EAAE;AAAb;AAFA,SADJ;AAKJI,QAAAA,OAAO,EAAE;AACLL,UAAAA,KAAK,EAAE,cADF;AAELI,UAAAA,MAAM,EAAE;AAFH;AALL;AAFH;AA3BL;AAFwD,CAA7D","sourcesContent":["import { MachineConfig, send, Action } from \"xstate\";\n\n\nconst sayColour: Action<SDSContext, SDSEvent> = send((context: SDSContext) => ({\n    type: \"SPEAK\", value: `Repainting to ${context.recResult}`\n}))\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n        welcome: {\n            initial: 'prompt',\n            on: {\n                RECOGNISED: [\n                    { target: 'stop', cond: (context) => context.recResult === 'stop' },\n                    { target: 'repaint' }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Tell me the colour\"),\n                    on: { ENDSPEECH: 'ask' }\n                },\n                ask: {\n                    entry: send('LISTEN'),\n                },\n            }\n        },\n        stop: {\n            entry: say(\"Ok\"),\n            always: 'init'\n        },\n        repaint: {\n            initial: 'prompt',\n            states: {\n                prompt: {\n                    entry: sayColour,\n                    on: { ENDSPEECH: 'repaint' }\n                },\n                repaint: {\n                    entry: 'changeColour',\n                    always: '#root.dm.welcome'\n                }\n            }\n        }\n    }\n})\n"]},"metadata":{},"sourceType":"module"}