{"ast":null,"code":"import _objectSpread from\"C:/Users/User/react-xstate-colourchanger/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{send,assign,actions}from\"xstate\";import\"./styles.scss\";const cancel=actions.cancel;function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}function promptAndAsk(prompt,speechprompt){return{initial:\"prompt\",states:{prompt:{entry:say(prompt),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},maxspeech:_objectSpread({},speech(speechprompt)),ask:{entry:[listen(),send('MAXSPEECH',{delay:5000})]}}};}function helpm(prompt,name){return{entry:say(prompt),on:{ENDSPEECH:name+\".hist\"}};}function speech(prompt){return{entry:say(prompt),on:{ENDSPEECH:\"ask\"}};}const grammar={// Here are some common names in English that I found are easier for the robot to understand.\n\"John\":{person:\"John Appleseed\"},\"Jack\":{person:\"Jack Orangeseed\"},\"David\":{person:\"David Grapeseed\"},\"Robert\":{person:\"Robert Watermelonseed\"},\"Jennifer\":{person:\"Jennifer Bananaseed\"},\"Jessica\":{person:\"Jessica Pineappleseed\"},\"john\":{person:\"john appleseed\"},\"jack\":{person:\"jack orangeseed\"},\"david\":{person:\"david grapeseed\"},\"robert\":{person:\"robert watermelonseed\"},\"jennifer\":{person:\"jennifer bananaseed\"},\"jessica\":{person:\"jessica pineappleseed\"},// Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n\"Zhe\":{person:\"Zhe Han\"},\"Siyi\":{person:\"Siyi Gu\"},\"Jae Eun\":{person:\"Jae Eun Hong\"},\"Oreen\":{person:\"Oreen Yousuf\"},\"Angeliki\":{person:\"Angeliki Zagoura\"},\"Flor\":{person:\"Flor Ortiz\"},\"Emma\":{person:\"Emma Wallerö\"},\"zhe\":{person:\"zhe han\"},\"siyi\":{person:\"siyi gu\"},\"jae eun\":{person:\"jae eun hong\"},\"oreen\":{person:\"oreen yousuf\"},\"angeliki\":{person:\"angeliki zagoura\"},\"flor\":{person:\"flor ortiz\"},\"emma\":{person:\"emma wallerö\"},//Days of the week with alternating potential utterances ('on')\n\"Monday\":{day:\"Monday\"},\"on Monday\":{day:\"Monday\"},\"Tuesday\":{day:\"Tuesday\"},\"on Tuesday\":{day:\"Tuesday\"},\"Wednesday\":{day:\"Wednesday\"},\"on Wednesday\":{day:\"Wednesday\"},\"Thursday\":{day:\"Thursday\"},\"on Thursday\":{day:\"Thursday\"},\"Friday\":{day:\"Friday\"},\"on Friday\":{day:\"Friday\"},\"Saturday\":{day:\"Saturday\"},\"on Saturday\":{day:\"Saturday\"},\"Sunday\":{day:\"Sunday\"},\"on Sunday\":{day:\"Sunday\"},//times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n\"at one\":{time:\"01:00\"},\"at two\":{time:\"02:00\"},\"at three\":{time:\"03:00\"},\"at four\":{time:\"04:00\"},\"at five\":{time:\"05:00\"},\"at six\":{time:\"06:00\"},\"at seven\":{time:\"07:00\"},\"at eight\":{time:\"08:00\"},\"at nine\":{time:\"09:00\"},\"at ten\":{time:\"10:00\"},\"at eleven\":{time:\"11:00\"},\"at twelve\":{time:\"12:00\"},\"at thirteen\":{time:\"13:00\"},\"at fourteen\":{time:\"14:00\"},\"at fifteen\":{time:\"15:00\"},\"at sixteen\":{time:\"16:00\"},\"at seventeen\":{time:\"17:00\"},\"at eighteen\":{time:\"18:00\"},\"at nineteen\":{time:\"19:00\"},\"at twenty\":{time:\"20:00\"},\"at twenty one\":{time:\"21:00\"},\"at twenty two\":{time:\"22:00\"},\"at twenty three\":{time:\"23:00\"},\"at twenty four\":{time:\"00:00\"},\"one\":{time:\"01:00\"},\"two\":{time:\"02:00\"},\"three\":{time:\"03:00\"},\"four\":{time:\"04:00\"},\"five\":{time:\"05:00\"},\"six\":{time:\"06:00\"},\"seven\":{time:\"07:00\"},\"eight\":{time:\"08:00\"},\"nine\":{time:\"09:00\"},\"ten\":{time:\"10:00\"},\"eleven\":{time:\"11:00\"},\"twelve\":{time:\"12:00\"},\"thirteen\":{time:\"13:00\"},\"fourteen\":{time:\"14:00\"},\"fifteen\":{time:\"15:00\"},\"sixteen\":{time:\"16:00\"},\"seventeen\":{time:\"17:00\"},\"eighteen\":{time:\"18:00\"},\"nineteen\":{time:\"19:00\"},\"twenty\":{time:\"20:00\"},\"twenty one\":{time:\"21:00\"},\"twenty two\":{time:\"22:00\"},\"twenty three\":{time:\"23:00\"},\"twenty four\":{time:\"00:00\"},\"at 1\":{time:\"01:00\"},\"at 2\":{time:\"02:00\"},\"at 3\":{time:\"03:00\"},\"at 4\":{time:\"04:00\"},\"at 5\":{time:\"05:00\"},\"at 6\":{time:\"06:00\"},\"at 7\":{time:\"07:00\"},\"at 8\":{time:\"08:00\"},\"at 9\":{time:\"09:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 13\":{time:\"13:00\"},\"at 14\":{time:\"14:00\"},\"at 15\":{time:\"15:00\"},\"at 16\":{time:\"16:00\"},\"at 17\":{time:\"17:00\"},\"at 18\":{time:\"18:00\"},\"at 19\":{time:\"19:00\"},\"at 20\":{time:\"20:00\"},\"at 21\":{time:\"21:00\"},\"at 22\":{time:\"22:00\"},\"at 23\":{time:\"23:00\"},\"at 24\":{time:\"00:00\"},\"1\":{time:\"01:00\"},\"2\":{time:\"02:00\"},\"3\":{time:\"03:00\"},\"4\":{time:\"04:00\"},\"5\":{time:\"05:00\"},\"6\":{time:\"06:00\"},\"7\":{time:\"07:00\"},\"8\":{time:\"08:00\"},\"9\":{time:\"09:00\"},\"10\":{time:\"10:00\"},\"11\":{time:\"11:00\"},\"12\":{time:\"12:00\"},\"13\":{time:\"13:00\"},\"14\":{time:\"14:00\"},\"15\":{time:\"15:00\"},\"16\":{time:\"16:00\"},\"17\":{time:\"17:00\"},\"18\":{time:\"18:00\"},\"19\":{time:\"19:00\"},\"20\":{time:\"20:00\"},\"21\":{time:\"21:00\"},\"22\":{time:\"22:00\"},\"23\":{time:\"23:00\"},\"24\":{time:\"00:00\"}};//second grammar for trues and falses\nconst grammar2={\"yes\":true,\"Yes\":true,\"yes of course\":true,\"Yes of course\":true,\"sure\":true,\"Sure\":true,\"absolutely\":true,\"Absolutely\":true,\"perfect\":true,\"Perfect\":true,\"no\":false,\"No\":false,\"no way\":false,\"No way\":false};const commands={\"help\":\"h\",\"Help\":\"H\"};const grammar3={\"count\":0};export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{initial:\"prompt\",on:{RECOGNISED:[{target:\"query\",cond:context=>!(context.recResult in commands),actions:[assign(context=>{return{option:context.recResult};}),assign(context=>{grammar3[\"count\"]=0;})]},{target:\"help1\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"welcome.maxspeech1\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"What would you like to do?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},maxspeech1:_objectSpread({},speech(\"You have not responded. What is it you would like to do?\")),ask:{entry:[listen(),send('MAXSPEECH',{delay:5000})]}}},help1:_objectSpread({},helpm(\"Please, tell me what you want to do.\",\"welcome\")),query:{invoke:{id:\"rasa\",src:(context,event)=>nluRequest(context.option),onDone:{target:\"menu\",actions:[assign((context,event)=>{return{option:event.data.intent.name};}),(context,event)=>console.log(event.data)]},onError:{target:\"welcome\",actions:(context,event)=>console.log(event.data)}}},menu:{initial:\"prompt\",on:{ENDSPEECH:[{target:\"todo\",cond:context=>context.option===\"todo\"},{target:\"timer\",cond:context=>context.option===\"timer\"},{target:\"appointment\",cond:context=>context.option===\"appointment\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. I understand，you want a ${context.option}.\"}))}}},todo:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\s create a to do item\"}))}}},timer:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\s create a timer\"}))}}},appointment:{initial:\"prompt\",on:{ENDSPEECH:\"who\"},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Let\\s create an appointment\"}))}}},who:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help2\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"who.maxspeech2\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"Who\\re you meeting with?\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech2:_objectSpread({},speech(\"You didn\\t respond. Which person are you meeting with?\")),nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},help2:_objectSpread({},helpm(\"Please, tell me the name.\",\"who\")),day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:[assign(context=>{return{day:grammar[context.recResult].day};}),assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")],target:\"wholeday\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help3\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"day.maxspeech3\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". What day is your meeting on?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech3:_objectSpread({},speech(\"You have not responded. Please, state a day\")),nomatch:{entry:say(\"Sorry, I don't know which day you are talking about.\"),on:{ENDSPEECH:\"prompt\"}}}},help3:_objectSpread({},helpm(\"Please tell me the day.\",\"day\")),wholeday:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"notime\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{cond:context=>grammar2[context.recResult]===false,target:\"whattime\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help4\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"wholeday.maxspeech4\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Good, on \".concat(context.day,\". Will it take the whole day?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech4:_objectSpread({},speech(\"You did not respond, say a decision\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help4:_objectSpread({},helpm(\"Please tell me the decision\",\"wholeday\")),notime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{cond:context=>grammar2[context.recResult]===false,target:\"who\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help5\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"notime.maxspeech5\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Great. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech5:_objectSpread({},speech(\"You did not respond, please confirm.\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help5:_objectSpread({},helpm(\"Please confirm it\",\"notime\")),whattime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:[assign(context=>{return{time:grammar[context.recResult].time};}),assign(context=>{grammar3[\"count\"]=0;})],target:\"withtime\"},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help6\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"whattime.maxspeech6\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:say(\"What time is your meeting\"),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech6:_objectSpread({},speech(\"You did not respond. Please, state a time\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help6:_objectSpread({},helpm(\"Please, tell me the time\",\"whattime\")),withtime:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>grammar2[context.recResult]===true,target:\"Finished\",actions:assign(context=>{grammar3[\"count\"]=0;})},{cond:context=>grammar2[context.recResult]===false,target:\"who\",actions:[assign(context=>{grammar3[\"count\"]=0;}),cancel(\"maxsp\")]},{target:\".nomatch\",cond:context=>!(context.recResult in commands),actions:cancel(\"maxsp\")},{target:\"help7\",cond:context=>context.recResult in commands}],MAXSPEECH:[{target:\"withtime.maxspeech7\",cond:context=>grammar3[\"count\"]<=2,actions:assign(context=>{grammar3[\"count\"]=grammar3[\"count\"]+1;})},{target:\"#root.dm.init\",cond:context=>grammar3[\"count\"]>2,actions:assign(context=>{grammar3[\"count\"]=0;})}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Great. Do you want to me create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},hist:{type:\"history\"},ask:{entry:[listen(),send('MAXSPEECH',{delay:5000,id:\"maxsp\"})]},maxspeech7:_objectSpread({},speech(\"You did not respond, please confirm.\")),nomatch:{entry:say(\"Please repeat it again\"),on:{ENDSPEECH:\"prompt\"}}}},help7:_objectSpread({},helpm(\"Please confirm\",\"withtime\")),Finished:{initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"Your appointment has been created!\")}}}}};/* RASA API\n *  */const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl=\"https://intents-oyousuf.herokuapp.com/model/parse\";const nluRequest=text=>fetch(new Request(proxyurl+rasaurl,{method:\"POST\",headers:{\"Origin\":\"http://localhost:3000/react-xstate-colourchanger\"},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(text,\"\\\"}\")})).then(data=>data.json());","map":{"version":3,"sources":["C:/Users/User/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","actions","cancel","say","text","_context","type","value","listen","promptAndAsk","prompt","speechprompt","initial","states","entry","on","ENDSPEECH","hist","maxspeech","speech","ask","delay","helpm","name","grammar","person","day","time","grammar2","commands","grammar3","dmMachine","init","CLICK","welcome","RECOGNISED","target","cond","context","recResult","option","MAXSPEECH","maxspeech1","help1","query","invoke","id","src","event","nluRequest","onDone","data","intent","console","log","onError","menu","todo","timer","appointment","who","maxspeech2","nomatch","help2","maxspeech3","help3","wholeday","maxspeech4","help4","notime","maxspeech5","help5","whattime","maxspeech6","help6","withtime","maxspeech7","help7","Finished","proxyurl","rasaurl","fetch","Request","method","headers","body","then","json"],"mappings":"8JAAA,OAAwBA,IAAxB,CAAsCC,MAAtC,CAA8CC,OAA9C,KAA4D,QAA5D,CACA,MAAO,eAAP,C,KAMOC,CAAAA,M,CAAQD,O,CAARC,M,CAEP,QAASC,CAAAA,GAAT,CAAaC,IAAb,CAAyD,CACrD,MAAOL,CAAAA,IAAI,CAAEM,QAAD,GAA2B,CAAEC,IAAI,CAAE,OAAR,CAAiBC,KAAK,CAAEH,IAAxB,CAA3B,CAAD,CAAX,CACH,CAED,QAASI,CAAAA,MAAT,EAAgD,CAC5C,MAAOT,CAAAA,IAAI,CAAC,QAAD,CAAX,CACH,CAED,QAASU,CAAAA,YAAT,CAAsBC,MAAtB,CAAsCC,YAAtC,CAAqG,CACjG,MAAQ,CACJC,OAAO,CAAE,QADL,CAEJC,MAAM,CAAE,CACJH,MAAM,CAAE,CACJI,KAAK,CAAEX,GAAG,CAACO,MAAD,CADN,CAEJK,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CAFA,CADJ,CAKJC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CALF,CAMJY,SAAS,kBACFC,MAAM,CAACR,YAAD,CADJ,CANL,CASJS,GAAG,CAAE,CACDN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAd,CAAf,CADN,CATD,CAFJ,CAAR,CAeH,CAGD,QAASC,CAAAA,KAAT,CAAeZ,MAAf,CAA+Ba,IAA/B,CAAsF,CAClF,MAAQ,CAACT,KAAK,CAAEX,GAAG,CAACO,MAAD,CAAX,CACCK,EAAE,CAAE,CAACC,SAAS,CAAEO,IAAI,CAAC,OAAjB,CADL,CAAR,CAEH,CAED,QAASJ,CAAAA,MAAT,CAAgBT,MAAhB,CAAyE,CACrE,MAAQ,CAACI,KAAK,CAAEX,GAAG,CAACO,MAAD,CAAX,CACCK,EAAE,CAAE,CAACC,SAAS,CAAE,KAAZ,CADL,CAAR,CAGH,CAED,KAAMQ,CAAAA,OAA8E,CAAG,CACnF;AACA,OAAQ,CAAEC,MAAM,CAAE,gBAAV,CAF2E,CAGnF,OAAQ,CAAEA,MAAM,CAAE,iBAAV,CAH2E,CAInF,QAAS,CAAEA,MAAM,CAAE,iBAAV,CAJ0E,CAKnF,SAAU,CAAEA,MAAM,CAAE,uBAAV,CALyE,CAMnF,WAAY,CAAEA,MAAM,CAAE,qBAAV,CANuE,CAOnF,UAAW,CAAEA,MAAM,CAAE,uBAAV,CAPwE,CASnF,OAAQ,CAAEA,MAAM,CAAE,gBAAV,CAT2E,CAUnF,OAAQ,CAAEA,MAAM,CAAE,iBAAV,CAV2E,CAWnF,QAAS,CAAEA,MAAM,CAAE,iBAAV,CAX0E,CAYnF,SAAU,CAAEA,MAAM,CAAE,uBAAV,CAZyE,CAanF,WAAY,CAAEA,MAAM,CAAE,qBAAV,CAbuE,CAcnF,UAAW,CAAEA,MAAM,CAAE,uBAAV,CAdwE,CAgBnF;AACA,MAAO,CAAEA,MAAM,CAAE,SAAV,CAjB4E,CAkBnF,OAAQ,CAAEA,MAAM,CAAE,SAAV,CAlB2E,CAmBnF,UAAW,CAAEA,MAAM,CAAE,cAAV,CAnBwE,CAoBnF,QAAS,CAAEA,MAAM,CAAE,cAAV,CApB0E,CAqBnF,WAAY,CAAEA,MAAM,CAAE,kBAAV,CArBuE,CAsBnF,OAAQ,CAAEA,MAAM,CAAE,YAAV,CAtB2E,CAuBnF,OAAQ,CAAEA,MAAM,CAAE,cAAV,CAvB2E,CAyBnF,MAAO,CAAEA,MAAM,CAAE,SAAV,CAzB4E,CA0BnF,OAAQ,CAAEA,MAAM,CAAE,SAAV,CA1B2E,CA2BnF,UAAW,CAAEA,MAAM,CAAE,cAAV,CA3BwE,CA4BnF,QAAS,CAAEA,MAAM,CAAE,cAAV,CA5B0E,CA6BnF,WAAY,CAAEA,MAAM,CAAE,kBAAV,CA7BuE,CA8BnF,OAAQ,CAAEA,MAAM,CAAE,YAAV,CA9B2E,CA+BnF,OAAQ,CAAEA,MAAM,CAAE,cAAV,CA/B2E,CAiCnF;AACA,SAAU,CAAEC,GAAG,CAAE,QAAP,CAlCyE,CAmCnF,YAAa,CAAEA,GAAG,CAAE,QAAP,CAnCsE,CAoCnF,UAAW,CAAEA,GAAG,CAAE,SAAP,CApCwE,CAqCnF,aAAc,CAAEA,GAAG,CAAE,SAAP,CArCqE,CAsCnF,YAAa,CAAEA,GAAG,CAAE,WAAP,CAtCsE,CAuCnF,eAAgB,CAAEA,GAAG,CAAE,WAAP,CAvCmE,CAwCnF,WAAY,CAAEA,GAAG,CAAE,UAAP,CAxCuE,CAyCnF,cAAe,CAAEA,GAAG,CAAE,UAAP,CAzCoE,CA0CnF,SAAU,CAAEA,GAAG,CAAE,QAAP,CA1CyE,CA2CnF,YAAa,CAAEA,GAAG,CAAE,QAAP,CA3CsE,CA4CnF,WAAY,CAAEA,GAAG,CAAE,UAAP,CA5CuE,CA6CnF,cAAe,CAAEA,GAAG,CAAE,UAAP,CA7CoE,CA8CnF,SAAU,CAAEA,GAAG,CAAE,QAAP,CA9CyE,CA+CnF,YAAa,CAAEA,GAAG,CAAE,QAAP,CA/CsE,CAiDnF;AACA,SAAU,CAAEC,IAAI,CAAE,OAAR,CAlDyE,CAmDnF,SAAU,CAAEA,IAAI,CAAE,OAAR,CAnDyE,CAoDnF,WAAY,CAAEA,IAAI,CAAE,OAAR,CApDuE,CAqDnF,UAAW,CAAEA,IAAI,CAAE,OAAR,CArDwE,CAsDnF,UAAW,CAAEA,IAAI,CAAE,OAAR,CAtDwE,CAuDnF,SAAU,CAAEA,IAAI,CAAE,OAAR,CAvDyE,CAwDnF,WAAY,CAAEA,IAAI,CAAE,OAAR,CAxDuE,CAyDnF,WAAY,CAAEA,IAAI,CAAE,OAAR,CAzDuE,CA0DnF,UAAW,CAAEA,IAAI,CAAE,OAAR,CA1DwE,CA2DnF,SAAU,CAAEA,IAAI,CAAE,OAAR,CA3DyE,CA4DnF,YAAa,CAAEA,IAAI,CAAE,OAAR,CA5DsE,CA6DnF,YAAa,CAAEA,IAAI,CAAE,OAAR,CA7DsE,CA8DnF,cAAe,CAAEA,IAAI,CAAE,OAAR,CA9DoE,CA+DnF,cAAe,CAAEA,IAAI,CAAE,OAAR,CA/DoE,CAgEnF,aAAc,CAAEA,IAAI,CAAE,OAAR,CAhEqE,CAiEnF,aAAc,CAAEA,IAAI,CAAE,OAAR,CAjEqE,CAkEnF,eAAgB,CAAEA,IAAI,CAAE,OAAR,CAlEmE,CAmEnF,cAAe,CAAEA,IAAI,CAAE,OAAR,CAnEoE,CAoEnF,cAAe,CAAEA,IAAI,CAAE,OAAR,CApEoE,CAqEnF,YAAa,CAAEA,IAAI,CAAE,OAAR,CArEsE,CAsEnF,gBAAiB,CAAEA,IAAI,CAAE,OAAR,CAtEkE,CAuEnF,gBAAiB,CAAEA,IAAI,CAAE,OAAR,CAvEkE,CAwEnF,kBAAmB,CAAEA,IAAI,CAAE,OAAR,CAxEgE,CAyEnF,iBAAkB,CAAEA,IAAI,CAAE,OAAR,CAzEiE,CA2EnF,MAAO,CAAEA,IAAI,CAAE,OAAR,CA3E4E,CA4EnF,MAAO,CAAEA,IAAI,CAAE,OAAR,CA5E4E,CA6EnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CA7E0E,CA8EnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA9E2E,CA+EnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA/E2E,CAgFnF,MAAO,CAAEA,IAAI,CAAE,OAAR,CAhF4E,CAiFnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAjF0E,CAkFnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAlF0E,CAmFnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAnF2E,CAoFnF,MAAO,CAAEA,IAAI,CAAE,OAAR,CApF4E,CAqFnF,SAAU,CAAEA,IAAI,CAAE,OAAR,CArFyE,CAsFnF,SAAU,CAAEA,IAAI,CAAE,OAAR,CAtFyE,CAuFnF,WAAY,CAAEA,IAAI,CAAE,OAAR,CAvFuE,CAwFnF,WAAY,CAAEA,IAAI,CAAE,OAAR,CAxFuE,CAyFnF,UAAW,CAAEA,IAAI,CAAE,OAAR,CAzFwE,CA0FnF,UAAW,CAAEA,IAAI,CAAE,OAAR,CA1FwE,CA2FnF,YAAa,CAAEA,IAAI,CAAE,OAAR,CA3FsE,CA4FnF,WAAY,CAAEA,IAAI,CAAE,OAAR,CA5FuE,CA6FnF,WAAY,CAAEA,IAAI,CAAE,OAAR,CA7FuE,CA8FnF,SAAU,CAAEA,IAAI,CAAE,OAAR,CA9FyE,CA+FnF,aAAc,CAAEA,IAAI,CAAE,OAAR,CA/FqE,CAgGnF,aAAc,CAAEA,IAAI,CAAE,OAAR,CAhGqE,CAiGnF,eAAgB,CAAEA,IAAI,CAAE,OAAR,CAjGmE,CAkGnF,cAAe,CAAEA,IAAI,CAAE,OAAR,CAlGoE,CAoGnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CApG2E,CAqGnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CArG2E,CAsGnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAtG2E,CAuGnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAvG2E,CAwGnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAxG2E,CAyGnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CAzG2E,CA0GnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA1G2E,CA2GnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA3G2E,CA4GnF,OAAQ,CAAEA,IAAI,CAAE,OAAR,CA5G2E,CA6GnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CA7G0E,CA8GnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CA9G0E,CA+GnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CA/G0E,CAgHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAhH0E,CAiHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAjH0E,CAkHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAlH0E,CAmHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAnH0E,CAoHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CApH0E,CAqHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CArH0E,CAsHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAtH0E,CAuHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAvH0E,CAwHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAxH0E,CAyHnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CAzH0E,CA0HnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CA1H0E,CA2HnF,QAAS,CAAEA,IAAI,CAAE,OAAR,CA3H0E,CA6HnF,IAAK,CAAEA,IAAI,CAAE,OAAR,CA7H8E,CA8HnF,IAAK,CAAEA,IAAI,CAAE,OAAR,CA9H8E,CA+HnF,IAAK,CAAEA,IAAI,CAAE,OAAR,CA/H8E,CAgInF,IAAK,CAAEA,IAAI,CAAE,OAAR,CAhI8E,CAiInF,IAAK,CAAEA,IAAI,CAAE,OAAR,CAjI8E,CAkInF,IAAK,CAAEA,IAAI,CAAE,OAAR,CAlI8E,CAmInF,IAAK,CAAEA,IAAI,CAAE,OAAR,CAnI8E,CAoInF,IAAK,CAAEA,IAAI,CAAE,OAAR,CApI8E,CAqInF,IAAK,CAAEA,IAAI,CAAE,OAAR,CArI8E,CAsInF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAtI6E,CAuInF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAvI6E,CAwInF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAxI6E,CAyInF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAzI6E,CA0InF,KAAM,CAAEA,IAAI,CAAE,OAAR,CA1I6E,CA2InF,KAAM,CAAEA,IAAI,CAAE,OAAR,CA3I6E,CA4InF,KAAM,CAAEA,IAAI,CAAE,OAAR,CA5I6E,CA6InF,KAAM,CAAEA,IAAI,CAAE,OAAR,CA7I6E,CA8InF,KAAM,CAAEA,IAAI,CAAE,OAAR,CA9I6E,CA+InF,KAAM,CAAEA,IAAI,CAAE,OAAR,CA/I6E,CAgJnF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAhJ6E,CAiJnF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAjJ6E,CAkJnF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAlJ6E,CAmJnF,KAAM,CAAEA,IAAI,CAAE,OAAR,CAnJ6E,CAoJnF,KAAM,CAAEA,IAAI,CAAE,OAAR,CApJ6E,CAAvF,CAuJA;AACA,KAAMC,CAAAA,QAAQ,CAAE,CAAE,MAAO,IAAT,CAChB,MAAO,IADS,CAEhB,gBAAiB,IAFD,CAGhB,gBAAiB,IAHD,CAIhB,OAAQ,IAJQ,CAKhB,OAAQ,IALQ,CAMhB,aAAc,IANE,CAOhB,aAAc,IAPE,CAQhB,UAAW,IARK,CAShB,UAAW,IATK,CAUhB,KAAM,KAVU,CAWhB,KAAM,KAXU,CAYhB,SAAU,KAZM,CAahB,SAAU,KAbM,CAAhB,CAeA,KAAMC,CAAAA,QAAQ,CAAG,CAAC,OAAQ,GAAT,CAAc,OAAQ,GAAtB,CAAjB,CAEA,KAAMC,CAAAA,QAAQ,CAAE,CAAC,QAAS,CAAV,CAAhB,CAEA,MAAO,MAAMC,CAAAA,SAAmD,CAAI,CAChEnB,OAAO,CAAE,MADuD,CAEhEC,MAAM,CAAE,CACJmB,IAAI,CAAE,CACFjB,EAAE,CAAE,CACAkB,KAAK,CAAE,SADP,CADF,CADF,CAMVC,OAAO,CAAE,CACCtB,OAAO,CAAE,QADV,CAECG,EAAE,CAAE,CACAoB,UAAU,CAAE,CAAC,CACTC,MAAM,CAAE,OADC,CAETC,IAAI,CAAGC,OAAD,EAAa,EAAEA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QAAvB,CAFV,CAGT5B,OAAO,CAAE,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAE,MAAO,CAAEE,MAAM,CAAEF,OAAO,CAACC,SAAlB,CAAP,CAAsC,CAAtD,CAAP,CAA+DvC,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAArE,CAHA,CAAD,CAMZ,CAACM,MAAM,CAAE,OAAT,CACAC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QADxC,CANY,CADZ,CASAY,SAAS,CAAE,CAAC,CAACL,MAAM,CAAC,oBAAR,CACZC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,EAAqB,CAD5B,CAEZ7B,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkBA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAApC,CAAuC,CAAvD,CAFH,CAAD,CAGT,CAACM,MAAM,CAAE,eAAT,CACFC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,CAAoB,CADrC,CAEF7B,OAAO,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAFZ,CAHS,CATX,CAFL,CAkBCjB,MAAM,CAAE,CACJH,MAAM,CAAE,CACRI,KAAK,CAAEX,GAAG,CAAC,4BAAD,CADF,CAERY,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CAFI,CADJ,CAKRC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CALE,CAMLoC,UAAU,kBACNvB,MAAM,CAAC,0DAAD,CADA,CANL,CASRC,GAAG,CAAE,CACDN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAd,CAAf,CADN,CATG,CAlBT,CANC,CAuCJsB,KAAK,kBACErB,KAAK,CAAC,sCAAD,CAAwC,SAAxC,CADP,CAvCD,CA0CVsB,KAAK,CAAE,CACGC,MAAM,CAAE,CACJC,EAAE,CAAE,MADA,CAEJC,GAAG,CAAE,CAACT,OAAD,CAAUU,KAAV,GAAoBC,UAAU,CAACX,OAAO,CAACE,MAAT,CAF/B,CAGJU,MAAM,CAAE,CACJd,MAAM,CAAE,MADJ,CAEJnC,OAAO,CAAE,CAACD,MAAM,CAAC,CAACsC,OAAD,CAAUU,KAAV,GAAoB,CAAE,MAAQ,CAACR,MAAM,CAAEQ,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkB7B,IAA3B,CAAR,CAA0C,CAAjE,CAAP,CACT,CAACe,OAAD,CAAsBU,KAAtB,GAAqCK,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,IAAlB,CAD5B,CAFL,CAHJ,CASJI,OAAO,CAAE,CACLnB,MAAM,CAAE,SADH,CAELnC,OAAO,CAAE,CAACqC,OAAD,CAAUU,KAAV,GAAoBK,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,IAAlB,CAFxB,CATL,CADX,CA1CG,CA2DJK,IAAI,CAAE,CACF5C,OAAO,CAAE,QADP,CAEFG,EAAE,CAAE,CACAC,SAAS,CAAE,CACP,CAAEoB,MAAM,CAAE,MAAV,CAAkBC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACE,MAAR,GAAmB,MAAxD,CADO,CAEP,CAAEJ,MAAM,CAAE,OAAV,CAAmBC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACE,MAAR,GAAmB,OAAzD,CAFO,CAGP,CAAEJ,MAAM,CAAE,aAAV,CAAyBC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACE,MAAR,GAAmB,aAA/D,CAHO,CADX,CAFF,CASF3B,MAAM,CAAE,CACJH,MAAM,CAAE,CACJI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACtBhC,IAAI,CAAE,OADgB,CAEtBC,KAAK,CAAE,gDAFe,CAAd,CAAD,CADP,CADJ,CATN,CA3DF,CA+EJkD,IAAI,CAAE,CACF7C,OAAO,CAAE,QADP,CAEFG,EAAE,CAAE,CAAEC,SAAS,CAAE,MAAb,CAFF,CAGFH,MAAM,CAAE,CACJH,MAAM,CAAE,CACJI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACtBhC,IAAI,CAAE,OADgB,CAEtBC,KAAK,CAAE,2BAFe,CAAd,CAAD,CADP,CADJ,CAHN,CA/EF,CA2FJmD,KAAK,CAAE,CACH9C,OAAO,CAAE,QADN,CAEHG,EAAE,CAAE,CAAEC,SAAS,CAAE,MAAb,CAFD,CAGHH,MAAM,CAAE,CACJH,MAAM,CAAE,CACJI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACtBhC,IAAI,CAAE,OADgB,CAEtBC,KAAK,CAAE,sBAFe,CAAd,CAAD,CADP,CADJ,CAHL,CA3FH,CAwGJoD,WAAW,CAAE,CACT/C,OAAO,CAAE,QADA,CAETG,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CAFK,CAGTH,MAAM,CAAE,CACJH,MAAM,CAAE,CACJI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACtBhC,IAAI,CAAE,OADgB,CAEtBC,KAAK,CAAE,6BAFe,CAAd,CAAD,CADP,CADJ,CAHC,CAxGT,CAmHJqD,GAAG,CAAE,CACDhD,OAAO,CAAE,QADR,CAEDG,EAAE,CAAE,CACAoB,UAAU,CAAE,CAAC,CACTE,IAAI,CAAGC,OAAD,EAAa,WAAad,OAAO,CAACc,OAAO,CAACC,SAAT,CAAP,EAA8B,EAA3C,CADV,CAETtC,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAE,MAAO,CAAEb,MAAM,CAAED,OAAO,CAACc,OAAO,CAACC,SAAT,CAAP,CAA2Bd,MAArC,CAAP,CAAsD,CAAtE,CAFN,CAGTW,MAAM,CAAE,KAHC,CAAD,CAMZ,CAAEA,MAAM,CAAE,UAAV,CACCC,IAAI,CAAGC,OAAD,EAAa,EAAEA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QAAvB,CADpB,CAEC5B,OAAO,CAAEC,MAAM,CAAC,OAAD,CAFhB,CANY,CASX,CAACkC,MAAM,CAAE,OAAT,CACAC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QADxC,CATW,CADZ,CAYCY,SAAS,CAAE,CAAC,CAACL,MAAM,CAAC,gBAAR,CACZC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,EAAqB,CAD5B,CAEb7B,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkBA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAApC,CAAuC,CAAvD,CAFF,CAAD,CAGV,CAACM,MAAM,CAAE,eAAT,CACFC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,CAAoB,CADrC,CAEF7B,OAAO,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAFZ,CAHU,CAZZ,CAFH,CAqBDjB,MAAM,CAAE,CACJH,MAAM,CAAE,CACJI,KAAK,CAAEX,GAAG,CAAC,0BAAD,CADN,CAEJY,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CAFA,CADJ,CAKJC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CALF,CAMJc,GAAG,CAAE,CACDN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAcyB,EAAE,CAAE,OAAlB,CAAd,CAAf,CADN,CAND,CASJe,UAAU,kBACH1C,MAAM,CAAC,wDAAD,CADH,CATN,CAYJ2C,OAAO,CAAE,CACLhD,KAAK,CAAEX,GAAG,CAAC,yBAAD,CADL,CAELY,EAAE,CAAE,CAAEC,SAAS,CAAG,QAAd,CAFC,CAZL,CArBP,CAnHD,CA2JJ+C,KAAK,kBACEzC,KAAK,CAAC,2BAAD,CAA6B,KAA7B,CADP,CA3JD,CA8JJI,GAAG,CAAE,CACDd,OAAO,CAAE,QADR,CAEDG,EAAE,CAAE,CACHoB,UAAU,CAAE,CAAC,CACTE,IAAI,CAAGC,OAAD,EAAa,QAAUd,OAAO,CAACc,OAAO,CAACC,SAAT,CAAP,EAA8B,EAAxC,CADV,CAEZtC,OAAO,CAAE,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAE,MAAO,CAAEZ,GAAG,CAAEF,OAAO,CAACc,OAAO,CAACC,SAAT,CAAP,CAA2Bb,GAAlC,CAAP,CAAgD,CAAhE,CAAP,CAA0E1B,MAAM,CAAEsC,OAAD,EAAW,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAoB,CAApB,CAAuB,CAArC,CAAhF,CAAwH5B,MAAM,CAAC,OAAD,CAA9H,CAFG,CAGZkC,MAAM,CAAE,UAHI,CAAD,CAMf,CAAEA,MAAM,CAAE,UAAV,CACMC,IAAI,CAAGC,OAAD,EAAa,EAAEA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QAAvB,CADzB,CAEM5B,OAAO,CAAEC,MAAM,CAAC,OAAD,CAFrB,CANe,CAST,CAACkC,MAAM,CAAE,OAAT,CACAC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QADxC,CATS,CADT,CAYAY,SAAS,CAAE,CAAC,CAACL,MAAM,CAAC,gBAAR,CACZC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,EAAqB,CAD5B,CAEZ7B,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkBA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAApC,CAAuC,CAAvD,CAFH,CAAD,CAGT,CAACM,MAAM,CAAE,eAAT,CACFC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,CAAoB,CADrC,CAEF7B,OAAO,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAFZ,CAHS,CAZX,CAFH,CAqBDjB,MAAM,CAAE,CACJH,MAAM,CAAE,CACJI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACtBhC,IAAI,CAAE,OADgB,CAEtBC,KAAK,eAAS+B,OAAO,CAACb,MAAjB,kCAFiB,CAAd,CAAD,CADP,CAKVV,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CALM,CADJ,CAQJC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CARF,CASVc,GAAG,CAAE,CACDN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAcyB,EAAE,CAAE,OAAlB,CAAd,CAAf,CADN,CATK,CAYJkB,UAAU,kBACN7C,MAAM,CAAC,6CAAD,CADA,CAZN,CAeV2C,OAAO,CAAE,CACLhD,KAAK,CAAEX,GAAG,CAAC,sDAAD,CADL,CAELY,EAAE,CAAE,CAAEC,SAAS,CAAE,QAAb,CAFC,CAfC,CArBP,CA9JD,CAwMJiD,KAAK,kBACE3C,KAAK,CAAC,yBAAD,CAA2B,KAA3B,CADP,CAxMD,CA4MP4C,QAAQ,CAAE,CACLtD,OAAO,CAAE,QADJ,CAELG,EAAE,CAAE,CACGoB,UAAU,CAAE,CAAC,CACfE,IAAI,CAAGC,OAAD,EAAaV,QAAQ,CAACU,OAAO,CAACC,SAAT,CAAR,GAAgC,IADpC,CAENH,MAAM,CAAE,QAFF,CAGNnC,OAAO,CAAE,CAAED,MAAM,CAAEsC,OAAD,EAAW,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAAlC,CAAR,CAA6C5B,MAAM,CAAC,OAAD,CAAnD,CAHH,CAAD,CAIvB,CACAmC,IAAI,CAAGC,OAAD,EAAaV,QAAQ,CAACU,OAAO,CAACC,SAAT,CAAR,GAAgC,KADnD,CAEAH,MAAM,CAAE,UAFR,CAGkBnC,OAAO,CAAE,CAAED,MAAM,CAAEsC,OAAD,EAAW,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAAlC,CAAR,CAA6C5B,MAAM,CAAC,OAAD,CAAnD,CAH3B,CAJuB,CAUZ,CAAEkC,MAAM,CAAE,UAAV,CACGC,IAAI,CAAGC,OAAD,EAAa,EAAEA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QAAvB,CADtB,CAEG5B,OAAO,CAAEC,MAAM,CAAC,OAAD,CAFlB,CAVY,CAaT,CAACkC,MAAM,CAAE,OAAT,CACAC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QADxC,CAbS,CADf,CAgBMY,SAAS,CAAE,CAAC,CAACL,MAAM,CAAC,qBAAR,CACZC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,EAAqB,CAD5B,CAEhB7B,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkBA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAApC,CAAuC,CAAvD,CAFC,CAAD,CAGb,CAACM,MAAM,CAAE,eAAT,CACFC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,CAAoB,CADrC,CAEF7B,OAAO,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAFZ,CAHa,CAhBjB,CAFC,CAyBLjB,MAAM,CAAE,CACJH,MAAM,CAAE,CACPI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACtBhC,IAAI,CAAE,OADgB,CAE/BC,KAAK,oBAAc+B,OAAO,CAACZ,GAAtB,iCAF0B,CAAd,CAAD,CADJ,CAKPX,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CALG,CADJ,CAQEC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CARR,CASJc,GAAG,CAAE,CACDN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAcyB,EAAE,CAAE,OAAlB,CAAd,CAAf,CADN,CATD,CAYEqB,UAAU,kBACLhD,MAAM,CAAC,qCAAD,CADD,CAZZ,CAeJ2C,OAAO,CAAE,CACRhD,KAAK,CAAEX,GAAG,CAAC,wBAAD,CADF,CAELY,EAAE,CAAE,CAAEC,SAAS,CAAE,QAAb,CAFC,CAfL,CAzBH,CA5MH,CA0PAoD,KAAK,kBACE9C,KAAK,CAAC,6BAAD,CAA+B,UAA/B,CADP,CA1PL,CA6PA+C,MAAM,CAAE,CACPzD,OAAO,CAAE,QADF,CAEJG,EAAE,CAAE,CACHoB,UAAU,CAAE,CAAC,CACZE,IAAI,CAAGC,OAAD,EAAaV,QAAQ,CAACU,OAAO,CAACC,SAAT,CAAR,GAAgC,IADvC,CAEZH,MAAM,CAAE,UAFI,CAGHnC,OAAO,CAAE,CAAED,MAAM,CAAEsC,OAAD,EAAY,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAAnC,CAAR,CAA8C5B,MAAM,CAAC,OAAD,CAApD,CAHN,CAAD,CAIpB,CACFmC,IAAI,CAAGC,OAAD,EAAaV,QAAQ,CAACU,OAAO,CAACC,SAAT,CAAR,GAAgC,KADjD,CAEkBH,MAAM,CAAE,KAF1B,CAGkBnC,OAAO,CAAE,CAAED,MAAM,CAAEsC,OAAD,EAAW,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAAlC,CAAR,CAA6C5B,MAAM,CAAC,OAAD,CAAnD,CAH3B,CAJoB,CAUX,CAAEkC,MAAM,CAAE,UAAV,CACMC,IAAI,CAAGC,OAAD,EAAa,EAAEA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QAAvB,CADzB,CAEM5B,OAAO,CAAEC,MAAM,CAAC,OAAD,CAFrB,CAVW,CAaL,CAACkC,MAAM,CAAE,OAAT,CACAC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QADxC,CAbK,CADT,CAgBIY,SAAS,CAAE,CAAC,CAACL,MAAM,CAAC,mBAAR,CACZC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,EAAqB,CAD5B,CAEpB7B,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkBA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAApC,CAAuC,CAAvD,CAFK,CAAD,CAGjB,CAACM,MAAM,CAAE,eAAT,CACFC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,CAAoB,CADrC,CAEF7B,OAAO,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAFZ,CAHiB,CAhBf,CAFA,CAyBNjB,MAAM,CAAE,CACJH,MAAM,CAAE,CACPI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACtBhC,IAAI,CAAE,OADgB,CAErCC,KAAK,+DAAyD+B,OAAO,CAACb,MAAjE,gBAA8Ea,OAAO,CAACZ,GAAtF,uBAFgC,CAAd,CAAD,CADJ,CAKEX,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CALN,CADJ,CAQEC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CARR,CASJc,GAAG,CAAE,CACJN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAcyB,EAAE,CAAE,OAAlB,CAAd,CAAf,CADH,CATD,CAYEwB,UAAU,kBACFnD,MAAM,CAAC,sCAAD,CADJ,CAZZ,CAcJ2C,OAAO,CAAE,CACRhD,KAAK,CAAEX,GAAG,CAAC,wBAAD,CADF,CAERY,EAAE,CAAE,CAAEC,SAAS,CAAE,QAAb,CAFI,CAdL,CAzBF,CA7PR,CA0SIuD,KAAK,kBACEjD,KAAK,CAAC,mBAAD,CAAqB,QAArB,CADP,CA1ST,CA6SRkD,QAAQ,CAAE,CACT5D,OAAO,CAAE,QADA,CAETG,EAAE,CAAE,CACHoB,UAAU,CAAE,CAAC,CACZE,IAAI,CAAGC,OAAD,EAAa,SAAWd,OAAO,CAACc,OAAO,CAACC,SAAT,CAAP,EAA8B,EAAzC,CADP,CAEZtC,OAAO,CAAE,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAE,MAAO,CAAEX,IAAI,CAAEH,OAAO,CAACc,OAAO,CAACC,SAAT,CAAP,CAA2BZ,IAAnC,CAAP,CAAkD,CAAlE,CAAP,CAA2E3B,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAAjF,CAFG,CAGZM,MAAM,CAAE,UAHI,CAAD,CAMZ,CAAEA,MAAM,CAAE,UAAV,CACkBC,IAAI,CAAGC,OAAD,EAAa,EAAEA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QAAvB,CADrC,CAEkB5B,OAAO,CAAEC,MAAM,CAAC,OAAD,CAFjC,CANY,CASM,CAACkC,MAAM,CAAE,OAAT,CACAC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QADxC,CATN,CADT,CAYeY,SAAS,CAAE,CAAC,CAACL,MAAM,CAAC,qBAAR,CACZC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,EAAqB,CAD5B,CAEpB7B,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkBA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAApC,CAAuC,CAAvD,CAFK,CAAD,CAGjB,CAACM,MAAM,CAAE,eAAT,CACFC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,CAAoB,CADrC,CAEF7B,OAAO,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAFZ,CAHiB,CAZ1B,CAFK,CAqBTjB,MAAM,CAAE,CACPH,MAAM,CAAE,CAAEI,KAAK,CAAEX,GAAG,CAAC,2BAAD,CAAZ,CACRY,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CADI,CADD,CAIOC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CAJb,CAKRc,GAAG,CAAE,CACJN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAcyB,EAAE,CAAE,OAAlB,CAAd,CAAf,CADH,CALG,CAQG2B,UAAU,kBACLtD,MAAM,CAAC,2CAAD,CADD,CARb,CAWT2C,OAAO,CAAE,CACRhD,KAAK,CAAEX,GAAG,CAAC,wBAAD,CADF,CAERY,EAAE,CAAE,CAAEC,SAAS,CAAE,QAAb,CAFI,CAXA,CArBC,CA7SF,CAmVJ0D,KAAK,kBACEpD,KAAK,CAAC,0BAAD,CAA4B,UAA5B,CADP,CAnVD,CAuVVqD,QAAQ,CAAE,CACT/D,OAAO,CAAE,QADA,CAETG,EAAE,CAAE,CACHoB,UAAU,CAAE,CAAC,CACZE,IAAI,CAAGC,OAAD,EAAaV,QAAQ,CAACU,OAAO,CAACC,SAAT,CAAR,GAAgC,IADvC,CAEZH,MAAM,CAAE,UAFI,CAGGnC,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAW,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAAlC,CAHlB,CAAD,CAIX,CACAO,IAAI,CAAGC,OAAD,EAAaV,QAAQ,CAACU,OAAO,CAACC,SAAT,CAAR,GAAgC,KADnD,CAEAH,MAAM,CAAE,KAFR,CAGenC,OAAO,CAAE,CAACD,MAAM,CAAEsC,OAAD,EAAW,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAAlC,CAAP,CAA4C5B,MAAM,CAAC,OAAD,CAAlD,CAHxB,CAJW,CAUX,CAAEkC,MAAM,CAAE,UAAV,CACYC,IAAI,CAAGC,OAAD,EAAa,EAAEA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QAAvB,CAD/B,CAEY5B,OAAO,CAAEC,MAAM,CAAC,OAAD,CAF3B,CAVW,CAaC,CAACkC,MAAM,CAAE,OAAT,CACAC,IAAI,CAAGC,OAAD,EAAaA,OAAO,CAACC,SAAR,GAAqBV,CAAAA,QADxC,CAbD,CADT,CAgBUY,SAAS,CAAE,CAAC,CAACL,MAAM,CAAC,qBAAR,CACZC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,EAAqB,CAD5B,CAEb7B,OAAO,CAAED,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkBA,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAApC,CAAuC,CAAvD,CAFF,CAAD,CAGV,CAACM,MAAM,CAAE,eAAT,CACFC,IAAI,CAAGC,OAAD,EAAaR,QAAQ,CAAC,OAAD,CAAR,CAAoB,CADrC,CAEF7B,OAAO,CAACD,MAAM,CAAEsC,OAAD,EAAa,CAAER,QAAQ,CAAC,OAAD,CAAR,CAAkB,CAAlB,CAAoB,CAApC,CAFZ,CAHU,CAhBrB,CAFK,CAyBRjB,MAAM,CAAE,CACPH,MAAM,CAAE,CACPI,KAAK,CAAEf,IAAI,CAAEuC,OAAD,GAAc,CACzBhC,IAAI,CAAE,OADmB,CAEzBC,KAAK,+DAAyD+B,OAAO,CAACb,MAAjE,gBAA8Ea,OAAO,CAACZ,GAAtF,gBAAgGY,OAAO,CAACX,IAAxG,KAFoB,CAAd,CAAD,CADJ,CAKPZ,EAAE,CAAE,CAAEC,SAAS,CAAE,KAAb,CALG,CADD,CAQKC,IAAI,CAAE,CAACX,IAAI,CAAE,SAAP,CARX,CASPc,GAAG,CAAE,CACJN,KAAK,CAAE,CAACN,MAAM,EAAP,CAAWT,IAAI,CAAC,WAAD,CAAc,CAACsB,KAAK,CAAE,IAAR,CAAcyB,EAAE,CAAE,OAAlB,CAAd,CAAf,CADH,CATE,CAYI8B,UAAU,kBACNzD,MAAM,CAAC,sCAAD,CADA,CAZd,CAeP2C,OAAO,CAAE,CACRhD,KAAK,CAAEX,GAAG,CAAC,wBAAD,CADF,CAERY,EAAE,CAAE,CAAEC,SAAS,CAAE,QAAb,CAFI,CAfF,CAzBA,CAvVA,CAqYJ6D,KAAK,kBACEvD,KAAK,CAAC,gBAAD,CAAkB,UAAlB,CADP,CArYD,CAyYJwD,QAAQ,CAAE,CACClE,OAAO,CAAE,QADV,CAECG,EAAE,CAAE,CAAEC,SAAS,CAAE,MAAb,CAFL,CAGCH,MAAM,CAAE,CACPH,MAAM,CAAE,CAAEI,KAAK,CAAEX,GAAG,CAAC,oCAAD,CAAZ,CADD,CAHT,CAzYN,CAFwD,CAA7D,CAuZJ;AACH,MACA,KAAM4E,CAAAA,QAAQ,CAAG,sCAAjB,CACA,KAAMC,CAAAA,OAAO,CAAG,mDAAhB,CACA,KAAM/B,CAAAA,UAAU,CAAI7C,IAAD,EACf6E,KAAK,CAAC,GAAIC,CAAAA,OAAJ,CAAYH,QAAQ,CAAGC,OAAvB,CAAgC,CAClCG,MAAM,CAAE,MAD0B,CAElCC,OAAO,CAAE,CAAE,SAAU,kDAAZ,CAFyB,CAEyC;AAC3EC,IAAI,wBAAejF,IAAf,OAH8B,CAAhC,CAAD,CAAL,CAKKkF,IALL,CAKUnC,IAAI,EAAIA,IAAI,CAACoC,IAAL,EALlB,CADJ","sourcesContent":["import { MachineConfig, send, Action, assign, actions} from \"xstate\";\nimport \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\n\nconst {cancel}=actions\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nfunction promptAndAsk(prompt: string, speechprompt:string): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({\n        initial: \"prompt\",\n        states: {\n            prompt: {\n                entry: say(prompt),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            hist: {type: \"history\"},\n            maxspeech: {\n                ...speech(speechprompt)\n            },\n            ask: {\n                entry: [listen(), send('MAXSPEECH', {delay: 5000})]\n            },\n        }})\n}\n\n\nfunction helpm(prompt: string, name: string): MachineConfig<SDSContext, any, SDSEvent>{\n    return ({entry: say(prompt),\n             on: {ENDSPEECH: name+\".hist\" }})\n}\n\nfunction speech(prompt: string): MachineConfig<SDSContext, any, SDSEvent>{\n    return ({entry: say(prompt),\n             on: {ENDSPEECH: \"ask\"\n            }})\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string } } = {\n    // Here are some common names in English that I found are easier for the robot to understand.\n    \"John\": { person: \"John Appleseed\" },\n    \"Jack\": { person: \"Jack Orangeseed\" },\n    \"David\": { person: \"David Grapeseed\" },\n    \"Robert\": { person: \"Robert Watermelonseed\" },\n    \"Jennifer\": { person: \"Jennifer Bananaseed\" },\n    \"Jessica\": { person: \"Jessica Pineappleseed\" },\n\n    \"john\": { person: \"john appleseed\" },\n    \"jack\": { person: \"jack orangeseed\" },\n    \"david\": { person: \"david grapeseed\" },\n    \"robert\": { person: \"robert watermelonseed\" },\n    \"jennifer\": { person: \"jennifer bananaseed\" },\n    \"jessica\": { person: \"jessica pineappleseed\" },\n\n    // Here are names of friends I tried at first, but because they're non-English it was incredibly hard to move forward with the robot so I mad the previously mentioned English names above.\n    \"Zhe\": { person: \"Zhe Han\" },\n    \"Siyi\": { person: \"Siyi Gu\" },\n    \"Jae Eun\": { person: \"Jae Eun Hong\" },\n    \"Oreen\": { person: \"Oreen Yousuf\" },\n    \"Angeliki\": { person: \"Angeliki Zagoura\" },\n    \"Flor\": { person: \"Flor Ortiz\" },\n    \"Emma\": { person: \"Emma Wallerö\"},\n\n    \"zhe\": { person: \"zhe han\" },\n    \"siyi\": { person: \"siyi gu\" },\n    \"jae eun\": { person: \"jae eun hong\" },\n    \"oreen\": { person: \"oreen yousuf\" },\n    \"angeliki\": { person: \"angeliki zagoura\" },\n    \"flor\": { person: \"flor ortiz\" },\n    \"emma\": { person: \"emma wallerö\" },\n\n    //Days of the week with alternating potential utterances ('on')\n    \"Monday\": { day: \"Monday\" },\n    \"on Monday\": { day: \"Monday\" },\n    \"Tuesday\": { day: \"Tuesday\" },\n    \"on Tuesday\": { day: \"Tuesday\" },\n    \"Wednesday\": { day: \"Wednesday\" },\n    \"on Wednesday\": { day: \"Wednesday\" },\n    \"Thursday\": { day: \"Thursday\" },\n    \"on Thursday\": { day: \"Thursday\" },\n    \"Friday\": { day: \"Friday\" },\n    \"on Friday\": { day: \"Friday\" },\n    \"Saturday\": { day: \"Saturday\" },\n    \"on Saturday\": { day: \"Saturday\" },\n    \"Sunday\": { day: \"Sunday\" },\n    \"on Sunday\": { day: \"Sunday\" },\n\n    //times with different utterances and spellings/numberings to capture all ways the robot could interpret it\n    \"at one\": { time: \"01:00\" },\n    \"at two\": { time: \"02:00\" },\n    \"at three\": { time: \"03:00\" },\n    \"at four\": { time: \"04:00\" },\n    \"at five\": { time: \"05:00\" },\n    \"at six\": { time: \"06:00\" },\n    \"at seven\": { time: \"07:00\" },\n    \"at eight\": { time: \"08:00\" },\n    \"at nine\": { time: \"09:00\" },\n    \"at ten\": { time: \"10:00\" },\n    \"at eleven\": { time: \"11:00\" },\n    \"at twelve\": { time: \"12:00\" },\n    \"at thirteen\": { time: \"13:00\" },\n    \"at fourteen\": { time: \"14:00\" },\n    \"at fifteen\": { time: \"15:00\" },\n    \"at sixteen\": { time: \"16:00\" },\n    \"at seventeen\": { time: \"17:00\" },\n    \"at eighteen\": { time: \"18:00\" },\n    \"at nineteen\": { time: \"19:00\" },\n    \"at twenty\": { time: \"20:00\" },\n    \"at twenty one\": { time: \"21:00\" },\n    \"at twenty two\": { time: \"22:00\" },\n    \"at twenty three\": { time: \"23:00\" },\n    \"at twenty four\": { time: \"00:00\" },\n\n    \"one\": { time: \"01:00\" },\n    \"two\": { time: \"02:00\" },\n    \"three\": { time: \"03:00\" },\n    \"four\": { time: \"04:00\" },\n    \"five\": { time: \"05:00\" },\n    \"six\": { time: \"06:00\" },\n    \"seven\": { time: \"07:00\" },\n    \"eight\": { time: \"08:00\" },\n    \"nine\": { time: \"09:00\" },\n    \"ten\": { time: \"10:00\" },\n    \"eleven\": { time: \"11:00\" },\n    \"twelve\": { time: \"12:00\" },\n    \"thirteen\": { time: \"13:00\" },\n    \"fourteen\": { time: \"14:00\" },\n    \"fifteen\": { time: \"15:00\" },\n    \"sixteen\": { time: \"16:00\" },\n    \"seventeen\": { time: \"17:00\" },\n    \"eighteen\": { time: \"18:00\" },\n    \"nineteen\": { time: \"19:00\" },\n    \"twenty\": { time: \"20:00\" },\n    \"twenty one\": { time: \"21:00\" },\n    \"twenty two\": { time: \"22:00\" },\n    \"twenty three\": { time: \"23:00\" },\n    \"twenty four\": { time: \"00:00\" },\n\n    \"at 1\": { time: \"01:00\" },\n    \"at 2\": { time: \"02:00\" },\n    \"at 3\": { time: \"03:00\" },\n    \"at 4\": { time: \"04:00\" },\n    \"at 5\": { time: \"05:00\" },\n    \"at 6\": { time: \"06:00\" },\n    \"at 7\": { time: \"07:00\" },\n    \"at 8\": { time: \"08:00\" },\n    \"at 9\": { time: \"09:00\" },\n    \"at 10\": { time: \"10:00\" },\n    \"at 11\": { time: \"11:00\" },\n    \"at 12\": { time: \"12:00\" },\n    \"at 13\": { time: \"13:00\" },\n    \"at 14\": { time: \"14:00\" },\n    \"at 15\": { time: \"15:00\" },\n    \"at 16\": { time: \"16:00\" },\n    \"at 17\": { time: \"17:00\" },\n    \"at 18\": { time: \"18:00\" },\n    \"at 19\": { time: \"19:00\" },\n    \"at 20\": { time: \"20:00\" },\n    \"at 21\": { time: \"21:00\" },\n    \"at 22\": { time: \"22:00\" },\n    \"at 23\": { time: \"23:00\" },\n    \"at 24\": { time: \"00:00\" },\n\n    \"1\": { time: \"01:00\" },\n    \"2\": { time: \"02:00\" },\n    \"3\": { time: \"03:00\" },\n    \"4\": { time: \"04:00\" },\n    \"5\": { time: \"05:00\" },\n    \"6\": { time: \"06:00\" },\n    \"7\": { time: \"07:00\" },\n    \"8\": { time: \"08:00\" },\n    \"9\": { time: \"09:00\" },\n    \"10\": { time: \"10:00\" },\n    \"11\": { time: \"11:00\" },\n    \"12\": { time: \"12:00\" },\n    \"13\": { time: \"13:00\" },\n    \"14\": { time: \"14:00\" },\n    \"15\": { time: \"15:00\" },\n    \"16\": { time: \"16:00\" },\n    \"17\": { time: \"17:00\" },\n    \"18\": { time: \"18:00\" },\n    \"19\": { time: \"19:00\" },\n    \"20\": { time: \"20:00\" },\n    \"21\": { time: \"21:00\" },\n    \"22\": { time: \"22:00\" },\n    \"23\": { time: \"23:00\" },\n    \"24\": { time: \"00:00\" }\n}\n\n//second grammar for trues and falses\nconst grammar2= { \"yes\": true,\n\"Yes\": true,\n\"yes of course\": true,\n\"Yes of course\": true,\n\"sure\": true,\n\"Sure\": true,\n\"absolutely\": true,\n\"Absolutely\": true,\n\"perfect\": true,\n\"Perfect\": true,\n\"no\": false,\n\"No\": false,\n\"no way\": false,\n\"No way\": false\n}\nconst commands = {\"help\": \"h\", \"Help\": \"H\"}\n\nconst grammar3 ={\"count\": 0}\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n\t\twelcome: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    target: \"query\",\n                    cond: (context) => !(context.recResult in commands),\n                    actions: [assign((context) => { return { option: context.recResult } }),assign((context) => { grammar3[\"count\"]=0})],\n                    \n                },\n                {target: \"help1\",\n                cond: (context) => context.recResult in commands }],\n                MAXSPEECH: [{target:\"welcome.maxspeech1\",\n                cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]\n            },\n            states: {        \n                prompt: {\n                entry: say(\"What would you like to do?\"),\n                on: { ENDSPEECH: \"ask\" }\n            },\n            hist: {type: \"history\"},\n               maxspeech1: {\n                ...speech(\"You have not responded. What is it you would like to do?\")\n        },  \n            ask: {\n                entry: [listen(), send('MAXSPEECH', {delay: 5000})]\n            }\n        }   \n    }, \n    \n        help1:{\n            ...helpm(\"Please, tell me what you want to do.\",\"welcome\")\n        },\n\t\tquery: {\n            invoke: {\n                id: \"rasa\",\n                src: (context, event) => nluRequest(context.option),\n                onDone: {\n                    target: \"menu\",\n                    actions: [assign((context, event) => { return  {option: event.data.intent.name} }),\n                    (context: SDSContext, event: any) => console.log(event.data)]\n                    \n                },\n                onError: {\n                    target: \"welcome\",\n                    actions: (context, event) => console.log(event.data)\n                }\n            }\n        },\n      \n        menu: {\n            initial: \"prompt\",\n            on: {\n                ENDSPEECH: [\n                    { target: \"todo\", cond: (context) => context.option === \"todo\" },\n                    { target: \"timer\", cond: (context) => context.option === \"timer\" },\n                    { target: \"appointment\", cond: (context) => context.option === \"appointment\" }\n                ]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: \"OK. I understand，you want a ${context.option}.\"\n                    })),\n        }, \n            }       \n        },\n\n\n        todo: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: \"Let\\s create a to do item\"\n                    }))\n                }}\n        },\n        \n        timer: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"init\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: \"Let\\s create a timer\"\n                    }))\n                }}\n        },\n        \n        \n        appointment: {\n            initial: \"prompt\",\n            on: { ENDSPEECH: \"who\" },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: \"Let\\s create an appointment\"\n                    }))\n                }}\n        },\n        who: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person } }),\n                    target: \"day\"\n\n                },\n                { target: \".nomatch\" ,\n                 cond: (context) => !(context.recResult in commands),\n                 actions: cancel(\"maxsp\")},\n                 {target: \"help2\",\n                 cond: (context) => context.recResult in commands}],\n                 MAXSPEECH: [{target:\"who.maxspeech2\",\n                 cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who\\re you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                hist: {type: \"history\"},\n                ask: {\n                    entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n                },\n                maxspeech2: {\n                    ...speech(\"You didn\\t respond. Which person are you meeting with?\")\n                },\n                nomatch: {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH:  \"prompt\" }\n                \n                }\n             }\n        },\n        help2:{\n            ...helpm(\"Please, tell me the name.\",\"who\")\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n\t            RECOGNISED: [{\n\t                cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n\t\t            actions: [assign((context) => { return { day: grammar[context.recResult].day } }), assign((context)=>{ grammar3[\"count\"] = 0 }), cancel(\"maxsp\")],\n\t\t            target: \"wholeday\"\n\n\t\t        },\t\n\t\t        { target: \".nomatch\" ,\n                cond: (context) => !(context.recResult in commands),\n                actions: cancel(\"maxsp\")},\n                {target: \"help3\",\n                cond: (context) => context.recResult in commands}],\n                MAXSPEECH: [{target:\"day.maxspeech3\",\n                cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t        },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. What day is your meeting on?`\n                    })),\n\t\t            on: { ENDSPEECH: \"ask\" }\n                },\n                hist: {type: \"history\"},\n\t\t        ask: {\n\t\t            entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t            },\n                maxspeech3: {\n                 ...speech(\"You have not responded. Please, state a day\")\n              },\n\t\t        nomatch: {\n\t\t            entry: say(\"Sorry, I don't know which day you are talking about.\"),\n\t\t            on: { ENDSPEECH: \"prompt\" }\n\t            }\t     \n            }\n        },\n        help3:{\n            ...helpm(\"Please tell me the day.\",\"day\")\n        },\n        \n\t    wholeday: {\n\t\t        initial: \"prompt\",\n\t\t        on: {\n\t                RECOGNISED: [{\n\t\t\t            cond: (context) => grammar2[context.recResult] === true,\n                        target: \"notime\",\n                        actions: [ assign((context)=>{ grammar3[\"count\"]=0}), cancel(\"maxsp\")]},\n\t\t\t\t\t\t{\n\t\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\t\ttarget: \"whattime\",\n                        actions: [ assign((context)=>{ grammar3[\"count\"]=0}), cancel(\"maxsp\")]\n\n\t\t            },\n\t                { target: \".nomatch\",\n                    cond: (context) => !(context.recResult in commands),\n                    actions: cancel(\"maxsp\")},\n                    {target: \"help4\",\n                    cond: (context) => context.recResult in commands}],\n                    MAXSPEECH: [{target:\"wholeday.maxspeech4\",\n                    cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t\t        },\n\t\t        states: {\n\t\t            prompt: {\n\t\t\t            entry: send((context) => ({\n\t\t\t                type: \"SPEAK\",\n\t\t\t\t\t\t    value: `Good, on ${context.day}. Will it take the whole day?`\n\t\t\t            })),\n\t\t\t            on: { ENDSPEECH: \"ask\" }\n\t\t            },\n                    hist: {type: \"history\"},\n\t\t            ask: {\n\t\t                entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t            },\n                    maxspeech4: {\n                      ...speech(\"You did not respond, say a decision\")\n                    },\n\t\t            nomatch: {\n\t\t\t            entry: say(\"Please repeat it again\"),\n\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t            }\n\t\t        }\t     \n            },\n            help4:{\n                ...helpm(\"Please tell me the decision\",\"wholeday\")\n            },\n            notime: {\n\t\t           initial: \"prompt\",\n\t               on: {\n\t\t               RECOGNISED: [{ \n\t\t\t               cond: (context) => grammar2[context.recResult] === true,\n\t\t\t               target: \"Finished\",\n                           actions: [ assign((context)=> { grammar3[\"count\"]=0}), cancel(\"maxsp\")]},\n\t\t\t\t\t\t   {\n\t\t\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n                           target: \"who\",\n                           actions: [ assign((context)=>{ grammar3[\"count\"]=0}), cancel(\"maxsp\")]\n\t\t\t\t\t\t   \n\t\t                },\n\t\t                { target: \".nomatch\",\n                        cond: (context) => !(context.recResult in commands),\n                        actions: cancel(\"maxsp\")},\n                        {target: \"help5\",\n                        cond: (context) => context.recResult in commands}],\n                        MAXSPEECH: [{target:\"notime.maxspeech5\",\n                        cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]  \n\t\t            },\n\t\t            states: {\n\t\t                prompt: {\n\t\t\t                entry: send((context) => ({\n\t\t\t                    type: \"SPEAK\",\n\t\t\t\t\t\t\t\tvalue: `Great. Do you want to me create an appointment with ${context.person} on ${context.day} for the whole day?`\n                            })),\n                            on: { ENDSPEECH: \"ask\" }\n\t\t                },\n                        hist: {type: \"history\"},\n\t\t                ask: {\n\t\t\t                entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t                },\n                        maxspeech5: {\n                             ...speech(\"You did not respond, please confirm.\")},\n\t\t                nomatch: {\n\t\t\t                entry: say(\"Please repeat it again\"),\n\t\t\t                on: { ENDSPEECH: \"prompt\" }\n\t\t                }\n                    }\n\t            },\n                help5:{\n                    ...helpm(\"Please confirm it\",\"notime\")\n                },\n\t\t\t\twhattime: {\n\t\t\t\t\tinitial: \"prompt\",\n\t\t\t\t\ton: {\n\t\t\t\t\t\tRECOGNISED: [{\n\t\t\t\t\t\t\tcond: (context) => \"time\" in (grammar[context.recResult] || {}),\n\t\t\t\t\t\t\tactions: [assign((context) => { return { time: grammar[context.recResult].time } }),assign((context) => { grammar3[\"count\"]=0})],\n\t\t\t\t\t\t\ttarget: \"withtime\"\n\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ target: \".nomatch\" ,\n                        cond: (context) => !(context.recResult in commands),\n                        actions: cancel(\"maxsp\")},\n                        {target: \"help6\",\n                        cond: (context) => context.recResult in commands}],\n                        MAXSPEECH: [{target:\"whattime.maxspeech6\",\n                        cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}]  \n\t\t\t\t\t},\n\t\t\t\t\tstates: {\n\t\t\t\t\t\tprompt: { entry: say(\"What time is your meeting\"),\n\t\t\t\t\t\ton: { ENDSPEECH: \"ask\" }\n\t\t\t\t\t},\n                    hist: {type: \"history\"},\n\t\t\t\t\task: {\n\t\t\t\t\t\tentry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t\t\t},\n                maxspeech6: {\n                  ...speech(\"You did not respond. Please, state a time\")\n                },\n\t\t\t\tnomatch: {\n\t\t\t\t\tentry: say(\"Please repeat it again\"),\n\t\t\t\t\ton: { ENDSPEECH: \"prompt\" }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n        help6:{\n            ...helpm(\"Please, tell me the time\",\"whattime\")\n        },\n        \n\t\twithtime: {\n\t\t\tinitial: \"prompt\",\n\t\t\ton: {\n\t\t\t\tRECOGNISED: [{ \n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === true,\n\t\t\t\t\ttarget: \"Finished\",\n                    actions: assign((context)=>{ grammar3[\"count\"]=0})},\n\t\t\t\t\t{\n\t\t\t\t\tcond: (context) => grammar2[context.recResult] === false,\n\t\t\t\t\ttarget: \"who\",\n                    actions: [assign((context)=>{ grammar3[\"count\"]=0}), cancel(\"maxsp\")]\n\n\t\t\t\t },\n\t\t\t\t { target: \".nomatch\",\n                 cond: (context) => !(context.recResult in commands),\n                 actions: cancel(\"maxsp\")},\n                 {target: \"help7\",\n                 cond: (context) => context.recResult in commands}],\n                 MAXSPEECH: [{target:\"withtime.maxspeech7\",\n                 cond: (context) => grammar3[\"count\"] <= 2,\n                actions: assign((context) => { grammar3[\"count\"]=grammar3[\"count\"]+1 } )\n                },{target: \"#root.dm.init\", \n                cond: (context) => grammar3[\"count\"] > 2, \n                actions:assign((context) => { grammar3[\"count\"]=0})}] \n\t\t\t },\n\t\t\t states: {\n\t\t\t\t prompt: {\n\t\t\t\t\t entry: send((context) => ({\n\t\t\t\t\t\t type: \"SPEAK\",\n\t\t\t\t\t\t value: `Great. Do you want to me create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n\t\t\t\t\t })),\n\t\t\t\t\t on: { ENDSPEECH: \"ask\" }\n\t\t\t\t },\n                 hist: {type: \"history\"},\n\t\t\t\t ask: {\n\t\t\t\t\t entry: [listen(), send('MAXSPEECH', {delay: 5000, id: \"maxsp\"})]\n\t\t\t\t },\n                maxspeech7: {\n                 ...speech(\"You did not respond, please confirm.\")\n                },        \n\t\t\t\t nomatch: {\n\t\t\t\t\t entry: say(\"Please repeat it again\"),\n\t\t\t\t\t on: { ENDSPEECH: \"prompt\" }\n\t\t\t\t }\n\t\t\t }\n\t\t},\n        help7:{\n            ...helpm(\"Please confirm\",\"withtime\")\n        },\n        \n        Finished: {\n\t\t                 initial: \"prompt\",\n\t\t                 on: { ENDSPEECH: \"init\" },\n\t\t                 states: {\n\t\t\t                 prompt: { entry: say(\"Your appointment has been created!\")\n\t\t                    },\n\t                    }\n\t                }\t    \n                }\n            })\n\n\n\t\t\t/* RASA API\n *  */\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = \"https://intents-oyousuf.herokuapp.com/model/parse\"\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: \"POST\",\n        headers: { \"Origin\": \"http://localhost:3000/react-xstate-colourchanger\" }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json());\n"]},"metadata":{},"sourceType":"module"}